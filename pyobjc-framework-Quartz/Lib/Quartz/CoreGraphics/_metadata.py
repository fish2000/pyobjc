# Generated file, don't edit
# Source: BridgeSupport/CoreGraphics.bridgesupport
# Last update: Thu Jul 21 17:06:22 2011

import objc, sys

if sys.maxint > 2 ** 32:
    def sel32or64(a, b): return b
else:
    def sel32or64(a, b): return a
if sys.byteorder == 'little':
    def littleOrBig(a, b): return a
else:
    def littleOrBig(a, b): return b

misc = {
    "CGDirectPaletteRef": objc.createOpaquePointerType('CGDirectPaletteRef', b'^{_CGDirectPaletteRef=}'),
    "CGDisplayConfigRef": objc.createOpaquePointerType('CGDisplayConfigRef', b'^{_CGDisplayConfigRef=}'),
    "CGEventTapProxy": objc.createOpaquePointerType('CGEventTapProxy', b'^{__CGEventTapProxy=}'),
    "CGPDFArrayRef": objc.createOpaquePointerType('CGPDFArrayRef', b'^{CGPDFArray=}'),
    "CGPDFContentStreamRef": objc.createOpaquePointerType('CGPDFContentStreamRef', b'^{CGPDFContentStream=}'),
    "CGPDFDictionaryRef": objc.createOpaquePointerType('CGPDFDictionaryRef', b'^{CGPDFDictionary=}'),
    "CGPDFOperatorTableRef": objc.createOpaquePointerType('CGPDFOperatorTableRef', b'^{CGPDFOperatorTable=}'),
    "CGPDFObject": objc.createOpaquePointerType('CGPDFObject', b'^(CGPDFObject=)'),
    "CGPDFScannerRef": objc.createOpaquePointerType('CGPDFScannerRef', b'^{CGPDFScanner=}'),
    "CGPDFStreamRef": objc.createOpaquePointerType('CGPDFStreamRef', b'^{CGPDFStream=}'),
    "CGPDFStringRef": objc.createOpaquePointerType('CGPDFStringRef', b'^{CGPDFString=}'),
    "CGAffineTransform": objc.createStructType('CGAffineTransform', sel32or64(b'{CGAffineTransform="a"f"b"f"c"f"d"f"tx"f"ty"f}', b'{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}'), None),
    "CGDataConsumerCallbacks": objc.createStructType('CGDataConsumerCallbacks', b'{CGDataConsumerCallbacks="putBytes"^?"releaseConsumer"^?}', None),
    "CGDataProviderCallbacks": objc.createStructType('CGDataProviderCallbacks', b'{CGDataProviderCallbacks="getBytes"^?"skipBytes"^?"rewind"^?"releaseProvider"^?}', None),
    "CGDataProviderDirectAccessCallbacks": objc.createStructType('CGDataProviderDirectAccessCallbacks', b'{CGDataProviderDirectAccessCallbacks="getBytePointer"^?"releaseBytePointer"^?"getBytes"^?"releaseProvider"^?}', None),
    "CGDataProviderDirectCallbacks": objc.createStructType('CGDataProviderDirectCallbacks', b'{CGDataProviderDirectCallbacks="version"I"getBytePointer"^?"releaseBytePointer"^?"getBytesAtPosition"^?"releaseInfo"^?}', None),
    "CGDataProviderSequentialCallbacks": objc.createStructType('CGDataProviderSequentialCallbacks', b'{CGDataProviderSequentialCallbacks="version"I"getBytes"^?"skipForward"^?"rewind"^?"releaseInfo"^?}', None),
    "CGDeviceByteColor": objc.createStructType('CGDeviceByteColor', b'{_CGDeviceByteColor="red"C"green"C"blue"C}', None),
    "CGDeviceColor": objc.createStructType('CGDeviceColor', b'{_CGDeviceColor="red"f"green"f"blue"f}', None),
    "CGEventTapInformation": objc.createStructType('CGEventTapInformation', b'{CGEventTapInformation="eventTapID"I"tapPoint"I"options"I"eventsOfInterest"Q"tappingProcess"i"processBeingTapped"i"enabled"Z"minUsecLatency"f"avgUsecLatency"f"maxUsecLatency"f}', None),
    "CGFunctionCallbacks": objc.createStructType('CGFunctionCallbacks', b'{CGFunctionCallbacks="version"I"evaluate"^?"releaseInfo"^?}', None),
    "CGPSConverterCallbacks": objc.createStructType('CGPSConverterCallbacks', b'{CGPSConverterCallbacks="version"I"beginDocument"^?"endDocument"^?"beginPage"^?"endPage"^?"noteProgress"^?"noteMessage"^?"releaseInfo"^?}', None),
    "CGPathElement": objc.createStructType('CGPathElement', b'{CGPathElement="type"i"points"^{CGPoint}}', None),
    "CGPatternCallbacks": objc.createStructType('CGPatternCallbacks', b'{CGPatternCallbacks="version"I"drawPattern"^?"releaseInfo"^?}', None),
    "CGPoint": objc.createStructType('CGPoint', sel32or64(b'{CGPoint="x"f"y"f}', b'{CGPoint="x"d"y"d}'), None),
    "CGRect": objc.createStructType('CGRect', sel32or64(b'{CGRect="origin"{CGPoint="x"f"y"f}"size"{CGSize="width"f"height"f}}', b'{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}'), None),
    "CGScreenUpdateMoveDelta": objc.createStructType('CGScreenUpdateMoveDelta', b'{_CGScreenUpdateMoveDelta="dX"i"dY"i}', None),
    "CGSize": objc.createStructType('CGSize', sel32or64(b'{CGSize="width"f"height"f}', b'{CGSize="width"d"height"d}'), None),
}
constants = '''$CGAffineTransformIdentity@{CGAffineTransform=ffffff}$CGPointZero@{CGPoint=ff}$CGRectInfinite@{CGRect={CGPoint=ff}{CGSize=ff}}$CGRectNull@{CGRect={CGPoint=ff}{CGSize=ff}}$CGRectZero@{CGRect={CGPoint=ff}{CGSize=ff}}$CGSizeZero@{CGSize=ff}$kCGColorBlack@^{__CFString=}$kCGColorClear@^{__CFString=}$kCGColorSpaceGenericGrayGamma2_2@^{__CFString=}$kCGColorSpaceAdobeRGB1998@^{__CFString=}$kCGColorSpaceGenericCMYK@^{__CFString=}$kCGColorSpaceGenericGray@^{__CFString=}$kCGColorSpaceGenericRGB@^{__CFString=}$kCGColorSpaceGenericRGBLinear@^{__CFString=}$kCGColorSpaceSRGB@^{__CFString=}$kCGColorWhite@^{__CFString=}$kCGFontVariationAxisDefaultValue@^{__CFString=}$kCGFontVariationAxisMaxValue@^{__CFString=}$kCGFontVariationAxisMinValue@^{__CFString=}$kCGFontVariationAxisName@^{__CFString=}$kCGPDFContextAllowsCopying@^{__CFString=}$kCGPDFContextAllowsPrinting@^{__CFString=}$kCGPDFContextArtBox@^{__CFString=}$kCGPDFContextAuthor@^{__CFString=}$kCGPDFContextBleedBox@^{__CFString=}$kCGPDFContextCreator@^{__CFString=}$kCGPDFContextCropBox@^{__CFString=}$kCGPDFContextEncryptionKeyLength@^{__CFString=}$kCGPDFContextKeywords@^{__CFString=}$kCGPDFContextMediaBox@^{__CFString=}$kCGPDFContextOutputIntent@^{__CFString=}$kCGPDFContextOutputIntents@^{__CFString=}$kCGPDFContextOwnerPassword@^{__CFString=}$kCGPDFContextSubject@^{__CFString=}$kCGPDFContextTitle@^{__CFString=}$kCGPDFContextTrimBox@^{__CFString=}$kCGPDFContextUserPassword@^{__CFString=}$kCGPDFXDestinationOutputProfile@^{__CFString=}$kCGPDFXInfo@^{__CFString=}$kCGPDFXOutputCondition@^{__CFString=}$kCGPDFXOutputConditionIdentifier@^{__CFString=}$kCGPDFXOutputIntentSubtype@^{__CFString=}$kCGPDFXRegistryName@^{__CFString=}$kCGWindowAlpha@^{__CFString=}$kCGWindowBackingLocationVideoMemory@^{__CFString=}$kCGWindowBounds@^{__CFString=}$kCGWindowIsOnscreen@^{__CFString=}$kCGWindowLayer@^{__CFString=}$kCGWindowMemoryUsage@^{__CFString=}$kCGWindowName@^{__CFString=}$kCGWindowNumber@^{__CFString=}$kCGWindowOwnerName@^{__CFString=}$kCGWindowOwnerPID@^{__CFString=}$kCGWindowSharingState@^{__CFString=}$kCGWindowStoreType@^{__CFString=}$kCGWindowWorkspace@^{__CFString=}$'''
enums = '''$CGDisplayNoErr@0$CGEventNoErr@0$CGFLOAT_DEFINED@1$CGGlyphMax@65534$CGGlyphMin@0$CGPDFDataFormatJPEG2000@2$CGPDFDataFormatJPEGEncoded@1$CGPDFDataFormatRaw@0$CGRectMaxXEdge@2$CGRectMaxYEdge@3$CGRectMinXEdge@0$CGRectMinYEdge@1$kCGAnnotatedSessionEventTap@2$kCGAnyInputEventType@4294967295$kCGAssistiveTechHighWindowLevelKey@20$kCGBackingStoreBuffered@2$kCGBackingStoreNonretained@1$kCGBackingStoreRetained@0$kCGBackstopMenuLevelKey@3$kCGBaseWindowLevelKey@0$kCGBitmapAlphaInfoMask@31$kCGBitmapByteOrder16Big@12288$kCGBitmapByteOrder16Little@4096$kCGBitmapByteOrder32Big@16384$kCGBitmapByteOrder32Little@8192$kCGBitmapByteOrderDefault@0$kCGBitmapByteOrderMask@28672$kCGBitmapFloatComponents@256$kCGBlendModeClear@16$kCGBlendModeColor@14$kCGBlendModeColorBurn@7$kCGBlendModeColorDodge@6$kCGBlendModeCopy@17$kCGBlendModeDarken@4$kCGBlendModeDestinationAtop@24$kCGBlendModeDestinationIn@22$kCGBlendModeDestinationOut@23$kCGBlendModeDestinationOver@21$kCGBlendModeDifference@10$kCGBlendModeExclusion@11$kCGBlendModeHardLight@9$kCGBlendModeHue@12$kCGBlendModeLighten@5$kCGBlendModeLuminosity@15$kCGBlendModeMultiply@1$kCGBlendModeNormal@0$kCGBlendModeOverlay@3$kCGBlendModePlusDarker@26$kCGBlendModePlusLighter@27$kCGBlendModeSaturation@13$kCGBlendModeScreen@2$kCGBlendModeSoftLight@8$kCGBlendModeSourceAtop@20$kCGBlendModeSourceIn@18$kCGBlendModeSourceOut@19$kCGBlendModeXOR@25$kCGCaptureNoFill@1$kCGCaptureNoOptions@0$kCGColorSpaceModelCMYK@2$kCGColorSpaceModelDeviceN@4$kCGColorSpaceModelIndexed@5$kCGColorSpaceModelLab@3$kCGColorSpaceModelMonochrome@0$kCGColorSpaceModelPattern@6$kCGColorSpaceModelRGB@1$kCGColorSpaceModelUnknown@-1$kCGConfigureForAppOnly@0$kCGConfigureForSession@1$kCGConfigurePermanently@2$kCGCursorWindowLevelKey@19$kCGDesktopIconWindowLevelKey@18$kCGDesktopWindowLevelKey@2$kCGDisplayAddFlag@16$kCGDisplayBeginConfigurationFlag@1$kCGDisplayBlendNormal@0.0$kCGDisplayBlendSolidColor@1.0$kCGDisplayDesktopShapeChangedFlag@4096$kCGDisplayDisabledFlag@512$kCGDisplayEnabledFlag@256$kCGDisplayFadeReservationInvalidToken@0$kCGDisplayMirrorFlag@1024$kCGDisplayMovedFlag@2$kCGDisplayRemoveFlag@32$kCGDisplaySetMainFlag@4$kCGDisplaySetModeFlag@8$kCGDisplayUnMirrorFlag@2048$kCGDockWindowLevelKey@7$kCGDraggingWindowLevelKey@12$kCGEncodingFontSpecific@0$kCGEncodingMacRoman@1$kCGErrorApplicationAlreadyRunning@1025$kCGErrorApplicationCanOnlyBeRunInOneSessionAtATime@1026$kCGErrorApplicationIncorrectExecutableFormatFound@1023$kCGErrorApplicationIsLaunching@1024$kCGErrorApplicationNotPermittedToExecute@1016$kCGErrorApplicationRequiresNewerSystem@1015$kCGErrorCannotComplete@1004$kCGErrorClassicApplicationsMustBeLaunchedByClassic@1027$kCGErrorFailure@1000$kCGErrorFirst@1000$kCGErrorForkFailed@1028$kCGErrorIllegalArgument@1001$kCGErrorInvalidConnection@1002$kCGErrorInvalidContext@1003$kCGErrorInvalidOperation@1010$kCGErrorLast@1029$kCGErrorNameTooLong@1005$kCGErrorNoCurrentPoint@1009$kCGErrorNoneAvailable@1011$kCGErrorNotImplemented@1006$kCGErrorRangeCheck@1007$kCGErrorRetryRegistration@1029$kCGErrorSuccess@0$kCGErrorTypeCheck@1008$kCGEventFilterMaskPermitLocalKeyboardEvents@2$kCGEventFilterMaskPermitLocalMouseEvents@1$kCGEventFilterMaskPermitSystemDefinedEvents@4$kCGEventFlagMaskAlphaShift@65536$kCGEventFlagMaskAlternate@524288$kCGEventFlagMaskCommand@1048576$kCGEventFlagMaskControl@262144$kCGEventFlagMaskHelp@4194304$kCGEventFlagMaskNonCoalesced@256$kCGEventFlagMaskNumericPad@2097152$kCGEventFlagMaskSecondaryFn@8388608$kCGEventFlagMaskShift@131072$kCGEventFlagsChanged@12$kCGEventKeyDown@10$kCGEventKeyUp@11$kCGEventLeftMouseDown@1$kCGEventLeftMouseDragged@6$kCGEventLeftMouseUp@2$kCGEventMouseMoved@5$kCGEventMouseSubtypeDefault@0$kCGEventMouseSubtypeTabletPoint@1$kCGEventMouseSubtypeTabletProximity@2$kCGEventNull@0$kCGEventOtherMouseDown@25$kCGEventOtherMouseDragged@27$kCGEventOtherMouseUp@26$kCGEventRightMouseDown@3$kCGEventRightMouseDragged@7$kCGEventRightMouseUp@4$kCGEventScrollWheel@22$kCGEventSourceGroupID@44$kCGEventSourceStateCombinedSessionState@0$kCGEventSourceStateHIDSystemState@1$kCGEventSourceStateID@45$kCGEventSourceStatePrivate@-1$kCGEventSourceUnixProcessID@41$kCGEventSourceUserData@42$kCGEventSourceUserID@43$kCGEventSuppressionStateRemoteMouseDrag@1$kCGEventSuppressionStateSuppressionInterval@0$kCGEventSupressionStateRemoteMouseDrag@1$kCGEventSupressionStateSupressionInterval@0$kCGEventTabletPointer@23$kCGEventTabletProximity@24$kCGEventTapDisabledByTimeout@-2$kCGEventTapDisabledByUserInput@-1$kCGEventTapOptionDefault@0$kCGEventTapOptionListenOnly@1$kCGEventTargetProcessSerialNumber@39$kCGEventTargetUnixProcessID@40$kCGFloatingWindowLevelKey@5$kCGFontIndexInvalid@65535$kCGFontIndexMax@65534$kCGFontPostScriptFormatType1@1$kCGFontPostScriptFormatType3@3$kCGFontPostScriptFormatType42@42$kCGGlyphMax@65534$kCGGradientDrawsAfterEndLocation@2$kCGGradientDrawsBeforeStartLocation@1$kCGHIDEventTap@0$kCGHeadInsertEventTap@0$kCGHelpWindowLevelKey@16$kCGImageAlphaFirst@4$kCGImageAlphaLast@3$kCGImageAlphaNone@0$kCGImageAlphaNoneSkipFirst@6$kCGImageAlphaNoneSkipLast@5$kCGImageAlphaOnly@7$kCGImageAlphaPremultipliedFirst@2$kCGImageAlphaPremultipliedLast@1$kCGInterpolationDefault@0$kCGInterpolationHigh@3$kCGInterpolationLow@2$kCGInterpolationNone@1$kCGKeyboardEventAutorepeat@8$kCGKeyboardEventKeyboardType@10$kCGKeyboardEventKeycode@9$kCGLineCapButt@0$kCGLineCapRound@1$kCGLineCapSquare@2$kCGLineJoinBevel@2$kCGLineJoinMiter@0$kCGLineJoinRound@1$kCGMainMenuWindowLevelKey@8$kCGMaxDisplayReservationInterval@15.0$kCGMaximumWindowLevelKey@14$kCGMinimumWindowLevelKey@1$kCGModalPanelWindowLevelKey@10$kCGMouseButtonCenter@2$kCGMouseButtonLeft@0$kCGMouseButtonRight@1$kCGMouseDownEventMaskingDeadSwitchTimeout@60.0$kCGMouseEventButtonNumber@3$kCGMouseEventClickState@1$kCGMouseEventDeltaX@4$kCGMouseEventDeltaY@5$kCGMouseEventInstantMouser@6$kCGMouseEventNumber@0$kCGMouseEventPressure@2$kCGMouseEventSubtype@7$kCGNormalWindowLevelKey@4$kCGNullDirectDisplay@0$kCGNullWindowID@0$kCGNumReservedWindowLevels@16$kCGNumberOfEventSuppressionStates@2$kCGNumberOfEventSupressionStates@2$kCGNumberOfWindowLevelKeys@21$kCGOverlayWindowLevelKey@15$kCGPDFArtBox@4$kCGPDFBleedBox@2$kCGPDFCropBox@1$kCGPDFMediaBox@0$kCGPDFObjectTypeArray@7$kCGPDFObjectTypeBoolean@2$kCGPDFObjectTypeDictionary@8$kCGPDFObjectTypeInteger@3$kCGPDFObjectTypeName@5$kCGPDFObjectTypeNull@1$kCGPDFObjectTypeReal@4$kCGPDFObjectTypeStream@9$kCGPDFObjectTypeString@6$kCGPDFTrimBox@3$kCGPathEOFill@1$kCGPathEOFillStroke@4$kCGPathElementAddCurveToPoint@3$kCGPathElementAddLineToPoint@1$kCGPathElementAddQuadCurveToPoint@2$kCGPathElementCloseSubpath@4$kCGPathElementMoveToPoint@0$kCGPathFill@0$kCGPathFillStroke@3$kCGPathStroke@2$kCGPatternTilingConstantSpacing@2$kCGPatternTilingConstantSpacingMinimalDistortion@1$kCGPatternTilingNoDistortion@0$kCGPopUpMenuWindowLevelKey@11$kCGRenderingIntentAbsoluteColorimetric@1$kCGRenderingIntentDefault@0$kCGRenderingIntentPerceptual@3$kCGRenderingIntentRelativeColorimetric@2$kCGRenderingIntentSaturation@4$kCGScreenSaverWindowLevelKey@13$kCGScreenUpdateOperationMove@1$kCGScreenUpdateOperationReducedDirtyRectangleCount@-2147483648$kCGScreenUpdateOperationRefresh@0$kCGScrollEventUnitLine@1$kCGScrollEventUnitPixel@0$kCGScrollWheelEventDeltaAxis1@11$kCGScrollWheelEventDeltaAxis2@12$kCGScrollWheelEventDeltaAxis3@13$kCGScrollWheelEventFixedPtDeltaAxis1@93$kCGScrollWheelEventFixedPtDeltaAxis2@94$kCGScrollWheelEventFixedPtDeltaAxis3@95$kCGScrollWheelEventInstantMouser@14$kCGScrollWheelEventIsContinuous@88$kCGScrollWheelEventPointDeltaAxis1@96$kCGScrollWheelEventPointDeltaAxis2@97$kCGScrollWheelEventPointDeltaAxis3@98$kCGSessionEventTap@1$kCGStatusWindowLevelKey@9$kCGTabletEventDeviceID@24$kCGTabletEventPointButtons@18$kCGTabletEventPointPressure@19$kCGTabletEventPointX@15$kCGTabletEventPointY@16$kCGTabletEventPointZ@17$kCGTabletEventRotation@22$kCGTabletEventTangentialPressure@23$kCGTabletEventTiltX@20$kCGTabletEventTiltY@21$kCGTabletEventVendor1@25$kCGTabletEventVendor2@26$kCGTabletEventVendor3@27$kCGTabletProximityEventCapabilityMask@36$kCGTabletProximityEventDeviceID@31$kCGTabletProximityEventEnterProximity@38$kCGTabletProximityEventPointerID@30$kCGTabletProximityEventPointerType@37$kCGTabletProximityEventSystemTabletID@32$kCGTabletProximityEventTabletID@29$kCGTabletProximityEventVendorID@28$kCGTabletProximityEventVendorPointerSerialNumber@34$kCGTabletProximityEventVendorPointerType@33$kCGTabletProximityEventVendorUniqueID@35$kCGTailAppendEventTap@1$kCGTextClip@7$kCGTextFill@0$kCGTextFillClip@4$kCGTextFillStroke@2$kCGTextFillStrokeClip@6$kCGTextInvisible@3$kCGTextStroke@1$kCGTextStrokeClip@5$kCGTornOffMenuWindowLevelKey@6$kCGUtilityWindowLevelKey@17$kCGWindowBackingCFNumberType@3$kCGWindowIDCFNumberType@3$kCGWindowImageBoundsIgnoreFraming@1$kCGWindowImageDefault@0$kCGWindowImageOnlyShadows@4$kCGWindowImageShouldBeOpaque@2$kCGWindowListExcludeDesktopElements@16$kCGWindowListOptionAll@0$kCGWindowListOptionIncludingWindow@8$kCGWindowListOptionOnScreenAboveWindow@2$kCGWindowListOptionOnScreenBelowWindow@4$kCGWindowListOptionOnScreenOnly@1$kCGWindowSharingCFNumberType@3$kCGWindowSharingNone@0$kCGWindowSharingReadOnly@1$kCGWindowSharingReadWrite@2$'''
misc.update({'CGFLOAT_IS_DOUBLE': sel32or64(0, 1), 'CGFLOAT_MAX': sel32or64(3.4028234663852886e+38, 1.7976931348623157e+308), 'kCGBitmapByteOrder16Host': littleOrBig(4096, 12288), 'CGFLOAT_MIN': sel32or64(1.1754943508222875e-38, 2.2250738585072014e-308), 'kCGBitmapByteOrder32Host': littleOrBig(8192, 16384)})
misc.update({'kCGDisplayModeIsTelevisionOutput': 'kCGDisplayModeIsTelevisionOutput', 'kCGColorSpaceUserRGB': 'kCGColorSpaceUserRGB', 'kCGSessionUserNameKey': 'kCGSSessionUserNameKey', 'kCGSessionOnConsoleKey': 'kCGSSessionOnConsoleKey', 'kCGDisplayIOFlags': 'IOFlags', 'kCGDisplayModeIsStretched': 'kCGDisplayModeIsStretched', 'kCGNotifyGUIConsoleSessionChanged': 'com.apple.coregraphics.GUIConsoleSessionChanged', 'kCGSessionUserIDKey': 'kCGSSessionUserIDKey', 'kCGDisplayModeIsInterlaced': 'kCGDisplayModeIsInterlaced', 'kCGDisplayHeight': 'Height', 'kCGDisplayBitsPerSample': 'BitsPerSample', 'kCGDisplayWidth': 'Width', 'kCGDisplaySamplesPerPixel': 'SamplesPerPixel', 'kCGNotifyEventTapRemoved': 'com.apple.coregraphics.eventTapRemoved', 'kCGSessionConsoleSetKey': 'kCGSSessionConsoleSetKey', 'kCGColorSpaceUserCMYK': 'kCGColorSpaceUserCMYK', 'kCGDisplayRefreshRate': 'RefreshRate', 'kCGDisplayBytesPerRow': 'kCGDisplayBytesPerRow', 'kCGDisplayBitsPerPixel': 'BitsPerPixel', 'kCGDisplayModeUsableForDesktopGUI': 'UsableForDesktopGUI', 'kCGSessionLoginDoneKey': 'kCGSessionLoginDoneKey', 'kCGColorSpaceUserGray': 'kCGColorSpaceUserGray', 'kCGIODisplayModeID': 'IODisplayModeID', 'kCGDisplayMode': 'Mode', 'kCGNotifyEventTapAdded': 'com.apple.coregraphics.eventTapAdded', 'kCGDisplayModeIsSafeForHardware': 'kCGDisplayModeIsSafeForHardware', 'kCGNotifyGUISessionUserChanged': 'com.apple.coregraphics.GUISessionUserChanged'})
functions = {'CGPDFDocumentGetVersion': ('v^{CGPDFDocument=}^i^i', '', {'arguments': {0: {'type': b'^{CGPDFDocument=}'}, 1: {'type': b'^i', 'type_modifier': b'o'}, 2: {'type': b'^i', 'type_modifier': b'o'}}}), 'CGContextAddArcToPoint': (sel32or64('v^{CGContext=}fffff', 'v^{CGContext=}ddddd'),), 'CGRectIntersection': (sel32or64('{CGRect={CGPoint=ff}{CGSize=ff}}{CGRect={CGPoint=ff}{CGSize=ff}}{CGRect={CGPoint=ff}{CGSize=ff}}', '{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGDataConsumerRetain': ('^{CGDataConsumer=}^{CGDataConsumer=}',), 'CGColorSpaceCreateDeviceCMYK': ('^{CGColorSpace=}', '', {'retval': {'type': b'^{CGColorSpace=}', 'already_cfretained': True}}), 'CGGradientGetTypeID': (sel32or64('L', 'Q'),), 'CGPDFPageGetDrawingTransform': (sel32or64('{CGAffineTransform=ffffff}^{CGPDFPage=}i{CGRect={CGPoint=ff}{CGSize=ff}}iB', '{CGAffineTransform=dddddd}^{CGPDFPage=}i{CGRect={CGPoint=dd}{CGSize=dd}}iB'),), 'CGContextSetStrokeColorSpace': ('v^{CGContext=}^{CGColorSpace=}',), 'CGContextPathContainsPoint': (sel32or64('B^{CGContext=}{CGPoint=ff}i', 'B^{CGContext=}{CGPoint=dd}i'),), 'CGAffineTransformRotate': (sel32or64('{CGAffineTransform=ffffff}{CGAffineTransform=ffffff}f', '{CGAffineTransform=dddddd}{CGAffineTransform=dddddd}d'),), 'CGContextRelease': ('v^{CGContext=}',), 'CGPDFArrayGetStream': ('B^{CGPDFArray=}L^^{CGPDFStream}', '', {'arguments': {0: {'type': b'^{CGPDFArray=}'}, 1: {'type': b'L'}, 2: {'type': b'^^{CGPDFStream}', 'type_modifier': b'o'}}}), 'CGEventKeyboardSetUnicodeString': ('v^{__CGEvent=}L^S', '', {'arguments': {0: {'type': b'^{__CGEvent=}'}, 1: {'type': b'L'}, 2: {'type': b'^S', 'type_modifier': b'n', 'c_array_length_in_arg': 1}}}), 'CGDisplayModeGetRefreshRate': ('d^{CGDisplayMode}',), 'CGShieldingWindowID': (sel32or64('^vI', 'II'),), 'CGAffineTransformMake': (sel32or64('{CGAffineTransform=ffffff}ffffff', '{CGAffineTransform=dddddd}dddddd'),), 'CGWindowListCreateDescriptionFromArray': ('^{__CFArray=}^{__CFArray=}', '', {'retval': {'type': b'^{__CFArray=}', 'already_cfretained': True}}), 'CGContextAddLines': (sel32or64('v^{CGContext=}^{CGPoint=ff}L', 'v^{CGContext=}^{CGPoint=dd}L'), '', {'arguments': {0: {'type': b'^{CGContext=}'}, 1: {'type': sel32or64(b'^{CGPoint=ff}', b'^{CGPoint=dd}'), 'type_modifier': b'n', 'c_array_length_in_arg': 2}, 2: {'type': b'L'}}}), 'CGContextSetTextPosition': (sel32or64('v^{CGContext=}ff', 'v^{CGContext=}dd'),), 'CGContextGetTextPosition': (sel32or64('{CGPoint=ff}^{CGContext=}', '{CGPoint=dd}^{CGContext=}'),), 'CGPDFPageGetRotationAngle': ('i^{CGPDFPage=}',), 'CGContextGetPathBoundingBox': (sel32or64('{CGRect={CGPoint=ff}{CGSize=ff}}^{CGContext=}', '{CGRect={CGPoint=dd}{CGSize=dd}}^{CGContext=}'),), 'CGRectContainsPoint': (sel32or64('B{CGRect={CGPoint=ff}{CGSize=ff}}{CGPoint=ff}', 'B{CGRect={CGPoint=dd}{CGSize=dd}}{CGPoint=dd}'),), 'CGPDFDictionaryGetCount': (sel32or64('L^{CGPDFDictionary=}', 'Q^{CGPDFDictionary=}'),), 'CGRectMake': (sel32or64('{CGRect={CGPoint=ff}{CGSize=ff}}ffff', '{CGRect={CGPoint=dd}{CGSize=dd}}dddd'),), 'CGColorSpaceRetain': ('^{CGColorSpace=}^{CGColorSpace=}',), 'CGContextAddEllipseInRect': (sel32or64('v^{CGContext=}{CGRect={CGPoint=ff}{CGSize=ff}}', 'v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGContextEndTransparencyLayer': ('v^{CGContext=}',), 'CGContextSelectFont': (sel32or64('v^{CGContext=}*fi', 'v^{CGContext=}*di'),), 'CGLayerGetSize': (sel32or64('{CGSize=ff}^{CGLayer=}', '{CGSize=dd}^{CGLayer=}'),), 'CGWindowListCreate': ('^{__CFArray=}II', '', {'retval': {'type': b'^{__CFArray=}', 'already_cfretained': True}}), 'CGSizeEqualToSize': (sel32or64('B{CGSize=ff}{CGSize=ff}', 'B{CGSize=dd}{CGSize=dd}'),), 'CGPDFStringCopyTextString': ('^{__CFString=}^{CGPDFString=}', '', {'retval': {'type': b'^{__CFString=}', 'already_cfretained': True}}), 'CGColorSpaceGetBaseColorSpace': ('^{CGColorSpace=}^{CGColorSpace=}',), 'CGPathCreateMutable': ('^{CGPath=}', '', {'retval': {'type': b'^{CGPath=}', 'already_cfretained': True}}), 'CGPatternCreate': (sel32or64('^{CGPattern=}^v{CGRect={CGPoint=ff}{CGSize=ff}}{CGAffineTransform=ffffff}ffiBr^{CGPatternCallbacks=I^?^?}', '^{CGPattern=}^v{CGRect={CGPoint=dd}{CGSize=dd}}{CGAffineTransform=dddddd}ddiBr^{CGPatternCallbacks=I^?^?}'), '', {'retval': {'type': b'^{CGPattern=}', 'already_cfretained': True}}), 'CGBitmapContextGetHeight': (sel32or64('L^{CGContext=}', 'Q^{CGContext=}'),), 'CGPDFStringCopyDate': ('^{__CFDate=}^{CGPDFString=}', '', {'retval': {'type': b'^{__CFDate=}', 'already_cfretained': True}}), 'CGDisplayBestModeForParametersAndRefreshRate': ('^{__CFDictionary=}ILLLd^i', '', {'arguments': {0: {'type': b'I'}, 1: {'type': b'L'}, 2: {'type': b'L'}, 3: {'type': b'L'}, 4: {'type': b'd'}, 5: {'type': b'^i', 'type_modifier': b'o'}}}), 'CGPDFScannerPopString': ('B^{CGPDFScanner=}^^{CGPDFString}', '', {'arguments': {0: {'type': b'^{CGPDFScanner=}'}, 1: {'type': b'^^{CGPDFString}', 'type_modifier': b'o'}}}), 'CGPDFPageGetTypeID': (sel32or64('L', 'Q'),), 'CGContextAddRect': (sel32or64('v^{CGContext=}{CGRect={CGPoint=ff}{CGSize=ff}}', 'v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGDataProviderCreateWithURL': ('^{CGDataProvider=}^{__CFURL=}', '', {'retval': {'type': b'^{CGDataProvider=}', 'already_cfretained': True}}), 'CGPDFScannerCreate': ('^{CGPDFScanner=}^{CGPDFContentStream=}^{CGPDFOperatorTable=}^v',), 'CGConfigureDisplayFadeEffect': ('i^{_CGDisplayConfigRef=}fffff',), 'CGDisplayFade': ('iIffffffi',), 'CGEventSetType': ('v^{__CGEvent=}I',), 'CGDataProviderCreateWithFilename': ('^{CGDataProvider=}*', '', {'retval': {'type': b'^{CGDataProvider=}', 'already_cfretained': True}}), 'CGColorGetComponents': (sel32or64('^f^{CGColor=}', '^d^{CGColor=}'), '', {'retval': {'type': sel32or64(b'^f', b'^d'), 'c_array_of_variable_length': True}}), 'CGAffineTransformMakeTranslation': (sel32or64('{CGAffineTransform=ffffff}ff', '{CGAffineTransform=dddddd}dd'),), 'CGSizeMake': (sel32or64('{CGSize=ff}ff', '{CGSize=dd}dd'),), 'CGDisplayVendorNumber': ('II',), 'CGPDFDocumentGetID': ('^{CGPDFArray=}^{CGPDFDocument=}',), 'CGDataProviderCreateWithData': ('^{CGDataProvider=}^v^vL^?', '', {'retval': {'type': b'^{CGDataProvider=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^v'}, 1: {'type': b'^v'}, 2: {'type': b'L'}, 3: {'callable': {'retval': {'type': 'v'}, 'arguments': {}}, 'type': b'^?'}}}), 'CGColorSpaceCreatePattern': ('^{CGColorSpace=}^{CGColorSpace=}', '', {'retval': {'type': b'^{CGColorSpace=}', 'already_cfretained': True}}), 'CGContextSynchronize': ('v^{CGContext=}',), 'CGDisplayModeGetIODisplayModeID': ('I^{CGDisplayMode}',), 'CGFontGetGlyphBBoxes': (sel32or64('B^{CGFont=}^SL^{CGRect={CGPoint=ff}{CGSize=ff}}', 'B^{CGFont=}^SL^{CGRect={CGPoint=dd}{CGSize=dd}}'), '', {'arguments': {0: {'type': b'^{CGFont=}'}, 1: {'type': b'^S', 'type_modifier': b'n', 'c_array_length_in_arg': 2}, 2: {'type': b'L'}, 3: {'type': sel32or64(b'^{CGRect={CGPoint=ff}{CGSize=ff}}', b'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'o', 'c_array_length_in_arg': 2}}}), 'CGPaletteCreateWithByteSamples': ('^{_CGDirectPaletteRef=}^{_CGDeviceByteColor=CCC}I', '', {'retval': {'type': b'^{_CGDirectPaletteRef=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^{_CGDeviceByteColor=CCC}', 'type_modifier': b'n', 'c_array_length_in_arg': 1}, 1: {'type': b'I'}}}), 'CGPDFContentStreamGetResource': ('^(CGPDFObject=)^{CGPDFContentStream=}^t^t', '', {'arguments': {0: {'type': b'^{CGPDFContentStream=}'}, 1: {'c_array_delimited_by_null': True, 'type': b'^t', 'type_modifier': b'n'}, 2: {'c_array_delimited_by_null': True, 'type': b'^t', 'type_modifier': b'n'}}}), 'CGAffineTransformMakeRotation': (sel32or64('{CGAffineTransform=ffffff}f', '{CGAffineTransform=dddddd}d'),), 'CGGradientRetain': ('^{CGGradient=}^{CGGradient=}',), 'CGPaletteCreateWithDisplay': ('^{_CGDirectPaletteRef=}I', '', {'retval': {'type': b'^{_CGDirectPaletteRef=}', 'already_cfretained': True}}), 'CGDisplayCreateImageForRect': (sel32or64('^{CGImage=}I{CGRect={CGPoint=ff}{CGSize=ff}}', '^{CGImage=}I{CGRect={CGPoint=dd}{CGSize=dd}}'), '', {'retval': {'type': b'^{CGImage=}', 'already_cfretained': True}}), 'CGImageGetWidth': (sel32or64('L^{CGImage=}', 'Q^{CGImage=}'),), 'CGPDFDocumentIsUnlocked': ('B^{CGPDFDocument=}',), 'CGImageGetBitmapInfo': ('I^{CGImage=}',), 'CGEventSourceSetKeyboardType': ('v^{__CGEventSource=}I',), 'CGPDFScannerPopName': ('B^{CGPDFScanner=}^*', '', {'arguments': {0: {'type': b'^{CGPDFScanner=}'}, 1: {'type': b'^*', 'type_modifier': b'o'}}}), 'CGDisplayUsesOpenGLAcceleration': ('iI',), 'CGPointMakeWithDictionaryRepresentation': (sel32or64('B^{__CFDictionary=}^{CGPoint=ff}', 'B^{__CFDictionary=}^{CGPoint=dd}'), '', {'arguments': {0: {'type': b'^{__CFDictionary=}'}, 1: {'type': sel32or64(b'^{CGPoint=ff}', b'^{CGPoint=dd}'), 'type_modifier': b'o'}}}), 'CGPDFDictionaryApplyFunction': ('v^{CGPDFDictionary=}^?^v',), 'CGPathAddEllipseInRect': (sel32or64('v^{CGPath=}^{CGAffineTransform=ffffff}{CGRect={CGPoint=ff}{CGSize=ff}}', 'v^{CGPath=}^{CGAffineTransform=dddddd}{CGRect={CGPoint=dd}{CGSize=dd}}'), '', {'arguments': {0: {'type': b'^{CGPath=}'}, 1: {'type': sel32or64(b'^{CGAffineTransform=ffffff}', b'^{CGAffineTransform=dddddd}'), 'type_modifier': b'n'}, 2: {'type': sel32or64(b'{CGRect={CGPoint=ff}{CGSize=ff}}', b'{CGRect={CGPoint=dd}{CGSize=dd}}')}}}), 'CGColorSpaceGetColorTableCount': (sel32or64('L^{CGColorSpace=}', 'Q^{CGColorSpace=}'),), 'CGWindowListCreateImage': (sel32or64('^{CGImage=}{CGRect={CGPoint=ff}{CGSize=ff}}III', '^{CGImage=}{CGRect={CGPoint=dd}{CGSize=dd}}III'), '', {'retval': {'type': b'^{CGImage=}', 'already_cfretained': True}}), 'CGContextClearRect': (sel32or64('v^{CGContext=}{CGRect={CGPoint=ff}{CGSize=ff}}', 'v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGBitmapContextGetBitmapInfo': ('I^{CGContext=}',), 'CGPathAddQuadCurveToPoint': (sel32or64('v^{CGPath=}^{CGAffineTransform=ffffff}ffff', 'v^{CGPath=}^{CGAffineTransform=dddddd}dddd'), '', {'arguments': {0: {'type': b'^{CGPath=}'}, 1: {'type': sel32or64(b'^{CGAffineTransform=ffffff}', b'^{CGAffineTransform=dddddd}'), 'type_modifier': b'n'}, 2: {'type': sel32or64(b'f', b'd')}, 3: {'type': sel32or64(b'f', b'd')}, 4: {'type': sel32or64(b'f', b'd')}, 5: {'type': sel32or64(b'f', b'd')}}}), 'CGColorSpaceCreateDeviceGray': ('^{CGColorSpace=}', '', {'retval': {'type': b'^{CGColorSpace=}', 'already_cfretained': True}}), 'CGRectIntersectsRect': (sel32or64('B{CGRect={CGPoint=ff}{CGSize=ff}}{CGRect={CGPoint=ff}{CGSize=ff}}', 'B{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGPDFPageGetDocument': ('^{CGPDFDocument=}^{CGPDFPage=}',), 'CGRestorePermanentDisplayConfiguration': ('v',), 'CGImageGetTypeID': (sel32or64('L', 'Q'),), 'CGFontCreatePostScriptEncoding': ('^{__CFData=}^{CGFont=}^S', '', {'retval': {'type': b'^{__CFData=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^{CGFont=}'}, 1: {'c_array_of_fixed_length': 256, 'type': b'^S', 'type_modifier': b'n'}}}), 'CGFontGetStemV': (sel32or64('f^{CGFont=}', 'd^{CGFont=}'),), 'CGPointApplyAffineTransform': (sel32or64('{CGPoint=ff}{CGPoint=ff}{CGAffineTransform=ffffff}', '{CGPoint=dd}{CGPoint=dd}{CGAffineTransform=dddddd}'),), 'CGEventSourceGetSourceStateID': ('I^{__CGEventSource=}',), 'CGRectStandardize': (sel32or64('{CGRect={CGPoint=ff}{CGSize=ff}}{CGRect={CGPoint=ff}{CGSize=ff}}', '{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGPathAddLineToPoint': (sel32or64('v^{CGPath=}^{CGAffineTransform=ffffff}ff', 'v^{CGPath=}^{CGAffineTransform=dddddd}dd'), '', {'arguments': {0: {'type': b'^{CGPath=}'}, 1: {'type': sel32or64(b'^{CGAffineTransform=ffffff}', b'^{CGAffineTransform=dddddd}'), 'type_modifier': b'n'}, 2: {'type': sel32or64(b'f', b'd')}, 3: {'type': sel32or64(b'f', b'd')}}}), 'CGDataProviderCopyData': ('^{__CFData=}^{CGDataProvider=}', '', {'retval': {'type': b'^{__CFData=}', 'already_cfretained': True}}), 'CGColorCreateGenericGray': (sel32or64('^{CGColor=}ff', '^{CGColor=}dd'), '', {'retval': {'type': b'^{CGColor=}', 'already_cfretained': True}}), 'CGPDFArrayGetObject': ('B^{CGPDFArray=}L^^(CGPDFObject)', '', {'arguments': {0: {'type': b'^{CGPDFArray=}'}, 1: {'type': b'L'}, 2: {'type': b'^^(CGPDFObject)', 'type_modifier': b'o'}}}), 'CGPSConverterGetTypeID': (sel32or64('L', 'Q'),), 'CGColorRetain': ('^{CGColor=}^{CGColor=}',), 'CGColorCreateGenericCMYK': (sel32or64('^{CGColor=}fffff', '^{CGColor=}ddddd'), '', {'retval': {'type': b'^{CGColor=}', 'already_cfretained': True}}), 'CGGLContextCreate': (sel32or64('^{CGContext=}^v{CGSize=ff}^{CGColorSpace=}', '^{CGContext=}^v{CGSize=dd}^{CGColorSpace=}'), '', {'retval': {'type': b'^{CGContext=}', 'already_cfretained': True}}), 'CGBeginDisplayConfiguration': ('i^^{_CGDisplayConfigRef}', '', {'arguments': {0: {'type': b'^^{_CGDisplayConfigRef}', 'type_modifier': b'o'}}}), 'CGBitmapContextGetBitsPerPixel': (sel32or64('L^{CGContext=}', 'Q^{CGContext=}'),), 'CGPDFDictionaryGetArray': ('B^{CGPDFDictionary=}r*^^{CGPDFArray}', '', {'arguments': {0: {'type': b'^{CGPDFDictionary=}'}, 1: {'type': b'r*'}, 2: {'type': b'^^{CGPDFArray}', 'type_modifier': b'o'}}}), 'CGColorSpaceCreateWithPlatformColorSpace': ('^{CGColorSpace=}^{OpaqueCMProfileRef=}', '', {'retval': {'type': b'^{CGColorSpace=}', 'already_cfretained': True}}), 'CGContextSetCMYKStrokeColor': (sel32or64('v^{CGContext=}fffff', 'v^{CGContext=}ddddd'),), 'CGContextEndPage': ('v^{CGContext=}',), 'CGUnregisterScreenRefreshCallback': ('v^?^v',), 'CGPDFContentStreamRelease': ('v^{CGPDFContentStream=}',), 'CGContextGetCTM': (sel32or64('{CGAffineTransform=ffffff}^{CGContext=}', '{CGAffineTransform=dddddd}^{CGContext=}'),), 'CGPathAddRect': (sel32or64('v^{CGPath=}^{CGAffineTransform=ffffff}{CGRect={CGPoint=ff}{CGSize=ff}}', 'v^{CGPath=}^{CGAffineTransform=dddddd}{CGRect={CGPoint=dd}{CGSize=dd}}'), '', {'arguments': {0: {'type': b'^{CGPath=}'}, 1: {'type': sel32or64(b'^{CGAffineTransform=ffffff}', b'^{CGAffineTransform=dddddd}'), 'type_modifier': b'n'}, 2: {'type': sel32or64(b'{CGRect={CGPoint=ff}{CGSize=ff}}', b'{CGRect={CGPoint=dd}{CGSize=dd}}')}}}), 'CGPDFArrayGetName': ('B^{CGPDFArray=}L^*', '', {'arguments': {0: {'type': b'^{CGPDFArray=}'}, 1: {'type': b'L'}, 2: {'type': b'^*', 'type_modifier': b'o'}}}), 'CGEventSourceGetPixelsPerLine': ('d^{__CGEventSource=}',), 'CGRectGetHeight': (sel32or64('f{CGRect={CGPoint=ff}{CGSize=ff}}', 'd{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGEventSourceGetTypeID': (sel32or64('L', 'Q'),), 'CGPDFDictionaryGetStream': ('B^{CGPDFDictionary=}r*^^{CGPDFStream}', '', {'arguments': {0: {'type': b'^{CGPDFDictionary=}'}, 1: {'type': b'r*'}, 2: {'type': b'^^{CGPDFStream}', 'type_modifier': b'o'}}}), 'CGDataProviderCreateWithCFData': ('^{CGDataProvider=}^{__CFData=}', '', {'retval': {'type': b'^{CGDataProvider=}', 'already_cfretained': True}}), 'CGShieldingWindowLevel': ('i',), 'CGDisplaySetPalette': ('iI^{_CGDirectPaletteRef=}',), 'CGDisplayIsOnline': ('iI',), 'CGFontGetCapHeight': ('i^{CGFont=}',), 'CGContextShowGlyphsWithAdvances': (sel32or64('v^{CGContext=}^S^{CGSize=ff}L', 'v^{CGContext=}^S^{CGSize=dd}L'), '', {'arguments': {0: {'type': b'^{CGContext=}'}, 1: {'type': b'^S', 'type_modifier': b'n', 'c_array_length_in_arg': 3}, 2: {'type': sel32or64(b'^{CGSize=ff}', b'^{CGSize=dd}'), 'type_modifier': b'n', 'c_array_length_in_arg': 3}, 3: {'type': b'L'}}}), 'CGDataConsumerCreate': ('^{CGDataConsumer=}^vr^{CGDataConsumerCallbacks=^?^?}', '', {'retval': {'type': b'^{CGDataConsumer=}', 'already_cfretained': True}}), 'CGPDFArrayGetInteger': ('B^{CGPDFArray=}L^i', '', {'arguments': {0: {'type': b'^{CGPDFArray=}'}, 1: {'type': b'L'}, 2: {'type': b'^i', 'type_modifier': b'o'}}}), 'CGPostScrollWheelEvent': ('iIi', '', {'c_array_length_in_arg': 0, 'variadic': 'true'}), 'CGColorCreateCopy': ('^{CGColor=}^{CGColor=}', '', {'retval': {'type': b'^{CGColor=}', 'already_cfretained': True}}), 'CGBitmapContextCreate': ('^{CGContext=}^vLLLL^{CGColorSpace=}I', '', {'retval': {'type': b'^{CGContext=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^v', 'type_modifier': b'n', 'c_array_of_variable_length': True}, 1: {'type': b'L'}, 2: {'type': b'L'}, 3: {'type': b'L'}, 4: {'type': b'L'}, 5: {'type': b'^{CGColorSpace=}'}, 6: {'type': b'I'}}}), 'CGDisplaySetStereoOperation': ('iIiiI',), 'CGPaletteIsEqualToPalette': ('B^{_CGDirectPaletteRef=}^{_CGDirectPaletteRef=}',), 'CGContextSetShouldAntialias': ('v^{CGContext=}B',), 'CGDisplayModeGetHeight': ('l^{CGDisplayMode}',), 'CGContextSetFillColor': (sel32or64('v^{CGContext=}^f', 'v^{CGContext=}^d'), '', {'arguments': {0: {'type': b'^{CGContext=}'}, 1: {'type': sel32or64(b'^f', b'^d'), 'type_modifier': b'n', 'c_array_of_variable_length': True}}}), 'CGImageRelease': ('v^{CGImage=}',), 'CGInhibitLocalEvents': ('ii',), 'CGContextSetGrayFillColor': (sel32or64('v^{CGContext=}ff', 'v^{CGContext=}dd'),), 'CGPSConverterCreate': ('^{CGPSConverter=}^vr^{CGPSConverterCallbacks=I^?^?^?^?^?^?^?}^{__CFDictionary=}', '', {'retval': {'type': b'^{CGPSConverter=}', 'already_cfretained': True}}), 'CGContextClipToMask': (sel32or64('v^{CGContext=}{CGRect={CGPoint=ff}{CGSize=ff}}^{CGImage=}', 'v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}^{CGImage=}'),), 'CGDisplayCopyColorSpace': ('^{CGColorSpace=}I', '', {'retval': {'type': b'^{CGColorSpace=}', 'already_cfretained': True}}), 'CGContextAddLineToPoint': (sel32or64('v^{CGContext=}ff', 'v^{CGContext=}dd'),), 'CGEventSourceGetLocalEventsSuppressionInterval': ('d^{__CGEventSource=}',), 'CGColorSpaceGetTypeID': (sel32or64('L', 'Q'),), 'CGPathAddPath': (sel32or64('v^{CGPath=}^{CGAffineTransform=ffffff}^{CGPath=}', 'v^{CGPath=}^{CGAffineTransform=dddddd}^{CGPath=}'), '', {'arguments': {0: {'type': b'^{CGPath=}'}, 1: {'type': sel32or64(b'^{CGAffineTransform=ffffff}', b'^{CGAffineTransform=dddddd}'), 'type_modifier': b'n'}, 2: {'type': b'^{CGPath=}'}}}), 'CGDataProviderRetain': ('^{CGDataProvider=}^{CGDataProvider=}',), 'CGEventCreateFromData': ('^{__CGEvent=}^{__CFAllocator=}^{__CFData=}', '', {'retval': {'type': b'^{__CGEvent=}', 'already_cfretained': True}}), 'CGDisplayPixelsHigh': (sel32or64('LI', 'QI'),), 'CGConfigureDisplayStereoOperation': ('i^{_CGDisplayConfigRef=}Iii',), 'CGPDFOperatorTableCreate': ('^{CGPDFOperatorTable=}',), 'CGPDFContextAddDestinationAtPoint': (sel32or64('v^{CGContext=}^{__CFString=}{CGPoint=ff}', 'v^{CGContext=}^{__CFString=}{CGPoint=dd}'),), 'CGPDFScannerGetContentStream': ('^{CGPDFContentStream=}^{CGPDFScanner=}',), 'CGContextSetShouldSubpixelQuantizeFonts': ('v^{CGContext=}B',), 'CGColorCreateWithPattern': (sel32or64('^{CGColor=}^{CGColorSpace=}^{CGPattern=}^f', '^{CGColor=}^{CGColorSpace=}^{CGPattern=}^d'), '', {'retval': {'type': b'^{CGColor=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^{CGColorSpace=}'}, 1: {'type': b'^{CGPattern=}'}, 2: {'type': sel32or64(b'^f', b'^d'), 'type_modifier': b'n', 'c_array_of_variable_length': True}}}), 'CGPathContainsPoint': (sel32or64('B^{CGPath=}^{CGAffineTransform=ffffff}{CGPoint=ff}B', 'B^{CGPath=}^{CGAffineTransform=ffffff}{CGPoint=dd}B'), '', {'arguments': {0: {'type': b'^{CGPath=}'}, 1: {'type': b'^{CGAffineTransform=ffffff}', 'type_modifier': b'n'}, 2: {'type': sel32or64(b'{CGPoint=ff}', b'{CGPoint=dd}')}, 3: {'type': b'B'}}}), 'CGSizeApplyAffineTransform': (sel32or64('{CGSize=ff}{CGSize=ff}{CGAffineTransform=ffffff}', '{CGSize=dd}{CGSize=dd}{CGAffineTransform=dddddd}'),), 'CGRectIntegral': (sel32or64('{CGRect={CGPoint=ff}{CGSize=ff}}{CGRect={CGPoint=ff}{CGSize=ff}}', '{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGDisplayPrimaryDisplay': ('II',), 'CGContextConcatCTM': (sel32or64('v^{CGContext=}{CGAffineTransform=ffffff}', 'v^{CGContext=}{CGAffineTransform=dddddd}'),), 'CGFunctionRelease': ('v^{CGFunction=}',), 'CGWindowListCreateImageFromArray': (sel32or64('^{CGImage=}{CGRect={CGPoint=ff}{CGSize=ff}}^{__CFArray=}I', '^{CGImage=}{CGRect={CGPoint=dd}{CGSize=dd}}^{__CFArray=}I'), '', {'retval': {'type': b'^{CGImage=}', 'already_cfretained': True}}), 'CGPatternRetain': ('^{CGPattern=}^{CGPattern=}',), 'CGPaletteCreateWithSamples': ('^{_CGDirectPaletteRef=}^{_CGDeviceColor=fff}I', '', {'retval': {'type': b'^{_CGDirectPaletteRef=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^{_CGDeviceColor=fff}', 'type_modifier': b'n', 'c_array_length_in_arg': 1}, 1: {'type': b'I'}}}), 'CGDataProviderGetTypeID': (sel32or64('L', 'Q'),), 'CGPaletteCreateWithCapacity': ('^{_CGDirectPaletteRef=}I', '', {'retval': {'type': b'^{_CGDirectPaletteRef=}', 'already_cfretained': True}}), 'CGDisplayBytesPerRow': (sel32or64('LI', 'QI'),), 'CGSetLocalEventsSuppressionInterval': ('id',), 'CGPDFArrayGetCount': (sel32or64('L^{CGPDFArray=}', 'Q^{CGPDFArray=}'),), 'CGPDFContextClose': ('v^{CGContext=}',), 'CGDisplayIsBuiltin': ('iI',), 'CGContextIsPathEmpty': ('B^{CGContext=}',), 'CGContextSetShadow': (sel32or64('v^{CGContext=}{CGSize=ff}f', 'v^{CGContext=}{CGSize=dd}d'),), 'CGPathGetBoundingBox': (sel32or64('{CGRect={CGPoint=ff}{CGSize=ff}}^{CGPath=}', '{CGRect={CGPoint=dd}{CGSize=dd}}^{CGPath=}'),), 'CGColorGetNumberOfComponents': (sel32or64('L^{CGColor=}', 'Q^{CGColor=}'),), 'CGColorSpaceRelease': ('v^{CGColorSpace=}',), 'CGGetDisplayTransferByTable': ('iII^f^f^f^I', '', {'arguments': {0: {'type': b'I'}, 1: {'type': b'I'}, 2: {'type': b'^f', 'type_modifier': b'o', 'c_array_length_in_arg': (1, 5)}, 3: {'type': b'^f', 'type_modifier': b'o', 'c_array_length_in_arg': (1, 5)}, 4: {'type': b'^f', 'type_modifier': b'o', 'c_array_length_in_arg': (1, 5)}, 5: {'type': b'^I', 'type_modifier': b'o'}}}), 'CGPDFDocumentIsEncrypted': ('B^{CGPDFDocument=}',), 'CGContextShowGlyphsAtPoint': (sel32or64('v^{CGContext=}ff^SL', 'v^{CGContext=}dd^SL'), '', {'arguments': {0: {'type': b'^{CGContext=}'}, 1: {'type': sel32or64(b'f', b'd')}, 2: {'type': sel32or64(b'f', b'd')}, 3: {'type': b'^S', 'type_modifier': b'n', 'c_array_length_in_arg': 4}, 4: {'type': b'L'}}}), 'CGPathAddLines': (sel32or64('v^{CGPath=}^{CGAffineTransform=ffffff}^{CGPoint=ff}L', 'v^{CGPath=}^{CGAffineTransform=dddddd}^{CGPoint=dd}L'), '', {'arguments': {0: {'type': b'^{CGPath=}'}, 1: {'type': sel32or64(b'^{CGAffineTransform=ffffff}', b'^{CGAffineTransform=dddddd}'), 'type_modifier': b'n'}, 2: {'type': sel32or64(b'^{CGPoint=ff}', b'^{CGPoint=dd}'), 'type_modifier': b'n', 'c_array_length_in_arg': 3}, 3: {'type': b'L'}}}), 'CGColorCreateGenericRGB': (sel32or64('^{CGColor=}ffff', '^{CGColor=}dddd'), '', {'retval': {'type': b'^{CGColor=}', 'already_cfretained': True}}), 'CGContextDrawPDFPage': ('v^{CGContext=}^{CGPDFPage=}',), 'CGDisplayModeRetain': ('^{CGDisplayMode}^{CGDisplayMode}',), 'CGDisplayGammaTableCapacity': ('II',), 'CGFontCreateWithFontName': ('^{CGFont=}^{__CFString=}', '', {'retval': {'type': b'^{CGFont=}', 'already_cfretained': True}}), 'CGDisplayCopyAllDisplayModes': ('^{__CFArray=}I^{__CFDictionary=}', '', {'retval': {'type': b'^{__CFArray=}', 'already_cfretained': True}}), 'CGContextScaleCTM': (sel32or64('v^{CGContext=}ff', 'v^{CGContext=}dd'),), 'CGRectDivide': (sel32or64('v{CGRect={CGPoint=ff}{CGSize=ff}}^{CGRect={CGPoint=ff}{CGSize=ff}}^{CGRect={CGPoint=ff}{CGSize=ff}}fi', 'v{CGRect={CGPoint=dd}{CGSize=dd}}^{CGRect={CGPoint=dd}{CGSize=dd}}^{CGRect={CGPoint=dd}{CGSize=dd}}di'), '', {'arguments': {0: {'type': sel32or64(b'{CGRect={CGPoint=ff}{CGSize=ff}}', b'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 1: {'type': sel32or64(b'^{CGRect={CGPoint=ff}{CGSize=ff}}', b'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'o'}, 2: {'type': sel32or64(b'^{CGRect={CGPoint=ff}{CGSize=ff}}', b'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'o'}, 3: {'type': sel32or64(b'f', b'd')}, 4: {'type': b'i'}}}), 'CGContextSetLineCap': ('v^{CGContext=}i',), 'CGImageMaskCreate': (sel32or64('^{CGImage=}LLLLL^{CGDataProvider=}^fB', '^{CGImage=}LLLLL^{CGDataProvider=}^dB'), '', {'retval': {'type': b'^{CGImage=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'L'}, 1: {'type': b'L'}, 2: {'type': b'L'}, 3: {'type': b'L'}, 4: {'type': b'L'}, 5: {'type': b'^{CGDataProvider=}'}, 6: {'type': sel32or64(b'^f', b'^d'), 'type_modifier': b'n', 'c_array_of_variable_length': True}, 7: {'type': b'B'}}}), 'CGContextDrawRadialGradient': (sel32or64('v^{CGContext=}^{CGGradient=}{CGPoint=ff}f{CGPoint=ff}fI', 'v^{CGContext=}^{CGGradient=}{CGPoint=dd}d{CGPoint=dd}dI'),), 'CGFontCopyVariations': ('^{__CFDictionary=}^{CGFont=}', '', {'retval': {'type': b'^{__CFDictionary=}', 'already_cfretained': True}}), 'CGConfigureDisplayMirrorOfDisplay': ('i^{_CGDisplayConfigRef=}II',), 'CGFontCreateCopyWithVariations': ('^{CGFont=}^{CGFont=}^{__CFDictionary=}', '', {'retval': {'type': b'^{CGFont=}', 'already_cfretained': True}}), 'CGRectGetMidY': (sel32or64('f{CGRect={CGPoint=ff}{CGSize=ff}}', 'd{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGContextFillEllipseInRect': (sel32or64('v^{CGContext=}{CGRect={CGPoint=ff}{CGSize=ff}}', 'v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGContextSetAlpha': (sel32or64('v^{CGContext=}f', 'v^{CGContext=}d'),), 'CGContextAddQuadCurveToPoint': (sel32or64('v^{CGContext=}ffff', 'v^{CGContext=}dddd'),), 'CGColorSpaceGetNumberOfComponents': (sel32or64('L^{CGColorSpace=}', 'Q^{CGColorSpace=}'),), 'CGEventCreateKeyboardEvent': ('^{__CGEvent=}^{__CGEventSource=}SB', '', {'retval': {'type': b'^{__CGEvent=}', 'already_cfretained': True}}), 'CGPDFDocumentGetMediaBox': (sel32or64('{CGRect={CGPoint=ff}{CGSize=ff}}^{CGPDFDocument=}i', '{CGRect={CGPoint=dd}{CGSize=dd}}^{CGPDFDocument=}i'),), 'CGEventSetSource': ('v^{__CGEvent=}^{__CGEventSource=}',), 'CGSetDisplayTransferByByteTable': ('iII^z^z^z', '', {'arguments': {0: {'type': b'I'}, 1: {'type': b'I'}, 2: {'type': b'^z', 'type_modifier': b'n', 'c_array_length_in_arg': 1}, 3: {'type': b'^z', 'type_modifier': b'n', 'c_array_length_in_arg': 1}, 4: {'type': b'^z', 'type_modifier': b'n', 'c_array_length_in_arg': 1}}}), 'CGPDFDictionaryGetString': ('B^{CGPDFDictionary=}r*^^{CGPDFString}', '', {'arguments': {0: {'type': b'^{CGPDFDictionary=}'}, 1: {'type': b'r*'}, 2: {'type': b'^^{CGPDFString}', 'type_modifier': b'o'}}}), 'CGRegisterScreenRefreshCallback': ('i^?^v',), 'CGFontGetUnitsPerEm': ('i^{CGFont=}',), 'CGContextEOClip': ('v^{CGContext=}',), 'CGAcquireDisplayFadeReservation': ('if^I', '', {'arguments': {0: {'type': b'f'}, 1: {'type': b'^I', 'type_modifier': b'o'}}}), 'CGBitmapContextGetData': ('^v^{CGContext=}', '', {'retval': {'type': b'^v', 'c_array_of_variable_length': True}}), 'CGAffineTransformIsIdentity': (sel32or64('B{CGAffineTransform=ffffff}', 'B{CGAffineTransform=dddddd}'),), 'CGContextGetInterpolationQuality': ('i^{CGContext=}',), 'CGContextRotateCTM': (sel32or64('v^{CGContext=}f', 'v^{CGContext=}d'),), 'CGImageCreateCopy': ('^{CGImage=}^{CGImage=}', '', {'retval': {'type': b'^{CGImage=}', 'already_cfretained': True}}), 'CGImageGetShouldInterpolate': ('B^{CGImage=}',), 'CGContextStrokeRect': (sel32or64('v^{CGContext=}{CGRect={CGPoint=ff}{CGSize=ff}}', 'v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGImageGetDecode': (sel32or64('^f^{CGImage=}', '^d^{CGImage=}'), '', {'retval': {'type': sel32or64(b'^f', b'^d'), 'c_array_of_variable_length': True}}), 'CGContextRestoreGState': ('v^{CGContext=}',), 'CGContextSetAllowsAntialiasing': ('v^{CGContext=}B',), 'CGPDFScannerPopDictionary': ('B^{CGPDFScanner=}^^{CGPDFDictionary}', '', {'arguments': {0: {'type': b'^{CGPDFScanner=}'}, 1: {'type': b'^^{CGPDFDictionary}', 'type_modifier': b'o'}}}), 'CGRectGetMidX': (sel32or64('f{CGRect={CGPoint=ff}{CGSize=ff}}', 'd{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGFontCopyTableForTag': ('^{__CFData=}^{CGFont=}I', '', {'retval': {'type': b'^{__CFData=}', 'already_cfretained': True}}), 'CGEventSourceGetLocalEventsFilterDuringSuppressionState': ('I^{__CGEventSource=}I',), 'CGColorGetTypeID': (sel32or64('L', 'Q'),), 'CGSetDisplayTransferByFormula': ('iIfffffffff',), 'CGPDFStreamGetDictionary': ('^{CGPDFDictionary=}^{CGPDFStream=}',), 'CGEventSourceSetLocalEventsFilterDuringSuppressionState': ('v^{__CGEventSource=}II',), 'CGRectContainsRect': (sel32or64('B{CGRect={CGPoint=ff}{CGSize=ff}}{CGRect={CGPoint=ff}{CGSize=ff}}', 'B{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGColorGetPattern': ('^{CGPattern=}^{CGColor=}',), 'CGPaletteCreateDefaultColorPalette': ('^{_CGDirectPaletteRef=}', '', {'retval': {'type': b'^{_CGDirectPaletteRef=}', 'already_cfretained': True}}), 'CGFontCreatePostScriptSubset': ('^{__CFData=}^{CGFont=}^{__CFString=}i^SL^S', '', {'retval': {'type': b'^{__CFData=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^{CGFont=}'}, 1: {'type': b'^{__CFString=}'}, 2: {'type': b'i'}, 3: {'type': b'^S', 'type_modifier': b'n', 'c_array_length_in_arg': 4}, 4: {'type': b'L'}, 5: {'c_array_of_fixed_length': 256, 'type': b'^S', 'type_modifier': b'n'}}}), 'CGPDFDocumentGetCatalog': ('^{CGPDFDictionary=}^{CGPDFDocument=}',), 'CGColorSpaceGetModel': ('i^{CGColorSpace=}',), 'CGImageGetColorSpace': ('^{CGColorSpace=}^{CGImage=}',), 'CGPDFArrayGetString': ('B^{CGPDFArray=}L^^{CGPDFString}', '', {'arguments': {0: {'type': b'^{CGPDFArray=}'}, 1: {'type': b'L'}, 2: {'type': b'^^{CGPDFString}', 'type_modifier': b'o'}}}), 'CGPointMake': (sel32or64('{CGPoint=ff}ff', '{CGPoint=dd}dd'),), 'CGPaletteRelease': ('v^{_CGDirectPaletteRef=}',), 'CGPDFDictionaryGetObject': ('B^{CGPDFDictionary=}r*^^(CGPDFObject)', '', {'arguments': {0: {'type': b'^{CGPDFDictionary=}'}, 1: {'type': b'r*'}, 2: {'type': b'^^(CGPDFObject)', 'type_modifier': b'o'}}}), 'CGEventTapCreateForPSN': ('^{__CFMachPort=}^{ProcessSerialNumber=II}IIQ^?^v', '', {'retval': {'type': b'^{__CFMachPort=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^{ProcessSerialNumber=II}', 'type_modifier': b'n'}, 1: {'type': b'I'}, 2: {'type': b'I'}, 3: {'type': b'Q'}, 4: {'type': b'^?'}, 5: {'type': b'^v'}}}), 'CGReleaseDisplayFadeReservation': ('iI',), 'CGDisplayRegisterReconfigurationCallback': ('i^?^v',), 'CGPDFPageRetain': ('^{CGPDFPage=}^{CGPDFPage=}',), 'CGLayerCreateWithContext': (sel32or64('^{CGLayer=}^{CGContext=}{CGSize=ff}^{__CFDictionary=}', '^{CGLayer=}^{CGContext=}{CGSize=dd}^{__CFDictionary=}'), '', {'retval': {'type': b'^{CGLayer=}', 'already_cfretained': True}}), 'CGContextStrokeLineSegments': (sel32or64('v^{CGContext=}^{CGPoint=ff}L', 'v^{CGContext=}^{CGPoint=dd}L'), '', {'arguments': {0: {'type': b'^{CGContext=}'}, 1: {'type': sel32or64(b'^{CGPoint=ff}', b'^{CGPoint=dd}'), 'type_modifier': b'n', 'c_array_length_in_arg': 2}, 2: {'type': b'L'}}}), 'CGContextSetTextMatrix': (sel32or64('v^{CGContext=}{CGAffineTransform=ffffff}', 'v^{CGContext=}{CGAffineTransform=dddddd}'),), 'CGPDFObjectGetType': ('i^(CGPDFObject=)',), 'CGEventSourceGetUserData': ('q^{__CGEventSource=}',), 'CGContextSetStrokeColor': (sel32or64('v^{CGContext=}^f', 'v^{CGContext=}^d'), '', {'arguments': {0: {'type': b'^{CGContext=}'}, 1: {'type': sel32or64(b'^f', b'^d'), 'type_modifier': b'n', 'c_array_of_variable_length': True}}}), 'CGPDFScannerPopBoolean': ('B^{CGPDFScanner=}^B', '', {'arguments': {0: {'type': b'^{CGPDFScanner=}'}, 1: {'type': b'^B', 'type_modifier': b'o'}}}), 'CGGradientRelease': ('v^{CGGradient=}',), 'CGConfigureDisplayMode': ('i^{_CGDisplayConfigRef=}I^{__CFDictionary=}',), 'CGWarpMouseCursorPosition': (sel32or64('i{CGPoint=ff}', 'i{CGPoint=dd}'),), 'CGPDFDocumentGetInfo': ('^{CGPDFDictionary=}^{CGPDFDocument=}',), 'CGContextSetStrokePattern': (sel32or64('v^{CGContext=}^{CGPattern=}^f', 'v^{CGContext=}^{CGPattern=}^d'), '', {'arguments': {0: {'type': b'^{CGContext=}'}, 1: {'type': b'^{CGPattern=}'}, 2: {'type': sel32or64(b'^f', b'^d'), 'type_modifier': b'n', 'c_array_of_variable_length': True}}}), 'CGDisplayCanSetPalette': ('iI',), 'CGRectApplyAffineTransform': (sel32or64('{CGRect={CGPoint=ff}{CGSize=ff}}{CGRect={CGPoint=ff}{CGSize=ff}}{CGAffineTransform=ffffff}', '{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}{CGAffineTransform=dddddd}'),), 'CGEventSetDoubleValueField': ('v^{__CGEvent=}Id',), 'CGContextFlush': ('v^{CGContext=}',), 'CGWindowListCopyWindowInfo': ('^{__CFArray=}II', '', {'retval': {'type': b'^{__CFArray=}', 'already_cfretained': True}}), 'CGFontGetXHeight': ('i^{CGFont=}',), 'CGPDFContextCreate': (sel32or64('^{CGContext=}^{CGDataConsumer=}^{CGRect={CGPoint=ff}{CGSize=ff}}^{__CFDictionary=}', '^{CGContext=}^{CGDataConsumer=}^{CGRect={CGPoint=dd}{CGSize=dd}}^{__CFDictionary=}'), '', {'retval': {'type': b'^{CGContext=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^{CGDataConsumer=}'}, 1: {'type': sel32or64(b'^{CGRect={CGPoint=ff}{CGSize=ff}}', b'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'n'}, 2: {'type': b'^{__CFDictionary=}'}}}), 'CGPaletteGetIndexForColor': ('I^{_CGDirectPaletteRef=}{_CGDeviceColor=fff}',), 'CGImageCreateWithJPEGDataProvider': (sel32or64('^{CGImage=}^{CGDataProvider=}^fBi', '^{CGImage=}^{CGDataProvider=}^dBi'), '', {'retval': {'type': b'^{CGImage=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^{CGDataProvider=}'}, 1: {'type': sel32or64(b'^f', b'^d'), 'type_modifier': b'n', 'c_array_of_variable_length': True}, 2: {'type': b'B'}, 3: {'type': b'i'}}}), 'CGPDFDocumentCreateWithURL': ('^{CGPDFDocument=}^{__CFURL=}', '', {'retval': {'type': b'^{CGPDFDocument=}', 'already_cfretained': True}}), 'CGPathAddArcToPoint': (sel32or64('v^{CGPath=}^{CGAffineTransform=ffffff}fffff', 'v^{CGPath=}^{CGAffineTransform=ffffff}ddddd'), '', {'arguments': {0: {'type': b'^{CGPath=}'}, 1: {'type': b'^{CGAffineTransform=ffffff}', 'type_modifier': b'n'}, 2: {'type': sel32or64(b'f', b'd')}, 3: {'type': sel32or64(b'f', b'd')}, 4: {'type': sel32or64(b'f', b'd')}, 5: {'type': sel32or64(b'f', b'd')}, 6: {'type': sel32or64(b'f', b'd')}}}), 'CGDisplayIsActive': ('iI',), 'CGPDFScannerScan': ('B^{CGPDFScanner=}',), 'CGSetDisplayTransferByTable': ('iII^f^f^f', '', {'arguments': {0: {'type': b'I'}, 1: {'type': b'I'}, 2: {'type': b'^f', 'type_modifier': b'n', 'c_array_length_in_arg': 1}, 3: {'type': b'^f', 'type_modifier': b'n', 'c_array_length_in_arg': 1}, 4: {'type': b'^f', 'type_modifier': b'n', 'c_array_length_in_arg': 1}}}), 'CGFontGetDescent': ('i^{CGFont=}',), 'CGImageGetRenderingIntent': ('i^{CGImage=}',), 'CGGLContextUpdateViewportSize': (sel32or64('v^{CGContext=}{CGSize=ff}', 'v^{CGContext=}{CGSize=dd}'),), 'CGGetEventTapList': ('iI^{CGEventTapInformation=IIIQiiZfff}^I', '', {'arguments': {0: {'type': b'I'}, 1: {'type': b'^{CGEventTapInformation=IIIQiiZfff}', 'type_modifier': b'o', 'c_array_length_in_arg': (0, 2)}, 2: {'type': b'^I', 'type_modifier': b'o'}}}), 'CGEnableEventStateCombining': ('ii',), 'CGColorSpaceCreateDeviceRGB': ('^{CGColorSpace=}', '', {'retval': {'type': b'^{CGColorSpace=}', 'already_cfretained': True}}), 'CGPathEqualToPath': ('B^{CGPath=}^{CGPath=}',), 'CGPDFScannerPopObject': ('B^{CGPDFScanner=}^^(CGPDFObject)', '', {'arguments': {0: {'type': b'^{CGPDFScanner=}'}, 1: {'type': b'^^(CGPDFObject)', 'type_modifier': b'o'}}}), 'CGDisplayIsCaptured': ('iI',), 'CGPDFPageRelease': ('v^{CGPDFPage=}',), 'CGDataProviderCreate': ('^{CGDataProvider=}^vr^{CGDataProviderCallbacks=^?^?^?^?}', '', {'retval': {'type': b'^{CGDataProvider=}', 'already_cfretained': True}}), 'CGRectIsEmpty': (sel32or64('B{CGRect={CGPoint=ff}{CGSize=ff}}', 'B{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGDisplayMoveCursorToPoint': (sel32or64('iI{CGPoint=ff}', 'iI{CGPoint=dd}'),), 'CGPDFScannerPopInteger': ('B^{CGPDFScanner=}^i', '', {'arguments': {0: {'type': b'^{CGPDFScanner=}'}, 1: {'type': b'^i', 'type_modifier': b'o'}}}), 'CGPaletteGetNumberOfSamples': ('I^{_CGDirectPaletteRef=}',), 'CGContextStrokePath': ('v^{CGContext=}',), 'CGEventSetLocation': (sel32or64('v^{__CGEvent=}{CGPoint=ff}', 'v^{__CGEvent=}{CGPoint=dd}'),), 'CGEventPostToPSN': ('v^{ProcessSerialNumber=II}^{__CGEvent=}', '', {'arguments': {0: {'type': b'^{ProcessSerialNumber=II}', 'type_modifier': b'n'}, 1: {'type': b'^{__CGEvent=}'}}}), 'CGAffineTransformScale': (sel32or64('{CGAffineTransform=ffffff}{CGAffineTransform=ffffff}ff', '{CGAffineTransform=dddddd}{CGAffineTransform=dddddd}dd'),), 'CGEventSourceSetUserData': ('v^{__CGEventSource=}q',), 'CGLayerRelease': ('v^{CGLayer=}',), 'CGPDFArrayGetArray': ('B^{CGPDFArray=}L^^{CGPDFArray}', '', {'arguments': {0: {'type': b'^{CGPDFArray=}'}, 1: {'type': b'L'}, 2: {'type': b'^^{CGPDFArray}', 'type_modifier': b'o'}}}), 'CGContextDrawLayerInRect': (sel32or64('v^{CGContext=}{CGRect={CGPoint=ff}{CGSize=ff}}^{CGLayer=}', 'v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}^{CGLayer=}'),), 'CGDataProviderRelease': ('v^{CGDataProvider=}',), 'CGEventPost': ('vI^{__CGEvent=}',), 'CGMainDisplayID': ('I',), 'CGFontGetTypeID': (sel32or64('L', 'Q'),), 'CGRectEqualToRect': (sel32or64('B{CGRect={CGPoint=ff}{CGSize=ff}}{CGRect={CGPoint=ff}{CGSize=ff}}', 'B{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGRectGetMaxY': (sel32or64('f{CGRect={CGPoint=ff}{CGSize=ff}}', 'd{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGBitmapContextGetWidth': (sel32or64('L^{CGContext=}', 'Q^{CGContext=}'),), 'CGShadingCreateRadial': (sel32or64('^{CGShading=}^{CGColorSpace=}{CGPoint=ff}f{CGPoint=ff}f^{CGFunction=}BB', '^{CGShading=}^{CGColorSpace=}{CGPoint=dd}d{CGPoint=dd}d^{CGFunction=}BB'), '', {'retval': {'type': b'^{CGShading=}', 'already_cfretained': True}}), 'CGPDFScannerRetain': ('^{CGPDFScanner=}^{CGPDFScanner=}',), 'CGDisplayMirrorsDisplay': ('II',), 'CGContextAddRects': (sel32or64('v^{CGContext=}^{CGRect={CGPoint=ff}{CGSize=ff}}L', 'v^{CGContext=}^{CGRect={CGPoint=dd}{CGSize=dd}}L'), '', {'arguments': {0: {'type': b'^{CGContext=}'}, 1: {'type': sel32or64(b'^{CGRect={CGPoint=ff}{CGSize=ff}}', b'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'n', 'c_array_length_in_arg': 2}, 2: {'type': b'L'}}}), 'CGDataConsumerCreateWithURL': ('^{CGDataConsumer=}^{__CFURL=}', '', {'retval': {'type': b'^{CGDataConsumer=}', 'already_cfretained': True}}), 'CGContextConvertRectToUserSpace': (sel32or64('{CGRect={CGPoint=ff}{CGSize=ff}}^{CGContext=}{CGRect={CGPoint=ff}{CGSize=ff}}', '{CGRect={CGPoint=dd}{CGSize=dd}}^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGGradientCreateWithColors': (sel32or64('^{CGGradient=}^{CGColorSpace=}^{__CFArray=}^f', '^{CGGradient=}^{CGColorSpace=}^{__CFArray=}^d'), '', {'retval': {'type': b'^{CGGradient=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^{CGColorSpace=}'}, 1: {'type': b'^{__CFArray=}'}, 2: {'type': sel32or64(b'^f', b'^d'), 'type_modifier': b'n', 'c_array_length_in_arg': 1}}}), 'CGPathApply': ('v^{CGPath=}^v^?',), 'CGGetDisplaysWithOpenGLDisplayMask': ('iII^I^I', '', {'arguments': {0: {'type': b'I'}, 1: {'type': b'I'}, 2: {'type': b'^I', 'type_modifier': b'o', 'c_array_length_in_arg': (1, 3)}, 3: {'type': b'^I', 'type_modifier': b'o'}}}), 'CGImageRetain': ('^{CGImage=}^{CGImage=}',), 'CGContextAddArc': (sel32or64('v^{CGContext=}fffffi', 'v^{CGContext=}dddddi'),), 'CGFontCreateWithPlatformFont': ('^{CGFont=}I', '', {'retval': {'type': b'^{CGFont=}', 'already_cfretained': True}}), 'CGPDFContextSetURLForRect': (sel32or64('v^{CGContext=}^{__CFURL=}{CGRect={CGPoint=ff}{CGSize=ff}}', 'v^{CGContext=}^{__CFURL=}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGPDFContentStreamRetain': ('^{CGPDFContentStream=}^{CGPDFContentStream=}',), 'CGCompleteDisplayConfiguration': ('i^{_CGDisplayConfigRef=}I',), 'CGAffineTransformTranslate': (sel32or64('{CGAffineTransform=ffffff}{CGAffineTransform=ffffff}ff', '{CGAffineTransform=dddddd}{CGAffineTransform=dddddd}dd'),), 'CGContextAddCurveToPoint': (sel32or64('v^{CGContext=}ffffff', 'v^{CGContext=}dddddd'),), 'CGPDFContentStreamCreateWithPage': ('^{CGPDFContentStream=}^{CGPDFPage=}',), 'CGEventSourceGetKeyboardType': ('I^{__CGEventSource=}',), 'CGEventKeyboardGetUnicodeString': ('v^{__CGEvent=}L^I^S', '', {'arguments': {0: {'type': b'^{__CGEvent=}'}, 1: {'type': b'L'}, 2: {'type': b'^I', 'type_modifier': b'o'}, 3: {'type': b'^S', 'type_modifier': b'o', 'c_array_length_in_arg': (1, 2)}}}), 'CGDisplaySwitchToMode': ('iI^{__CFDictionary=}',), 'CGEventSetIntegerValueField': ('v^{__CGEvent=}Iq',), 'CGEventCreate': ('^{__CGEvent=}^{__CGEventSource=}', '', {'retval': {'type': b'^{__CGEvent=}', 'already_cfretained': True}}), 'CGContextSetFillColorSpace': ('v^{CGContext=}^{CGColorSpace=}',), 'CGFontGetGlyphWithGlyphName': ('S^{CGFont=}^{__CFString=}',), 'CGFunctionRetain': ('^{CGFunction=}^{CGFunction=}',), 'CGContextConvertPointToUserSpace': (sel32or64('{CGPoint=ff}^{CGContext=}{CGPoint=ff}', '{CGPoint=dd}^{CGContext=}{CGPoint=dd}'),), 'CGColorSpaceCopyName': ('^{__CFString=}^{CGColorSpace=}',), 'CGPatternRelease': ('v^{CGPattern=}',), 'CGPointEqualToPoint': (sel32or64('B{CGPoint=ff}{CGPoint=ff}', 'B{CGPoint=dd}{CGPoint=dd}'),), 'CGCursorIsDrawnInFramebuffer': ('i',), 'CGEventSourceCounterForEventType': ('III',), 'CGDisplayCaptureWithOptions': ('iII',), 'CGDisplayIsStereo': ('iI',), 'CGBitmapContextGetBytesPerRow': (sel32or64('L^{CGContext=}', 'Q^{CGContext=}'),), 'CGContextBeginTransparencyLayer': ('v^{CGContext=}^{__CFDictionary=}',), 'CGFontRetain': ('^{CGFont=}^{CGFont=}',), 'CGContextSetLineDash': (sel32or64('v^{CGContext=}f^fL', 'v^{CGContext=}d^dL'), '', {'arguments': {0: {'type': b'^{CGContext=}'}, 1: {'type': sel32or64(b'f', b'd')}, 2: {'type': sel32or64(b'^f', b'^d'), 'type_modifier': b'n', 'c_array_length_in_arg': 3}, 3: {'type': b'L'}}}), 'CGColorSpaceCreateICCBased': (sel32or64('^{CGColorSpace=}L^f^{CGDataProvider=}^{CGColorSpace=}', '^{CGColorSpace=}L^d^{CGDataProvider=}^{CGColorSpace=}'), '', {'retval': {'type': b'^{CGColorSpace=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'L'}, 1: {'type': sel32or64(b'^f', b'^d'), 'type_modifier': b'n', 'c_array_of_variable_length': True}, 2: {'type': b'^{CGDataProvider=}'}, 3: {'type': b'^{CGColorSpace=}'}}}), 'CGContextSetGrayStrokeColor': (sel32or64('v^{CGContext=}ff', 'v^{CGContext=}dd'),), 'CGPDFOperatorTableRelease': ('v^{CGPDFOperatorTable=}',), 'CGContextGetTypeID': (sel32or64('L', 'Q'),), 'CGRectOffset': (sel32or64('{CGRect={CGPoint=ff}{CGSize=ff}}{CGRect={CGPoint=ff}{CGSize=ff}}ff', '{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}dd'),), 'CGLayerGetTypeID': (sel32or64('L', 'Q'),), 'CGColorSpaceCreateCalibratedGray': (sel32or64('^{CGColorSpace=}[3f][3f]f', '^{CGColorSpace=}[3d][3d]d'), '', {'retval': {'type': b'^{CGColorSpace=}', 'already_cfretained': True}}), 'CGEventTapCreate': ('^{__CFMachPort=}IIIQ^?^v', '', {'retval': {'type': b'^{__CFMachPort=}', 'already_cfretained': True}}), 'CGContextSetRenderingIntent': ('v^{CGContext=}i',), 'CGDisplayCurrentMode': ('^{__CFDictionary=}I',), 'CGConfigureDisplayWithDisplayMode': ('i^{_CGDisplayConfigRef=}I^{CGDisplayMode}^{__CFDictionary=}',), 'CGCursorIsVisible': ('i',), 'CGDisplayIsMain': ('iI',), 'CGSetLocalEventsFilterDuringSuppressionState': ('iII',), 'CGPDFDictionaryGetNumber': (sel32or64('B^{CGPDFDictionary=}r*^f', 'B^{CGPDFDictionary=}r*^d'), '', {'arguments': {0: {'type': b'^{CGPDFDictionary=}'}, 1: {'type': b'r*'}, 2: {'type': sel32or64(b'^f', b'^d'), 'type_modifier': b'o'}}}), 'CGAssociateMouseAndMouseCursorPosition': ('ii',), 'CGEventGetDoubleValueField': ('d^{__CGEvent=}I',), 'CGPDFDocumentAllowsPrinting': ('B^{CGPDFDocument=}',), 'CGContextSetBlendMode': ('v^{CGContext=}i',), 'CGFontGetGlyphAdvances': ('B^{CGFont=}^SL^i', '', {'arguments': {0: {'type': b'^{CGFont=}'}, 1: {'type': b'^S', 'type_modifier': b'n', 'c_array_length_in_arg': 2}, 2: {'type': b'L'}, 3: {'type': b'^i', 'type_modifier': b'o', 'c_array_length_in_arg': 2}}}), 'CGContextReplacePathWithStrokedPath': ('v^{CGContext=}',), 'CGGetDisplayTransferByFormula': ('iI^f^f^f^f^f^f^f^f^f', '', {'arguments': {0: {'type': b'I'}, 1: {'type': b'^f', 'type_modifier': b'o'}, 2: {'type': b'^f', 'type_modifier': b'o'}, 3: {'type': b'^f', 'type_modifier': b'o'}, 4: {'type': b'^f', 'type_modifier': b'o'}, 5: {'type': b'^f', 'type_modifier': b'o'}, 6: {'type': b'^f', 'type_modifier': b'o'}, 7: {'type': b'^f', 'type_modifier': b'o'}, 8: {'type': b'^f', 'type_modifier': b'o'}, 9: {'type': b'^f', 'type_modifier': b'o'}}}), 'CGDisplayIsInHWMirrorSet': ('iI',), 'CGDisplayCapture': ('iI',), 'CGImageGetAlphaInfo': ('i^{CGImage=}',), 'CGSizeCreateDictionaryRepresentation': (sel32or64('^{__CFDictionary=}{CGSize=ff}', '^{__CFDictionary=}{CGSize=dd}'), '', {'retval': {'type': b'^{__CFDictionary=}', 'already_cfretained': True}}), 'CGPDFStringGetLength': (sel32or64('L^{CGPDFString=}', 'Q^{CGPDFString=}'),), 'CGScreenRegisterMoveCallback': ('i^?^v', '', {'arguments': {0: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'I'}, 1: {'type': b'I'}, 2: {'type': b'^v'}}}, 'type': b'^?'}, 1: {'type': b'^v'}}}), 'CGPDFDocumentRetain': ('^{CGPDFDocument=}^{CGPDFDocument=}',), 'CGWaitForScreenUpdateRects': (sel32or64('iI^I^^{CGRect}^I^{_CGScreenUpdateMoveDelta=ii}', 'iI^I^^{CGRect}^Q^{_CGScreenUpdateMoveDelta=ii}'), '', {'arguments': {0: {'type': b'I'}, 1: {'type': b'^I', 'type_modifier': b'o'}, 2: {'type': b'^^{CGRect}', 'type_modifier': b'o', 'c_array_length_in_arg': 3}, 3: {'type': sel32or64(b'^I', b'^Q')}, 4: {'type': b'^{_CGScreenUpdateMoveDelta=ii}'}}}), 'CGDisplayBitsPerSample': (sel32or64('LI', 'QI'),), 'CGContextDrawTiledImage': (sel32or64('v^{CGContext=}{CGRect={CGPoint=ff}{CGSize=ff}}^{CGImage=}', 'v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}^{CGImage=}'),), 'CGBitmapContextGetBitsPerComponent': (sel32or64('L^{CGContext=}', 'Q^{CGContext=}'),), 'CGContextAddPath': ('v^{CGContext=}^{CGPath=}',), 'CGConfigureDisplayOrigin': ('i^{_CGDisplayConfigRef=}Iii',), 'CGContextSetCharacterSpacing': (sel32or64('v^{CGContext=}f', 'v^{CGContext=}d'),), 'CGDisplaySamplesPerPixel': (sel32or64('LI', 'QI'),), 'CGOpenGLDisplayMaskToDisplayID': ('II',), 'CGPDFArrayGetNumber': (sel32or64('B^{CGPDFArray=}L^f', 'B^{CGPDFArray=}L^d'), '', {'arguments': {0: {'type': b'^{CGPDFArray=}'}, 1: {'type': b'L'}, 2: {'type': sel32or64(b'^f', b'^d'), 'type_modifier': b'o'}}}), 'CGDisplaySetDisplayMode': ('iI^{CGDisplayMode}^{__CFDictionary=}',), 'CGRectIsNull': (sel32or64('B{CGRect={CGPoint=ff}{CGSize=ff}}', 'B{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGDataConsumerRelease': ('v^{CGDataConsumer=}',), 'CGColorSpaceCreateWithICCProfile': ('^{CGColorSpace=}^{__CFData=}', '', {'retval': {'type': b'^{CGColorSpace=}', 'already_cfretained': True}}), 'CGDisplayModeGetWidth': ('l^{CGDisplayMode}',), 'CGCaptureAllDisplays': ('i',), 'CGPDFScannerPopArray': ('B^{CGPDFScanner=}^^{CGPDFArray}', '', {'arguments': {0: {'type': b'^{CGPDFScanner=}'}, 1: {'type': b'^^{CGPDFArray}', 'type_modifier': b'o'}}}), 'CGContextClipToRect': (sel32or64('v^{CGContext=}{CGRect={CGPoint=ff}{CGSize=ff}}', 'v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGDisplayHideCursor': ('iI',), 'CGPDFDocumentGetPage': ('^{CGPDFPage=}^{CGPDFDocument=}L',), 'CGSessionCopyCurrentDictionary': ('^{__CFDictionary=}', '', {'retval': {'type': b'^{__CFDictionary=}', 'already_cfretained': True}}), 'CGPDFPageGetBoxRect': (sel32or64('{CGRect={CGPoint=ff}{CGSize=ff}}^{CGPDFPage=}i', '{CGRect={CGPoint=dd}{CGSize=dd}}^{CGPDFPage=}i'),), 'CGDisplayModeGetTypeID': (sel32or64('L', 'Q'),), 'CGWaitForScreenRefreshRects': ('i^^{CGRect}^I', '', {'arguments': {0: {'type': b'^^{CGRect}', 'type_modifier': b'o', 'c_array_length_in_arg': 1}, 1: {'type': b'^I', 'type_modifier': b'o'}}}), 'CGDataProviderCreateDirect': ('^{CGDataProvider=}^vqr^{CGDataProviderDirectCallbacks=I^?^?^?^?}', '', {'retval': {'type': b'^{CGDataProvider=}', 'already_cfretained': True}}), 'CGImageGetBitsPerComponent': (sel32or64('L^{CGImage=}', 'Q^{CGImage=}'),), 'CGShadingRetain': ('^{CGShading=}^{CGShading=}',), 'CGBitmapContextGetColorSpace': ('^{CGColorSpace=}^{CGContext=}',), 'CGContextShowTextAtPoint': (sel32or64('v^{CGContext=}ff*L', 'v^{CGContext=}dd*L'),), 'CGBitmapContextCreateImage': ('^{CGImage=}^{CGContext=}', '', {'retval': {'type': b'^{CGImage=}', 'already_cfretained': True}}), 'CGContextTranslateCTM': (sel32or64('v^{CGContext=}ff', 'v^{CGContext=}dd'),), 'CGDisplayModelNumber': ('II',), 'CGPDFContextCreateWithURL': (sel32or64('^{CGContext=}^{__CFURL=}^{CGRect={CGPoint=ff}{CGSize=ff}}^{__CFDictionary=}', '^{CGContext=}^{__CFURL=}^{CGRect={CGPoint=dd}{CGSize=dd}}^{__CFDictionary=}'), '', {'retval': {'type': b'^{CGContext=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^{__CFURL=}'}, 1: {'type': sel32or64(b'^{CGRect={CGPoint=ff}{CGSize=ff}}', b'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'n'}, 2: {'type': b'^{__CFDictionary=}'}}}), 'CGColorSpaceCopyICCProfile': ('^{__CFData=}^{CGColorSpace=}', '', {'retval': {'type': b'^{__CFData=}', 'already_cfretained': True}}), 'CGContextSetRGBStrokeColor': (sel32or64('v^{CGContext=}ffff', 'v^{CGContext=}dddd'),), 'CGRectCreateDictionaryRepresentation': (sel32or64('^{__CFDictionary=}{CGRect={CGPoint=ff}{CGSize=ff}}', '^{__CFDictionary=}{CGRect={CGPoint=dd}{CGSize=dd}}'), '', {'retval': {'type': b'^{__CFDictionary=}', 'already_cfretained': True}}), 'CGDisplayModeRelease': ('v^{CGDisplayMode}',), 'CGAffineTransformConcat': (sel32or64('{CGAffineTransform=ffffff}{CGAffineTransform=ffffff}{CGAffineTransform=ffffff}', '{CGAffineTransform=dddddd}{CGAffineTransform=dddddd}{CGAffineTransform=dddddd}'),), 'CGImageGetDataProvider': ('^{CGDataProvider=}^{CGImage=}',), 'CGContextConvertRectToDeviceSpace': (sel32or64('{CGRect={CGPoint=ff}{CGSize=ff}}^{CGContext=}{CGRect={CGPoint=ff}{CGSize=ff}}', '{CGRect={CGPoint=dd}{CGSize=dd}}^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGImageCreateWithMaskingColors': (sel32or64('^{CGImage=}^{CGImage=}^f', '^{CGImage=}^{CGImage=}^d'), '', {'retval': {'type': b'^{CGImage=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^{CGImage=}'}, 1: {'type': sel32or64(b'^f', b'^d'), 'type_modifier': b'n', 'c_array_of_variable_length': True}}}), 'CGPDFDictionaryGetInteger': ('B^{CGPDFDictionary=}r*^i', '', {'arguments': {0: {'type': b'^{CGPDFDictionary=}'}, 1: {'type': b'r*'}, 2: {'type': b'^i', 'type_modifier': b'o'}}}), 'CGColorGetAlpha': (sel32or64('f^{CGColor=}', 'd^{CGColor=}'),), 'CGContextSetAllowsFontSubpixelPositioning': ('v^{CGContext=}B',), 'CGDisplayBestModeForParameters': ('^{__CFDictionary=}ILLL^i', '', {'arguments': {0: {'type': b'I'}, 1: {'type': b'L'}, 2: {'type': b'L'}, 3: {'type': b'L'}, 4: {'type': b'^i', 'type_modifier': b'o'}}}), 'CGPDFArrayGetBoolean': ('B^{CGPDFArray=}L^B', '', {'arguments': {0: {'type': b'^{CGPDFArray=}'}, 1: {'type': b'L'}, 2: {'type': b'^B', 'type_modifier': b'o'}}}), 'CGShadingCreateAxial': (sel32or64('^{CGShading=}^{CGColorSpace=}{CGPoint=ff}{CGPoint=ff}^{CGFunction=}BB', '^{CGShading=}^{CGColorSpace=}{CGPoint=dd}{CGPoint=dd}^{CGFunction=}BB'), '', {'retval': {'type': b'^{CGShading=}', 'already_cfretained': True}}), 'CGEventCreateData': ('^{__CFData=}^{__CFAllocator=}^{__CGEvent=}', '', {'retval': {'type': b'^{__CFData=}', 'already_cfretained': True}}), 'CGRectMakeWithDictionaryRepresentation': (sel32or64('B^{__CFDictionary=}^{CGRect={CGPoint=ff}{CGSize=ff}}', 'B^{__CFDictionary=}^{CGRect={CGPoint=dd}{CGSize=dd}}'), '', {'arguments': {0: {'type': b'^{__CFDictionary=}'}, 1: {'type': sel32or64(b'^{CGRect={CGPoint=ff}{CGSize=ff}}', b'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'o'}}}), 'CGFunctionCreate': (sel32or64('^{CGFunction=}^vL^fL^fr^{CGFunctionCallbacks=I^?^?}', '^{CGFunction=}^vL^dL^dr^{CGFunctionCallbacks=I^?^?}'), '', {'retval': {'type': b'^{CGFunction=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^v'}, 1: {'type': b'L'}, 2: {'type': sel32or64(b'^f', b'^d'), 'type_modifier': b'n', 'c_array_of_variable_length': True}, 3: {'type': b'L'}, 4: {'type': sel32or64(b'^f', b'^d'), 'type_modifier': b'n', 'c_array_of_variable_length': True}, 5: {'type': b'r^{CGFunctionCallbacks=I^?^?}'}}}), 'CGDataProviderCreateDirectAccess': ('^{CGDataProvider=}^vLr^{CGDataProviderDirectAccessCallbacks=^?^?^?^?}', '', {'retval': {'type': b'^{CGDataProvider=}', 'already_cfretained': True}}), 'CGPaletteCreateFromPaletteBlendedWithColor': ('^{_CGDirectPaletteRef=}^{_CGDirectPaletteRef=}f{_CGDeviceColor=fff}', '', {'retval': {'type': b'^{_CGDirectPaletteRef=}', 'already_cfretained': True}}), 'CGContextGetTextMatrix': (sel32or64('{CGAffineTransform=ffffff}^{CGContext=}', '{CGAffineTransform=dddddd}^{CGContext=}'),), 'CGDisplayModeGetIOFlags': ('I^{CGDisplayMode}',), 'CGDisplayIsAsleep': ('iI',), 'CGGetDisplaysWithRect': (sel32or64('i{CGRect={CGPoint=ff}{CGSize=ff}}I^I^I', 'i{CGRect={CGPoint=dd}{CGSize=dd}}I^I^I'), '', {'arguments': {0: {'type': sel32or64(b'{CGRect={CGPoint=ff}{CGSize=ff}}', b'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 1: {'type': b'I'}, 2: {'type': b'^I', 'type_modifier': b'o', 'c_array_length_in_arg': (1, 3)}, 3: {'type': b'^I', 'type_modifier': b'o'}}}), 'CGFontCopyFullName': ('^{__CFString=}^{CGFont=}', '', {'retval': {'type': b'^{__CFString=}', 'already_cfretained': True}}), 'CGGetDisplaysWithPoint': (sel32or64('i{CGPoint=ff}I^I^I', 'i{CGPoint=dd}I^I^I'), '', {'arguments': {0: {'type': sel32or64(b'{CGPoint=ff}', b'{CGPoint=dd}')}, 1: {'type': b'I'}, 2: {'type': b'^I', 'type_modifier': b'o', 'c_array_length_in_arg': (1, 3)}, 3: {'type': b'^I', 'type_modifier': b'o'}}}), 'CGPDFStreamCopyData': ('^{__CFData=}^{CGPDFStream=}^i', '', {'retval': {'type': b'^{__CFData=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^{CGPDFStream=}'}, 1: {'type': b'^i', 'type_modifier': b'o'}}}), 'CGImageGetHeight': (sel32or64('L^{CGImage=}', 'Q^{CGImage=}'),), 'CGDisplayBitsPerPixel': (sel32or64('LI', 'QI'),), 'CGPDFDocumentGetTrimBox': (sel32or64('{CGRect={CGPoint=ff}{CGSize=ff}}^{CGPDFDocument=}i', '{CGRect={CGPoint=dd}{CGSize=dd}}^{CGPDFDocument=}i'),), 'CGGetActiveDisplayList': ('iI^I^I', '', {'arguments': {0: {'type': b'I'}, 1: {'type': b'^I', 'type_modifier': b'o', 'c_array_length_in_arg': (0, 2)}, 2: {'type': b'^I', 'type_modifier': b'o'}}}), 'CGContextGetClipBoundingBox': (sel32or64('{CGRect={CGPoint=ff}{CGSize=ff}}^{CGContext=}', '{CGRect={CGPoint=dd}{CGSize=dd}}^{CGContext=}'),), 'CGContextRetain': ('^{CGContext=}^{CGContext=}',), 'CGDisplayRemoveReconfigurationCallback': ('i^?^v',), 'CGPDFDocumentGetRotationAngle': ('i^{CGPDFDocument=}i',), 'CGContextClipToRects': (sel32or64('v^{CGContext=}^{CGRect={CGPoint=ff}{CGSize=ff}}L', 'v^{CGContext=}^{CGRect={CGPoint=dd}{CGSize=dd}}L'), '', {'arguments': {0: {'type': b'^{CGContext=}'}, 1: {'type': sel32or64(b'^{CGRect={CGPoint=ff}{CGSize=ff}}', b'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'n', 'c_array_length_in_arg': 2}, 2: {'type': b'L'}}}), 'CGEventCreateCopy': ('^{__CGEvent=}^{__CGEvent=}', '', {'retval': {'type': b'^{__CGEvent=}', 'already_cfretained': True}}), 'CGEventSourceSetLocalEventsSuppressionInterval': ('v^{__CGEventSource=}d',), 'CGPDFDocumentGetBleedBox': (sel32or64('{CGRect={CGPoint=ff}{CGSize=ff}}^{CGPDFDocument=}i', '{CGRect={CGPoint=dd}{CGSize=dd}}^{CGPDFDocument=}i'),), 'CGPathGetCurrentPoint': (sel32or64('{CGPoint=ff}^{CGPath=}', '{CGPoint=dd}^{CGPath=}'),), 'CGContextShowGlyphsAtPositions': (sel32or64('v^{CGContext=}^S^{CGPoint=ff}L', 'v^{CGContext=}^S^{CGPoint=dd}L'), '', {'arguments': {0: {'type': b'^{CGContext=}'}, 1: {'type': b'^S', 'type_modifier': b'n', 'c_array_length_in_arg': 3}, 2: {'type': sel32or64(b'^{CGPoint=ff}', b'^{CGPoint=dd}'), 'type_modifier': b'n', 'c_array_length_in_arg': 3}, 3: {'type': b'L'}}}), 'CGEventCreateMouseEvent': (sel32or64('^{__CGEvent=}^{__CGEventSource=}I{CGPoint=ff}I', '^{__CGEvent=}^{__CGEventSource=}I{CGPoint=dd}I'), '', {'retval': {'type': b'^{__CGEvent=}', 'already_cfretained': True}}), 'CGContextSetStrokeColorWithColor': ('v^{CGContext=}^{CGColor=}',), 'CGPaletteSetColorAtIndex': ('v^{_CGDirectPaletteRef=}{_CGDeviceColor=fff}I',), 'CGContextSetCMYKFillColor': (sel32or64('v^{CGContext=}fffff', 'v^{CGContext=}ddddd'),), 'CGImageCreateWithImageInRect': (sel32or64('^{CGImage=}^{CGImage=}{CGRect={CGPoint=ff}{CGSize=ff}}', '^{CGImage=}^{CGImage=}{CGRect={CGPoint=dd}{CGSize=dd}}'), '', {'retval': {'type': b'^{CGImage=}', 'already_cfretained': True}}), 'CGContextBeginPage': (sel32or64('v^{CGContext=}^{CGRect={CGPoint=ff}{CGSize=ff}}', 'v^{CGContext=}^{CGRect={CGPoint=dd}{CGSize=dd}}'), '', {'arguments': {0: {'type': b'^{CGContext=}'}, 1: {'type': sel32or64(b'^{CGRect={CGPoint=ff}{CGSize=ff}}', b'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'n'}}}), 'CGImageCreateCopyWithColorSpace': ('^{CGImage=}^{CGImage=}^{CGColorSpace=}', '', {'retval': {'type': b'^{CGImage=}', 'already_cfretained': True}}), 'CGContextDrawPDFDocument': (sel32or64('v^{CGContext=}{CGRect={CGPoint=ff}{CGSize=ff}}^{CGPDFDocument=}i', 'v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}^{CGPDFDocument=}i'),), 'CGEventGetUnflippedLocation': (sel32or64('{CGPoint=ff}^{__CGEvent=}', '{CGPoint=dd}^{__CGEvent=}'),), 'CGFunctionGetTypeID': (sel32or64('L', 'Q'),), 'CGCaptureAllDisplaysWithOptions': ('iI',), 'CGContextSetShadowWithColor': (sel32or64('v^{CGContext=}{CGSize=ff}f^{CGColor=}', 'v^{CGContext=}{CGSize=dd}d^{CGColor=}'),), 'CGContextSetInterpolationQuality': ('v^{CGContext=}i',), 'CGPDFPageGetDictionary': ('^{CGPDFDictionary=}^{CGPDFPage=}',), 'CGContextMoveToPoint': (sel32or64('v^{CGContext=}ff', 'v^{CGContext=}dd'),), 'CGContextDrawLayerAtPoint': (sel32or64('v^{CGContext=}{CGPoint=ff}^{CGLayer=}', 'v^{CGContext=}{CGPoint=dd}^{CGLayer=}'),), 'CGDisplayRestoreColorSyncSettings': ('v',), 'CGPDFPageGetPageNumber': (sel32or64('L^{CGPDFPage=}', 'Q^{CGPDFPage=}'),), 'CGColorRelease': ('v^{CGColor=}',), 'CGColorSpaceGetColorTable': ('v^{CGColorSpace=}^C', '', {'arguments': {0: {'type': b'^{CGColorSpace=}'}, 1: {'type': b'^C', 'type_modifier': b'o', 'c_array_of_variable_length': True}}}), 'CGDisplayIsAlwaysInMirrorSet': ('iI',), 'CGFontCopyPostScriptName': ('^{__CFString=}^{CGFont=}', '', {'retval': {'type': b'^{__CFString=}', 'already_cfretained': True}}), 'CGFontCreateWithDataProvider': ('^{CGFont=}^{CGDataProvider=}', '', {'retval': {'type': b'^{CGFont=}', 'already_cfretained': True}}), 'CGRectInset': (sel32or64('{CGRect={CGPoint=ff}{CGSize=ff}}{CGRect={CGPoint=ff}{CGSize=ff}}ff', '{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}dd'),), 'CGRectGetWidth': (sel32or64('f{CGRect={CGPoint=ff}{CGSize=ff}}', 'd{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGContextStrokeRectWithWidth': (sel32or64('v^{CGContext=}{CGRect={CGPoint=ff}{CGSize=ff}}f', 'v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}d'),), 'CGEventGetTypeID': (sel32or64('L', 'Q'),), 'CGFontGetItalicAngle': (sel32or64('f^{CGFont=}', 'd^{CGFont=}'),), 'CGRectUnion': (sel32or64('{CGRect={CGPoint=ff}{CGSize=ff}}{CGRect={CGPoint=ff}{CGSize=ff}}{CGRect={CGPoint=ff}{CGSize=ff}}', '{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGPathAddRects': (sel32or64('v^{CGPath=}^{CGAffineTransform=ffffff}^{CGRect={CGPoint=ff}{CGSize=ff}}L', 'v^{CGPath=}^{CGAffineTransform=dddddd}^{CGRect={CGPoint=dd}{CGSize=dd}}L'), '', {'arguments': {0: {'type': b'^{CGPath=}'}, 1: {'type': sel32or64(b'^{CGAffineTransform=ffffff}', b'^{CGAffineTransform=dddddd}'), 'type_modifier': b'n'}, 2: {'type': sel32or64(b'^{CGRect={CGPoint=ff}{CGSize=ff}}', b'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'n', 'c_array_length_in_arg': 3}, 3: {'type': b'L'}}}), 'CGPDFContextSetDestinationForRect': (sel32or64('v^{CGContext=}^{__CFString=}{CGRect={CGPoint=ff}{CGSize=ff}}', 'v^{CGContext=}^{__CFString=}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGPDFOperatorTableRetain': ('^{CGPDFOperatorTable=}^{CGPDFOperatorTable=}',), 'CGLayerGetContext': ('^{CGContext=}^{CGLayer=}',), 'CGImageGetBitsPerPixel': (sel32or64('L^{CGImage=}', 'Q^{CGImage=}'),), 'CGPathAddArc': (sel32or64('v^{CGPath=}^{CGAffineTransform=ffffff}fffffB', 'v^{CGPath=}^{CGAffineTransform=dddddd}dddddB'), '', {'arguments': {0: {'type': b'^{CGPath=}'}, 1: {'type': sel32or64(b'^{CGAffineTransform=ffffff}', b'^{CGAffineTransform=dddddd}'), 'type_modifier': b'n'}, 2: {'type': sel32or64(b'f', b'd')}, 3: {'type': sel32or64(b'f', b'd')}, 4: {'type': sel32or64(b'f', b'd')}, 5: {'type': sel32or64(b'f', b'd')}, 6: {'type': sel32or64(b'f', b'd')}, 7: {'type': b'B'}}}), 'CGContextDrawLinearGradient': (sel32or64('v^{CGContext=}^{CGGradient=}{CGPoint=ff}{CGPoint=ff}I', 'v^{CGContext=}^{CGGradient=}{CGPoint=dd}{CGPoint=dd}I'),), 'CGDataConsumerGetTypeID': (sel32or64('L', 'Q'),), 'CGDisplayModeIsUsableForDesktopGUI': ('B^{CGDisplayMode}',), 'CGRectIsInfinite': (sel32or64('B{CGRect={CGPoint=ff}{CGSize=ff}}', 'B{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGEventSetTimestamp': ('v^{__CGEvent=}Q',), 'CGDisplayWaitForBeamPositionOutsideLines': ('iIII',), 'CGPDFContextBeginPage': ('v^{CGContext=}^{__CFDictionary=}',), 'CGPSConverterIsConverting': ('B^{CGPSConverter=}',), 'CGPathIsEmpty': ('B^{CGPath=}',), 'CGDisplayScreenSize': (sel32or64('{CGSize=ff}I', '{CGSize=dd}I'),), 'CGDisplayIsInMirrorSet': ('iI',), 'CGFontCopyGlyphNameForGlyph': ('^{__CFString=}^{CGFont=}S', '', {'retval': {'type': b'^{__CFString=}', 'already_cfretained': True}}), 'CGBitmapContextGetAlphaInfo': ('i^{CGContext=}',), 'CGEventSourceCreate': ('^{__CGEventSource=}I', '', {'retval': {'type': b'^{__CGEventSource=}', 'already_cfretained': True}}), 'CGPDFScannerRelease': ('v^{CGPDFScanner=}',), 'CGFontGetFontBBox': (sel32or64('{CGRect={CGPoint=ff}{CGSize=ff}}^{CGFont=}', '{CGRect={CGPoint=dd}{CGSize=dd}}^{CGFont=}'),), 'CGShadingRelease': ('v^{CGShading=}',), 'CGDisplayFadeOperationInProgress': ('i',), 'CGPostMouseEvent': (sel32or64('i{CGPoint=ff}iIi', 'i{CGPoint=dd}iIi'), '', {'c_array_length_in_arg': 2, 'variadic': 'true'}), 'CGPDFContentStreamGetStreams': ('^{__CFArray=}^{CGPDFContentStream=}',), 'CGContextSetMiterLimit': (sel32or64('v^{CGContext=}f', 'v^{CGContext=}d'),), 'CGPDFOperatorTableSetCallback': ('v^{CGPDFOperatorTable=}r*^?', '', {'arguments': {0: {'type': b'^{CGPDFOperatorTable=}'}, 1: {'type': b'r*'}, 2: {'callable': {'retval': {'type': 'v'}, 'arguments': {}}, 'type': b'^?'}}}), 'CGEventTapIsEnabled': ('B^{__CFMachPort=}',), 'CGContextDrawPath': ('v^{CGContext=}i',), 'CGWindowServerCFMachPort': ('^{__CFMachPort=}',), 'CGColorEqualToColor': ('B^{CGColor=}^{CGColor=}',), 'CGContextSetFontSize': (sel32or64('v^{CGContext=}f', 'v^{CGContext=}d'),), 'CGEventGetIntegerValueField': ('q^{__CGEvent=}I',), 'CGContextShowText': ('v^{CGContext=}*L',), 'CGColorSpaceCreateWithName': ('^{CGColorSpace=}^{__CFString=}', '', {'retval': {'type': b'^{CGColorSpace=}', 'already_cfretained': True}}), 'CGRectGetMaxX': (sel32or64('f{CGRect={CGPoint=ff}{CGSize=ff}}', 'd{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGImageCreateWithMask': ('^{CGImage=}^{CGImage=}^{CGImage=}', '', {'retval': {'type': b'^{CGImage=}', 'already_cfretained': True}}), 'CGImageCreateWithPNGDataProvider': (sel32or64('^{CGImage=}^{CGDataProvider=}^fBi', '^{CGImage=}^{CGDataProvider=}^dBi'), '', {'retval': {'type': b'^{CGImage=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^{CGDataProvider=}'}, 1: {'type': sel32or64(b'^f', b'^d'), 'type_modifier': b'n', 'c_array_of_variable_length': True}, 2: {'type': b'B'}, 3: {'type': b'i'}}}), 'CGContextSetTextDrawingMode': ('v^{CGContext=}i',), 'CGContextGetUserSpaceToDeviceSpaceTransform': (sel32or64('{CGAffineTransform=ffffff}^{CGContext=}', '{CGAffineTransform=dddddd}^{CGContext=}'),), 'CGDataConsumerCreateWithCFData': ('^{CGDataConsumer=}^{__CFData=}', '', {'retval': {'type': b'^{CGDataConsumer=}', 'already_cfretained': True}}), 'CGColorSpaceCreateCalibratedRGB': ('^{CGColorSpace=}[3f][3f][3f][9f]', '', {'retval': {'type': b'^{CGColorSpace=}', 'already_cfretained': True}}), 'CGContextSetLineJoin': ('v^{CGContext=}i',), 'CGDataProviderCreateSequential': ('^{CGDataProvider=}^vr^{CGDataProviderSequentialCallbacks=I^?^?^?^?}', '', {'retval': {'type': b'^{CGDataProvider=}', 'already_cfretained': True}}), 'CGPDFArrayGetNull': ('B^{CGPDFArray=}L',), 'CGEventSourceSecondsSinceLastEventType': ('dII',), 'CGContextSetRGBFillColor': (sel32or64('v^{CGContext=}ffff', 'v^{CGContext=}dddd'),), 'CGPaletteCreateCopy': ('^{_CGDirectPaletteRef=}^{_CGDirectPaletteRef=}', '', {'retval': {'type': b'^{_CGDirectPaletteRef=}', 'already_cfretained': True}}), 'CGGetLastMouseDelta': ('v^i^i', '', {'arguments': {0: {'type': b'^i', 'type_modifier': b'o'}, 1: {'type': b'^i', 'type_modifier': b'o'}}}), 'CGPDFArrayGetDictionary': ('B^{CGPDFArray=}L^^{CGPDFDictionary}', '', {'arguments': {0: {'type': b'^{CGPDFArray=}'}, 1: {'type': b'L'}, 2: {'type': b'^^{CGPDFDictionary}', 'type_modifier': b'o'}}}), 'CGPathCloseSubpath': ('v^{CGPath=}',), 'CGPDFContentStreamCreateWithStream': ('^{CGPDFContentStream=}^{CGPDFStream=}^{CGPDFDictionary=}^{CGPDFContentStream=}',), 'CGDisplaySerialNumber': ('II',), 'CGGetOnlineDisplayList': ('iI^I^I', '', {'arguments': {0: {'type': b'I'}, 1: {'type': b'^I', 'type_modifier': b'o', 'c_array_length_in_arg': (0, 2)}, 2: {'type': b'^I', 'type_modifier': b'o'}}}), 'CGCancelDisplayConfiguration': ('i^{_CGDisplayConfigRef=}',), 'CGEventTapPostEvent': ('v^{__CGEventTapProxy=}^{__CGEvent=}',), 'CGEventGetTimestamp': ('Q^{__CGEvent=}',), 'CGContextSetShouldSubpixelPositionFonts': ('v^{CGContext=}B',), 'CGContextSaveGState': ('v^{CGContext=}',), 'CGReleaseAllDisplays': ('i',), 'CGDisplayRelease': ('iI',), 'CGContextConvertSizeToUserSpace': (sel32or64('{CGSize=ff}^{CGContext=}{CGSize=ff}', '{CGSize=dd}^{CGContext=}{CGSize=dd}'),), 'CGColorCreateCopyWithAlpha': (sel32or64('^{CGColor=}^{CGColor=}f', '^{CGColor=}^{CGColor=}d'), '', {'retval': {'type': b'^{CGColor=}', 'already_cfretained': True}}), 'CGPDFScannerPopNumber': (sel32or64('B^{CGPDFScanner=}^f', 'B^{CGPDFScanner=}^d'), '', {'arguments': {0: {'type': b'^{CGPDFScanner=}'}, 1: {'type': sel32or64(b'^f', b'^d'), 'type_modifier': b'o'}}}), 'CGContextEOFillPath': ('v^{CGContext=}',), 'CGPathCreateCopy': ('^{CGPath=}^{CGPath=}', '', {'retval': {'type': b'^{CGPath=}', 'already_cfretained': True}}), 'CGPSConverterAbort': ('B^{CGPSConverter=}',), 'CGContextFillPath': ('v^{CGContext=}',), 'CGDisplayBaseAddress': ('^vI', '', {'retval': {'type': b'^v', 'c_array_of_variable_length': True}}), 'CGContextFillRects': (sel32or64('v^{CGContext=}^{CGRect={CGPoint=ff}{CGSize=ff}}L', 'v^{CGContext=}^{CGRect={CGPoint=dd}{CGSize=dd}}L'), '', {'arguments': {0: {'type': b'^{CGContext=}'}, 1: {'type': sel32or64(b'^{CGRect={CGPoint=ff}{CGSize=ff}}', b'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'n', 'c_array_length_in_arg': 2}, 2: {'type': b'L'}}}), 'CGContextStrokeEllipseInRect': (sel32or64('v^{CGContext=}{CGRect={CGPoint=ff}{CGSize=ff}}', 'v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGEventGetFlags': ('Q^{__CGEvent=}',), 'CGPDFContextEndPage': ('v^{CGContext=}',), 'CGEventSourceButtonState': ('BII',), 'CGContextConvertSizeToDeviceSpace': (sel32or64('{CGSize=ff}^{CGContext=}{CGSize=ff}', '{CGSize=dd}^{CGContext=}{CGSize=dd}'),), 'CGReleaseScreenRefreshRects': (sel32or64('v^{CGRect={CGPoint=ff}{CGSize=ff}}', 'v^{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGContextSetFlatness': (sel32or64('v^{CGContext=}f', 'v^{CGContext=}d'),), 'CGContextDrawShading': ('v^{CGContext=}^{CGShading=}',), 'CGWindowLevelForKey': ('ii',), 'CGFontCopyVariationAxes': ('^{__CFArray=}^{CGFont=}', '', {'retval': {'type': b'^{__CFArray=}', 'already_cfretained': True}}), 'CGContextDrawImage': (sel32or64('v^{CGContext=}{CGRect={CGPoint=ff}{CGSize=ff}}^{CGImage=}', 'v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}^{CGImage=}'),), 'CGPDFDocumentCreateWithProvider': ('^{CGPDFDocument=}^{CGDataProvider=}', '', {'retval': {'type': b'^{CGPDFDocument=}', 'already_cfretained': True}}), 'CGPDFDocumentGetArtBox': (sel32or64('{CGRect={CGPoint=ff}{CGSize=ff}}^{CGPDFDocument=}i', '{CGRect={CGPoint=dd}{CGSize=dd}}^{CGPDFDocument=}i'),), 'CGContextBeginPath': ('v^{CGContext=}',), 'CGFontGetNumberOfGlyphs': (sel32or64('L^{CGFont=}', 'Q^{CGFont=}'),), 'CGPathIsRect': (sel32or64('B^{CGPath=}^{CGRect={CGPoint=ff}{CGSize=ff}}', 'B^{CGPath=}^{CGRect={CGPoint=dd}{CGSize=dd}}'), '', {'arguments': {0: {'type': b'^{CGPath=}'}, 1: {'type': sel32or64(b'^{CGRect={CGPoint=ff}{CGSize=ff}}', b'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'o'}}}), 'CGDisplayModeCopyPixelEncoding': ('^{__CFString=}^{CGDisplayMode}', '', {'retval': {'type': b'^{__CFString=}', 'already_cfretained': True}}), 'CGPSConverterConvert': ('B^{CGPSConverter=}^{CGDataProvider=}^{CGDataConsumer=}^{__CFDictionary=}',), 'CGDisplayAddressForPosition': ('^vIii', '', {'retval': {'type': b'^v', 'c_array_of_variable_length': True}}), 'CGContextConvertPointToDeviceSpace': (sel32or64('{CGPoint=ff}^{CGContext=}{CGPoint=ff}', '{CGPoint=dd}^{CGContext=}{CGPoint=dd}'),), 'CGDisplayBounds': (sel32or64('{CGRect={CGPoint=ff}{CGSize=ff}}I', '{CGRect={CGPoint=dd}{CGSize=dd}}I'),), 'CGEventTapEnable': ('v^{__CFMachPort=}B',), 'CGColorGetConstantColor': ('^{CGColor=}^{__CFString=}',), 'CGDisplayUnitNumber': ('II',), 'CGContextClosePath': ('v^{CGContext=}',), 'CGImageIsMask': ('B^{CGImage=}',), 'CGDisplayCopyDisplayMode': ('^{CGDisplayMode}I', '', {'retval': {'type': b'^{CGDisplayMode}', 'already_cfretained': True}}), 'CGPDFDocumentAllowsCopying': ('B^{CGPDFDocument=}',), 'CGDisplayCreateImage': ('^{CGImage=}I', '', {'retval': {'type': b'^{CGImage=}', 'already_cfretained': True}}), 'CGDisplayRotation': ('dI',), 'CGDisplayBestModeForParametersAndRefreshRateWithProperty': ('^{__CFDictionary=}ILLLd^{__CFString=}^i', '', {'arguments': {0: {'type': b'I'}, 1: {'type': b'L'}, 2: {'type': b'L'}, 3: {'type': b'L'}, 4: {'type': b'd'}, 5: {'type': b'^{__CFString=}'}, 6: {'type': b'^i', 'type_modifier': b'o'}}}), 'CGDisplayIDToOpenGLDisplayMask': ('II',), 'CGColorCreate': (sel32or64('^{CGColor=}^{CGColorSpace=}^f', '^{CGColor=}^{CGColorSpace=}^d'), '', {'retval': {'type': b'^{CGColor=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^{CGColorSpace=}'}, 1: {'type': sel32or64(b'^f', b'^d'), 'type_modifier': b'n', 'c_array_of_variable_length': True}}}), 'CGEventSourceSetPixelsPerLine': ('v^{__CGEventSource=}d',), 'CGDisplayBeamPosition': ('II',), 'CGPDFDocumentGetTypeID': (sel32or64('L', 'Q'),), 'CGShadingGetTypeID': (sel32or64('L', 'Q'),), 'CGEventSourceKeyState': ('BIS',), 'CGContextBeginTransparencyLayerWithRect': (sel32or64('v^{CGContext=}{CGRect={CGPoint=ff}{CGSize=ff}}^{__CFDictionary=}', 'v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}^{__CFDictionary=}'),), 'CGPointCreateDictionaryRepresentation': (sel32or64('^{__CFDictionary=}{CGPoint=ff}', '^{__CFDictionary=}{CGPoint=dd}'), '', {'retval': {'type': b'^{__CFDictionary=}', 'already_cfretained': True}}), 'CGAffineTransformEqualToTransform': (sel32or64('B{CGAffineTransform=ffffff}{CGAffineTransform=ffffff}', 'B{CGAffineTransform=dddddd}{CGAffineTransform=dddddd}'),), 'CGDisplayPixelsWide': (sel32or64('LI', 'QI'),), 'CGEventSourceFlagsState': ('QI',), 'CGLayerRetain': ('^{CGLayer=}^{CGLayer=}',), 'CGContextFillRect': (sel32or64('v^{CGContext=}{CGRect={CGPoint=ff}{CGSize=ff}}', 'v^{CGContext=}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGAffineTransformInvert': (sel32or64('{CGAffineTransform=ffffff}{CGAffineTransform=ffffff}', '{CGAffineTransform=dddddd}{CGAffineTransform=dddddd}'),), 'CGPaletteGetColorAtIndex': ('{_CGDeviceColor=fff}^{_CGDirectPaletteRef=}I',), 'CGEventSetFlags': ('v^{__CGEvent=}Q',), 'CGPDFDocumentGetCropBox': (sel32or64('{CGRect={CGPoint=ff}{CGSize=ff}}^{CGPDFDocument=}i', '{CGRect={CGPoint=dd}{CGSize=dd}}^{CGPDFDocument=}i'),), 'CGEventCreateScrollWheelEvent': ('^{__CGEvent=}^{__CGEventSource=}IIi', '', {'retval': {'type': b'^{__CGEvent=}', 'already_cfretained': True}, 'c_array_length_in_arg': 2, 'variadic': 'true'}), 'CGPatternGetTypeID': (sel32or64('L', 'Q'),), 'CGImageGetBytesPerRow': (sel32or64('L^{CGImage=}', 'Q^{CGImage=}'),), 'CGPathRelease': ('v^{CGPath=}',), 'CGFontCopyTableTags': ('^{__CFArray=}^{CGFont=}', '', {'retval': {'type': b'^{__CFArray=}', 'already_cfretained': True}}), 'CGEventGetType': ('I^{__CGEvent=}',), 'CGPathMoveToPoint': (sel32or64('v^{CGPath=}^{CGAffineTransform=ffffff}ff', 'v^{CGPath=}^{CGAffineTransform=dddddd}dd'), '', {'arguments': {0: {'type': b'^{CGPath=}'}, 1: {'type': sel32or64(b'^{CGAffineTransform=ffffff}', b'^{CGAffineTransform=dddddd}'), 'type_modifier': b'n'}, 2: {'type': sel32or64(b'f', b'd')}, 3: {'type': sel32or64(b'f', b'd')}}}), 'CGFontRelease': ('v^{CGFont=}',), 'CGPDFDocumentRelease': ('v^{CGPDFDocument=}',), 'CGContextSetLineWidth': (sel32or64('v^{CGContext=}f', 'v^{CGContext=}d'),), 'CGContextGetPathCurrentPoint': (sel32or64('{CGPoint=ff}^{CGContext=}', '{CGPoint=dd}^{CGContext=}'),), 'CGContextSetPatternPhase': (sel32or64('v^{CGContext=}{CGSize=ff}', 'v^{CGContext=}{CGSize=dd}'),), 'CGFontGetAscent': ('i^{CGFont=}',), 'CGPDFDictionaryGetDictionary': ('B^{CGPDFDictionary=}r*^^{CGPDFDictionary}', '', {'arguments': {0: {'type': b'^{CGPDFDictionary=}'}, 1: {'type': b'r*'}, 2: {'type': b'^^{CGPDFDictionary}', 'type_modifier': b'o'}}}), 'CGContextShowGlyphs': ('v^{CGContext=}^SL', '', {'arguments': {0: {'type': b'^{CGContext=}'}, 1: {'type': b'^S', 'type_modifier': b'n', 'c_array_length_in_arg': 2}, 2: {'type': b'L'}}}), 'CGFontGetLeading': ('i^{CGFont=}',), 'CGGradientCreateWithColorComponents': (sel32or64('^{CGGradient=}^{CGColorSpace=}^f^fL', '^{CGGradient=}^{CGColorSpace=}^d^dL'), '', {'retval': {'type': b'^{CGGradient=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^{CGColorSpace=}'}, 1: {'type': sel32or64(b'^f', b'^d'), 'type_modifier': b'n', 'c_array_length_in_arg': 3}, 2: {'type': sel32or64(b'^f', b'^d'), 'type_modifier': b'n', 'c_array_length_in_arg': 3}, 3: {'type': b'L'}}}), 'CGDisplayGetDrawingContext': ('^{CGContext=}I',), 'CGEventGetLocation': (sel32or64('{CGPoint=ff}^{__CGEvent=}', '{CGPoint=dd}^{__CGEvent=}'),), 'CGRectGetMinY': (sel32or64('f{CGRect={CGPoint=ff}{CGSize=ff}}', 'd{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGRectGetMinX': (sel32or64('f{CGRect={CGPoint=ff}{CGSize=ff}}', 'd{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'CGContextSetFont': ('v^{CGContext=}^{CGFont=}',), 'CGPDFObjectGetValue': ('B^(CGPDFObject=)i^v', '', {'arguments': {0: {'type': b'^(CGPDFObject=)'}, 1: {'type': b'i'}, 2: {'type': b'^v', 'type_modifier': b'o', 'c_array_of_variable_length': True}}}), 'CGDisplayShowCursor': ('iI',), 'CGFontCanCreatePostScriptSubset': ('B^{CGFont=}i',), 'CGPathRetain': ('^{CGPath=}^{CGPath=}',), 'CGPDFDocumentGetNumberOfPages': (sel32or64('L^{CGPDFDocument=}', 'Q^{CGPDFDocument=}'),), 'CGAffineTransformMakeScale': (sel32or64('{CGAffineTransform=ffffff}ff', '{CGAffineTransform=dddddd}dd'),), 'CGPathAddCurveToPoint': (sel32or64('v^{CGPath=}^{CGAffineTransform=ffffff}ffffff', 'v^{CGPath=}^{CGAffineTransform=dddddd}dddddd'), '', {'arguments': {0: {'type': b'^{CGPath=}'}, 1: {'type': sel32or64(b'^{CGAffineTransform=ffffff}', b'^{CGAffineTransform=dddddd}'), 'type_modifier': b'n'}, 2: {'type': sel32or64(b'f', b'd')}, 3: {'type': sel32or64(b'f', b'd')}, 4: {'type': sel32or64(b'f', b'd')}, 5: {'type': sel32or64(b'f', b'd')}, 6: {'type': sel32or64(b'f', b'd')}, 7: {'type': sel32or64(b'f', b'd')}}}), 'CGImageCreate': (sel32or64('^{CGImage=}LLLLL^{CGColorSpace=}I^{CGDataProvider=}^fBi', '^{CGImage=}LLLLL^{CGColorSpace=}I^{CGDataProvider=}^dBi'), '', {'retval': {'type': b'^{CGImage=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'L'}, 1: {'type': b'L'}, 2: {'type': b'L'}, 3: {'type': b'L'}, 4: {'type': b'L'}, 5: {'type': b'^{CGColorSpace=}'}, 6: {'type': b'I'}, 7: {'type': b'^{CGDataProvider=}'}, 8: {'type': sel32or64(b'^f', b'^d'), 'type_modifier': b'n', 'c_array_of_variable_length': True}, 9: {'type': b'B'}, 10: {'type': b'i'}}}), 'CGContextSetShouldSmoothFonts': ('v^{CGContext=}B',), 'CGPDFDictionaryGetBoolean': ('B^{CGPDFDictionary=}r*^B', '', {'arguments': {0: {'type': b'^{CGPDFDictionary=}'}, 1: {'type': b'r*'}, 2: {'type': b'^B', 'type_modifier': b'o'}}}), 'CGPDFStringGetBytePtr': ('*^{CGPDFString=}', '', {'retval': {'type': b'*', 'c_array_of_variable_length': True}}), 'CGScreenUnregisterMoveCallback': ('v^?^v',), 'CGColorGetColorSpace': ('^{CGColorSpace=}^{CGColor=}',), 'CGDisplayAvailableModes': ('^{__CFArray=}I',), 'CGEventCreateSourceFromEvent': ('^{__CGEventSource=}^{__CGEvent=}', '', {'retval': {'type': b'^{__CGEventSource=}', 'already_cfretained': True}}), 'CGPostKeyboardEvent': ('iSSi',), 'CGPDFScannerPopStream': ('B^{CGPDFScanner=}^^{CGPDFStream}', '', {'arguments': {0: {'type': b'^{CGPDFScanner=}'}, 1: {'type': b'^^{CGPDFStream}', 'type_modifier': b'o'}}}), 'CGPathCreateMutableCopy': ('^{CGPath=}^{CGPath=}', '', {'retval': {'type': b'^{CGPath=}', 'already_cfretained': True}}), 'CGPathGetTypeID': (sel32or64('L', 'Q'),), 'CGColorSpaceCreateIndexed': ('^{CGColorSpace=}^{CGColorSpace=}L*', '', {'retval': {'type': b'^{CGColorSpace=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^{CGColorSpace=}'}, 1: {'type': b'L'}, 2: {'type': b'*', 'type_modifier': b'n', 'c_array_of_variable_length': True}}}), 'CGColorSpaceCreateLab': ('^{CGColorSpace=}[3f][3f][4f]', '', {'retval': {'type': b'^{CGColorSpace=}', 'already_cfretained': True}}), 'CGDisplayIOServicePort': ('II',), 'CGContextSetFillPattern': (sel32or64('v^{CGContext=}^{CGPattern=}^f', 'v^{CGContext=}^{CGPattern=}^d'), '', {'arguments': {0: {'type': b'^{CGContext=}'}, 1: {'type': b'^{CGPattern=}'}, 2: {'type': sel32or64(b'^f', b'^d'), 'type_modifier': b'n', 'c_array_of_variable_length': True}}}), 'CGSizeMakeWithDictionaryRepresentation': (sel32or64('B^{__CFDictionary=}^{CGSize=ff}', 'B^{__CFDictionary=}^{CGSize=dd}'), '', {'arguments': {0: {'type': b'^{__CFDictionary=}'}, 1: {'type': sel32or64(b'^{CGSize=ff}', b'^{CGSize=dd}'), 'type_modifier': b'o'}}}), 'CGPDFDocumentUnlockWithPassword': ('B^{CGPDFDocument=}r*',), 'CGContextClip': ('v^{CGContext=}',), 'CGContextSetFillColorWithColor': ('v^{CGContext=}^{CGColor=}',), 'CGPDFDictionaryGetName': ('B^{CGPDFDictionary=}r*^*', '', {'arguments': {0: {'type': b'^{CGPDFDictionary=}'}, 1: {'type': b'r*'}, 2: {'type': b'^*', 'type_modifier': b'o'}}})}
cftypes = []
cftypes.append(('CGDirectDisplay', '^{CGDirectDisplay=}', 'CGDirectDisplayGetTypeID', None))
cftypes.append(('CGDisplayModeRef', '^{CGDisplayMode}', 'CGDisplayModeGetTypeID', None))
cftypes.append(('CGColorRef', '^{CGColor=}', 'CGColorGetTypeID', None))
cftypes.append(('CGColorSpaceRef', '^{CGColorSpace=}', 'CGColorSpaceGetTypeID', None))
cftypes.append(('CGContextRef', '^{CGContext=}', 'CGContextGetTypeID', None))
cftypes.append(('CGDataConsumerRef', '^{CGDataConsumer=}', 'CGDataConsumerGetTypeID', None))
cftypes.append(('CGDataProviderRef', '^{CGDataProvider=}', 'CGDataProviderGetTypeID', None))
cftypes.append(('CGEventRef', '^{__CGEvent=}', 'CGEventGetTypeID', None))
cftypes.append(('CGEventSourceRef', '^{__CGEventSource=}', 'CGEventSourceGetTypeID', None))
cftypes.append(('CGFontRef', '^{CGFont=}', 'CGFontGetTypeID', None))
cftypes.append(('CGFunctionRef', '^{CGFunction=}', 'CGFunctionGetTypeID', None))
cftypes.append(('CGGradientRef', '^{CGGradient=}', 'CGGradientGetTypeID', None))
cftypes.append(('CGImageRef', '^{CGImage=}', 'CGImageGetTypeID', None))
cftypes.append(('CGLayerRef', '^{CGLayer=}', 'CGLayerGetTypeID', None))
cftypes.append(('CGPDFDocumentRef', '^{CGPDFDocument=}', 'CGPDFDocumentGetTypeID', None))
cftypes.append(('CGPDFPageRef', '^{CGPDFPage=}', 'CGPDFPageGetTypeID', None))
cftypes.append(('CGPSConverterRef', '^{CGPSConverter=}', 'CGPSConverterGetTypeID', None))
cftypes.append(('CGPathRef', '^{CGPath=}', 'CGPathGetTypeID', None))
cftypes.append(('CGPatternRef', '^{CGPattern=}', 'CGPatternGetTypeID', None))
cftypes.append(('CGShadingRef', '^{CGShading=}', 'CGShadingGetTypeID', None))
r = objc.registerMetaDataForSelector
objc._updatingMetadata(True)
try:
    pass
finally:
    objc._updatingMetadata(False)
