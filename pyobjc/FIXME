FIXME_1: In pythonify_c_value() there is the conversion a returned
	 NSString to a PyStringObject. How can we deal with NSString
	 class cluster? Should it maybe check for -cString and -length?

* support -release and -autorelease invocations from within Python by setting the reference to the encapsulated ObJC object in the ObjCObject structure to nil (and passing through the release/autorelease).   This is not as trivial as it sounds;  a method invocation involves two mechanisms.  First, the getattr() function is called on ObjCObject to retrieve an ObjCMethod representing the method to be invoked.  The ObjCMethod structure contains a reference to the ObjC object in an NSInvocation, but does not contain a reference to the ObjCObject structure that would be required-- adding this appears to be a case of figuring out what is up with Python reference counting.

* add detection of Mac OS X vs. Mac OS X Server so that references to obsoleted APIs can be removed from the OSX build.

* fix multithreading support in the method dispatch mechanisms.  In particular, I believe [but didn't dig] that the argument decoding/encoding stuff is not thread safe in that it uses static variables?

* add support for proper sequence and dictionary based manipulation of ObjC objects via the standard python mechanisms

* rip off various "intra-language interface friendly" API and code from Mssh: MultiScript Shell -- see ftp://ftp.codefab.com/pub/unsupported/.   (Before anyone gets offended by "rip off", I wrote Mssh and I'm writing this comment and, as such, I'm "ripping off" my own code!.  <bbum@codefab.com>)

* fix BUGS