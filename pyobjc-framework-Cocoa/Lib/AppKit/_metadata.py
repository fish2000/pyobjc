# This file is generated by objective.metadata
#
# Last update: Mon May 14 10:55:03 2012

import objc, sys

if sys.maxint > 2 ** 32:
    def sel32or64(a, b): return b
else:
    def sel32or64(a, b): return a
if sys.byteorder == 'little':
    def littleOrBig(a, b): return a
else:
    def littleOrBig(a, b): return b

misc = {
}
misc.update({'_CFlags': objc.createStructType('_CFlags', sel32or64('{__CFlags=IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII}', '{__CFlags=IIIIQIIIIIIIIIIIQIIIIIIIIIIIIIIQIIIIIIIIIIIIIIIII}'), [u'state', u'highlighted', u'disabled', u'editable', u'type', u'vCentered', u'hCentered', u'bordered', u'bezeled', u'selectable', u'scrollable', u'continuous', u'actOnMouseDown', u'isLeaf', u'invalidObjectValue', u'invalidFont', u'lineBreakMode', u'cellReserved1', u'singleLineMode', u'actOnMouseDragged', u'isLoaded', u'truncateLastLine', u'dontActOnMouseUp', u'isWhite', u'useUserKeyEquivalent', u'showsFirstResponder', u'focusRingType', u'wasSelectable', u'hasInvalidObject', u'allowsEditingTextAttributes', u'importsGraphics', u'alignment', u'layoutDirectionRTL', u'backgroundStyle', u'cellReserved2', u'refusesFirstResponder', u'needsHighlightedText', u'dontAllowsUndo', u'currentlyEditing', u'allowsMixedState', u'inMixedState', u'sendsActionOnEndEditing', u'inSendAction', u'menuWasSet', u'controlTint', u'controlSize', u'branchImageDisabled', u'drawingInRevealover', u'needsHighlightedTextHint']), 'NSEdgeInsets': objc.createStructType('NSEdgeInsets', sel32or64('{_NSEdgeInsets=ffff}', '{_NSEdgeInsets=dddd}'), [u'top', u'left', u'bottom', u'right']), '_Brflags': objc.createStructType('_Brflags', '{__Brflags=IIIIIIIIIIIIIIIIIIIIIIIIIII}', [u'firstVisibleCalculationDisabled', u'prefersAllColumnUserResizing', u'usesSmallScrollers', u'usesSmallSizeTitleFont', u'actionNeedsToBeSent', u'acceptsFirstMouse', u'refusesFirstResponder', u'disableCompositing', u'delegateSelectsCellsByRow', u'allowsIncrementalSearching', u'time', u'hasHorizontalScroller', u'prohibitEmptySel', u'sendActionOnArrowKeys', u'dontDrawTitles', u'acceptArrowKeys', u'delegateValidatesColumns', u'delegateDoesNotCreateRowsInMatrix', u'delegateSelectsCellsByString', u'delegateSetsTitles', u'delegateImplementsWillDisplayCell', u'separateColumns', u'titleFromPrevious', u'isTitled', u'reuseColumns', u'allowsBranchSelection', u'allowsMultipleSelection']), 'NSScreenAuxiliaryOpaque': objc.createStructType('NSScreenAuxiliaryOpaque', '{NSScreenAuxiliary=}', []), '_MFlags': objc.createStructType('_MFlags', '{__MFlags=IIIIIIIIIIIIIIIIIIIIIIIIIIIII}', [u'reservedMatrix', u'drawingContextMenuHighlightOnAllSelectedRows', u'drawingContextMenuHighlight', u'browserOptimizationsEnabled', u'needsRedrawBeforeFirstLiveResizeCache', u'tmpAllowNonVisibleCellsToBecomeFirstResponder', u'subclassIsSafeForLiveResize', u'hasCachedSubclassIsSafeForLiveResize', u'liveResizeImageCacheingEnabled', u'checkForSimpleTrackingMode', u'useSimpleTrackingMode', u'refusesFirstResponder', u'dontScroll', u'changingSelectionWithKeyboard', u'onlySetKeyCell', u'currentlySelectingCell', u'allowsIncrementalSearching', u'tabKeyTraversesCellsExplicitlySet', u'tabKeyTraversesCells', u'drawingAncestor', u'autosizeCells', u'drawsBackground', u'drawsCellBackground', u'selectionByRect', u'autoscroll', u'allowEmptySel', u'listMode', u'radioMode', u'highlightMode']), '_MVFlags': objc.createStructType('_MVFlags', '{__MVFlags=IIIIII}', [u'editable', u'loopMode', u'playsEveryFrame', u'playsSelectionOnly', u'controllerVisible', u'reserved']), '_NSProgressIndicatorThreadInfo': objc.createStructType('_NSProgressIndicatorThreadInfo', '{__NSProgressIndicatorThreadInfo=}', []), '_BCFlags2': objc.createStructType('_BCFlags2', '{__BCFlags2=IIIIII}', [u'bezelStyle', u'showsBorderOnlyWhileMouseInside', u'mouseInside', u'bezelStyle2', u'imageScaling', u'keyEquivalentModifierMask']), '_TvFlags': objc.createStructType('_TvFlags', '{__TvFlags=IIIIIIIIIIIIIIIIIII}', [u'refusesFirstResponder', u'movedPostingDisableCount', u'selectionPostingDisableCount', u'dataSourceSetObjectValue', u'oldAutoresizesAllColumnsToFit', u'delegateSelectionShouldChangeInTableView', u'delegateShouldSelectTableColumn', u'delegateShouldSelectRow', u'delegateShouldEditTableColumn', u'delegateWillDisplayCell', u'compareWidthWithSuperview', u'changingLayout', u'selectionType', u'allowsColumnSelection', u'allowsMultipleSelection', u'allowsEmptySelection', u'oldDrawsGridFlag', u'allowsColumnResizing', u'allowsColumnReordering']), 'NSOpenGLPixelFormatAuxiliary': objc.createStructType('NSOpenGLPixelFormatAuxiliary', '{_CGLPixelFormatObject=}', []), 'NSOpenGLContextAuxiliary': objc.createStructType('NSOpenGLContextAuxiliary', '{_CGLContextObject=}', []), 'NSTypesetterGlyphInfo': objc.createStructType('NSTypesetterGlyphInfo', '{_NSTypesetterGlyphInfo={_NSPoint=ff}fffI@{_NSSize=ff}{=III}}', [u'curLocation', u'extent', u'belowBaseline', u'aboveBaseline', u'glyphCharacterIndex', u'font', u'attachmentSize', u'_giflags']), '_NSThreadPrivate': objc.createStructType('_NSThreadPrivate', '{NSThreadPrivate=}', []), '_VFlags': objc.createStructType('_VFlags', '{__VFlags=IIIIIIIIIIIIIIIIIIIIII}', [u'aboutToResize', u'retainCountOverMax', u'retainCount', u'interfaceStyle1', u'specialArchiving', u'needsDisplayForBounds', u'interfaceStyle0', u'removingWithoutInvalidation', u'needsBoundsChangeNote', u'boundsChangeNotesSuspended', u'focusChangeNotesSuspended', u'needsFrameChangeNote', u'frameChangeNotesSuspended', u'noVerticalAutosizing', u'newGState', u'validGState', u'needsDisplay', u'wantsGState', u'autoresizeSubviews', u'autosizing', u'rotatedOrScaledFromBase', u'rotatedFromBase'])})
constants = '''$NSAFMAscender$NSAFMCapHeight$NSAFMCharacterSet$NSAFMDescender$NSAFMEncodingScheme$NSAFMFamilyName$NSAFMFontName$NSAFMFormatVersion$NSAFMFullName$NSAFMItalicAngle$NSAFMMappingScheme$NSAFMNotice$NSAFMUnderlinePosition$NSAFMUnderlineThickness$NSAFMVersion$NSAFMWeight$NSAFMXHeight$NSAbortModalException$NSAbortPrintingException$NSAccessibilityAllowedValuesAttribute$NSAccessibilityApplicationActivatedNotification$NSAccessibilityApplicationDeactivatedNotification$NSAccessibilityApplicationHiddenNotification$NSAccessibilityApplicationRole$NSAccessibilityApplicationShownNotification$NSAccessibilityAscendingSortDirectionValue$NSAccessibilityAttachmentTextAttribute$NSAccessibilityAttributedStringForRangeParameterizedAttribute$NSAccessibilityAutocorrectedTextAttribute$NSAccessibilityBackgroundColorTextAttribute$NSAccessibilityBoundsForRangeParameterizedAttribute$NSAccessibilityBrowserRole$NSAccessibilityBusyIndicatorRole$NSAccessibilityButtonRole$NSAccessibilityCancelAction$NSAccessibilityCancelButtonAttribute$NSAccessibilityCellForColumnAndRowParameterizedAttribute$NSAccessibilityCellRole$NSAccessibilityCenterTabStopMarkerTypeValue$NSAccessibilityCentimetersUnitValue$NSAccessibilityCheckBoxRole$NSAccessibilityChildrenAttribute$NSAccessibilityClearButtonAttribute$NSAccessibilityCloseButtonAttribute$NSAccessibilityCloseButtonSubrole$NSAccessibilityColorWellRole$NSAccessibilityColumnCountAttribute$NSAccessibilityColumnHeaderUIElementsAttribute$NSAccessibilityColumnIndexRangeAttribute$NSAccessibilityColumnRole$NSAccessibilityColumnTitlesAttribute$NSAccessibilityColumnsAttribute$NSAccessibilityComboBoxRole$NSAccessibilityConfirmAction$NSAccessibilityContentListSubrole$NSAccessibilityContentsAttribute$NSAccessibilityCreatedNotification$NSAccessibilityCriticalValueAttribute$NSAccessibilityDecimalTabStopMarkerTypeValue$NSAccessibilityDecrementAction$NSAccessibilityDecrementArrowSubrole$NSAccessibilityDecrementButtonAttribute$NSAccessibilityDecrementPageSubrole$NSAccessibilityDefaultButtonAttribute$NSAccessibilityDefinitionListSubrole$NSAccessibilityDeleteAction$NSAccessibilityDescendingSortDirectionValue$NSAccessibilityDescriptionAttribute$NSAccessibilityDialogSubrole$NSAccessibilityDisclosedByRowAttribute$NSAccessibilityDisclosedRowsAttribute$NSAccessibilityDisclosingAttribute$NSAccessibilityDisclosureLevelAttribute$NSAccessibilityDisclosureTriangleRole$NSAccessibilityDocumentAttribute$NSAccessibilityDrawerCreatedNotification$NSAccessibilityDrawerRole$NSAccessibilityEditedAttribute$NSAccessibilityEnabledAttribute$NSAccessibilityErrorCodeExceptionInfo$NSAccessibilityException$NSAccessibilityExpandedAttribute$NSAccessibilityFilenameAttribute$NSAccessibilityFirstLineIndentMarkerTypeValue$NSAccessibilityFloatingWindowSubrole$NSAccessibilityFocusedAttribute$NSAccessibilityFocusedUIElementAttribute$NSAccessibilityFocusedUIElementChangedNotification$NSAccessibilityFocusedWindowAttribute$NSAccessibilityFocusedWindowChangedNotification$NSAccessibilityFontFamilyKey$NSAccessibilityFontNameKey$NSAccessibilityFontSizeKey$NSAccessibilityFontTextAttribute$NSAccessibilityForegroundColorTextAttribute$NSAccessibilityFrontmostAttribute$NSAccessibilityFullScreenButtonAttribute$NSAccessibilityFullScreenButtonSubrole$NSAccessibilityGridRole$NSAccessibilityGroupRole$NSAccessibilityGrowAreaAttribute$NSAccessibilityGrowAreaRole$NSAccessibilityHandleRole$NSAccessibilityHandlesAttribute$NSAccessibilityHeadIndentMarkerTypeValue$NSAccessibilityHeaderAttribute$NSAccessibilityHelpAttribute$NSAccessibilityHelpTagCreatedNotification$NSAccessibilityHelpTagRole$NSAccessibilityHiddenAttribute$NSAccessibilityHorizontalOrientationValue$NSAccessibilityHorizontalScrollBarAttribute$NSAccessibilityHorizontalUnitDescriptionAttribute$NSAccessibilityHorizontalUnitsAttribute$NSAccessibilityHorizontialUnitDescriptionAttribute$NSAccessibilityHorizontialUnitsAttribute$NSAccessibilityIdentifierAttribute$NSAccessibilityImageRole$NSAccessibilityInchesUnitValue$NSAccessibilityIncrementAction$NSAccessibilityIncrementArrowSubrole$NSAccessibilityIncrementButtonAttribute$NSAccessibilityIncrementPageSubrole$NSAccessibilityIncrementorRole$NSAccessibilityIndexAttribute$NSAccessibilityInsertionPointLineNumberAttribute$NSAccessibilityLabelUIElementsAttribute$NSAccessibilityLabelValueAttribute$NSAccessibilityLayoutAreaRole$NSAccessibilityLayoutItemRole$NSAccessibilityLayoutPointForScreenPointParameterizedAttribute$NSAccessibilityLayoutSizeForScreenSizeParameterizedAttribute$NSAccessibilityLeftTabStopMarkerTypeValue$NSAccessibilityLevelIndicatorRole$NSAccessibilityLineForIndexParameterizedAttribute$NSAccessibilityLinkRole$NSAccessibilityLinkTextAttribute$NSAccessibilityLinkedUIElementsAttribute$NSAccessibilityListRole$NSAccessibilityMainAttribute$NSAccessibilityMainWindowAttribute$NSAccessibilityMainWindowChangedNotification$NSAccessibilityMarkerGroupUIElementAttribute$NSAccessibilityMarkerTypeAttribute$NSAccessibilityMarkerTypeDescriptionAttribute$NSAccessibilityMarkerUIElementsAttribute$NSAccessibilityMarkerValuesAttribute$NSAccessibilityMatteContentUIElementAttribute$NSAccessibilityMatteHoleAttribute$NSAccessibilityMatteRole$NSAccessibilityMaxValueAttribute$NSAccessibilityMenuBarAttribute$NSAccessibilityMenuBarRole$NSAccessibilityMenuButtonRole$NSAccessibilityMenuItemRole$NSAccessibilityMenuRole$NSAccessibilityMinValueAttribute$NSAccessibilityMinimizeButtonAttribute$NSAccessibilityMinimizeButtonSubrole$NSAccessibilityMinimizedAttribute$NSAccessibilityMisspelledTextAttribute$NSAccessibilityModalAttribute$NSAccessibilityMovedNotification$NSAccessibilityNextContentsAttribute$NSAccessibilityNumberOfCharactersAttribute$NSAccessibilityOrderedByRowAttribute$NSAccessibilityOrientationAttribute$NSAccessibilityOutlineRole$NSAccessibilityOutlineRowSubrole$NSAccessibilityOverflowButtonAttribute$NSAccessibilityParentAttribute$NSAccessibilityPicasUnitValue$NSAccessibilityPickAction$NSAccessibilityPlaceholderValueAttribute$NSAccessibilityPointsUnitValue$NSAccessibilityPopUpButtonRole$NSAccessibilityPopoverRole$NSAccessibilityPositionAttribute$NSAccessibilityPressAction$NSAccessibilityPreviousContentsAttribute$NSAccessibilityProgressIndicatorRole$NSAccessibilityProxyAttribute$NSAccessibilityRTFForRangeParameterizedAttribute$NSAccessibilityRadioButtonRole$NSAccessibilityRadioGroupRole$NSAccessibilityRaiseAction$NSAccessibilityRangeForIndexParameterizedAttribute$NSAccessibilityRangeForLineParameterizedAttribute$NSAccessibilityRangeForPositionParameterizedAttribute$NSAccessibilityRatingIndicatorSubrole$NSAccessibilityRelevanceIndicatorRole$NSAccessibilityResizedNotification$NSAccessibilityRightTabStopMarkerTypeValue$NSAccessibilityRoleAttribute$NSAccessibilityRoleDescriptionAttribute$NSAccessibilityRowCollapsedNotification$NSAccessibilityRowCountAttribute$NSAccessibilityRowCountChangedNotification$NSAccessibilityRowExpandedNotification$NSAccessibilityRowHeaderUIElementsAttribute$NSAccessibilityRowIndexRangeAttribute$NSAccessibilityRowRole$NSAccessibilityRowsAttribute$NSAccessibilityRulerMarkerRole$NSAccessibilityRulerRole$NSAccessibilityScreenPointForLayoutPointParameterizedAttribute$NSAccessibilityScreenSizeForLayoutSizeParameterizedAttribute$NSAccessibilityScrollAreaRole$NSAccessibilityScrollBarRole$NSAccessibilitySearchButtonAttribute$NSAccessibilitySearchFieldSubrole$NSAccessibilitySearchMenuAttribute$NSAccessibilitySecureTextFieldSubrole$NSAccessibilitySelectedAttribute$NSAccessibilitySelectedCellsAttribute$NSAccessibilitySelectedCellsChangedNotification$NSAccessibilitySelectedChildrenAttribute$NSAccessibilitySelectedChildrenChangedNotification$NSAccessibilitySelectedChildrenMovedNotification$NSAccessibilitySelectedColumnsAttribute$NSAccessibilitySelectedColumnsChangedNotification$NSAccessibilitySelectedRowsAttribute$NSAccessibilitySelectedRowsChangedNotification$NSAccessibilitySelectedTextAttribute$NSAccessibilitySelectedTextChangedNotification$NSAccessibilitySelectedTextRangeAttribute$NSAccessibilitySelectedTextRangesAttribute$NSAccessibilityServesAsTitleForUIElementsAttribute$NSAccessibilityShadowTextAttribute$NSAccessibilitySharedCharacterRangeAttribute$NSAccessibilitySharedTextUIElementsAttribute$NSAccessibilitySheetCreatedNotification$NSAccessibilitySheetRole$NSAccessibilityShowMenuAction$NSAccessibilityShownMenuAttribute$NSAccessibilitySizeAttribute$NSAccessibilitySliderRole$NSAccessibilitySortButtonRole$NSAccessibilitySortButtonSubrole$NSAccessibilitySortDirectionAttribute$NSAccessibilitySplitGroupRole$NSAccessibilitySplitterRole$NSAccessibilitySplittersAttribute$NSAccessibilityStandardWindowSubrole$NSAccessibilityStaticTextRole$NSAccessibilityStrikethroughColorTextAttribute$NSAccessibilityStrikethroughTextAttribute$NSAccessibilityStringForRangeParameterizedAttribute$NSAccessibilityStyleRangeForIndexParameterizedAttribute$NSAccessibilitySubroleAttribute$NSAccessibilitySuperscriptTextAttribute$NSAccessibilitySystemDialogSubrole$NSAccessibilitySystemFloatingWindowSubrole$NSAccessibilitySystemWideRole$NSAccessibilityTabGroupRole$NSAccessibilityTableRole$NSAccessibilityTableRowSubrole$NSAccessibilityTabsAttribute$NSAccessibilityTailIndentMarkerTypeValue$NSAccessibilityTextAreaRole$NSAccessibilityTextAttachmentSubrole$NSAccessibilityTextFieldRole$NSAccessibilityTextLinkSubrole$NSAccessibilityTimelineSubrole$NSAccessibilityTitleAttribute$NSAccessibilityTitleChangedNotification$NSAccessibilityTitleUIElementAttribute$NSAccessibilityToolbarButtonAttribute$NSAccessibilityToolbarButtonSubrole$NSAccessibilityToolbarRole$NSAccessibilityTopLevelUIElementAttribute$NSAccessibilityUIElementDestroyedNotification$NSAccessibilityURLAttribute$NSAccessibilityUnderlineColorTextAttribute$NSAccessibilityUnderlineTextAttribute$NSAccessibilityUnitDescriptionAttribute$NSAccessibilityUnitsAttribute$NSAccessibilityUnitsChangedNotification$NSAccessibilityUnknownMarkerTypeValue$NSAccessibilityUnknownOrientationValue$NSAccessibilityUnknownRole$NSAccessibilityUnknownSortDirectionValue$NSAccessibilityUnknownSubrole$NSAccessibilityUnknownUnitValue$NSAccessibilityValueAttribute$NSAccessibilityValueChangedNotification$NSAccessibilityValueDescriptionAttribute$NSAccessibilityValueIndicatorRole$NSAccessibilityVerticalOrientationValue$NSAccessibilityVerticalScrollBarAttribute$NSAccessibilityVerticalUnitDescriptionAttribute$NSAccessibilityVerticalUnitsAttribute$NSAccessibilityVisibleCellsAttribute$NSAccessibilityVisibleCharacterRangeAttribute$NSAccessibilityVisibleChildrenAttribute$NSAccessibilityVisibleColumnsAttribute$NSAccessibilityVisibleNameKey$NSAccessibilityVisibleRowsAttribute$NSAccessibilityWarningValueAttribute$NSAccessibilityWindowAttribute$NSAccessibilityWindowCreatedNotification$NSAccessibilityWindowDeminiaturizedNotification$NSAccessibilityWindowMiniaturizedNotification$NSAccessibilityWindowMovedNotification$NSAccessibilityWindowResizedNotification$NSAccessibilityWindowRole$NSAccessibilityWindowsAttribute$NSAccessibilityZoomButtonAttribute$NSAccessibilityZoomButtonSubrole$NSAlignmentBinding$NSAllRomanInputSourcesLocaleIdentifier$NSAllowsEditingMultipleValuesSelectionBindingOption$NSAllowsNullArgumentBindingOption$NSAlternateImageBinding$NSAlternateTitleBinding$NSAlwaysPresentsApplicationModalAlertsBindingOption$NSAnimateBinding$NSAnimationDelayBinding$NSAnimationProgressMark$NSAnimationProgressMarkNotification$NSAnimationTriggerOrderIn$NSAnimationTriggerOrderOut$NSAntialiasThresholdChangedNotification$NSApp$NSAppKitIgnoredException$NSAppKitVersionNumber@d$NSAppKitVirtualMemoryException$NSApplicationDidBecomeActiveNotification$NSApplicationDidChangeScreenParametersNotification$NSApplicationDidFinishLaunchingNotification$NSApplicationDidFinishRestoringWindowsNotification$NSApplicationDidHideNotification$NSApplicationDidResignActiveNotification$NSApplicationDidUnhideNotification$NSApplicationDidUpdateNotification$NSApplicationFileType$NSApplicationLaunchIsDefaultLaunchKey$NSApplicationLaunchRemoteNotificationKey$NSApplicationWillBecomeActiveNotification$NSApplicationWillFinishLaunchingNotification$NSApplicationWillHideNotification$NSApplicationWillResignActiveNotification$NSApplicationWillTerminateNotification$NSApplicationWillUnhideNotification$NSApplicationWillUpdateNotification$NSArgumentBinding$NSAttachmentAttributeName$NSAttributedStringBinding$NSAuthorDocumentAttribute$NSBackgroundColorAttributeName$NSBackgroundColorDocumentAttribute$NSBadBitmapParametersException$NSBadComparisonException$NSBadRTFColorTableException$NSBadRTFDirectiveException$NSBadRTFFontTableException$NSBadRTFStyleSheetException$NSBaseURLDocumentOption$NSBaselineOffsetAttributeName$NSBottomMarginDocumentAttribute$NSBrowserColumnConfigurationDidChangeNotification$NSBrowserIllegalDelegateException$NSCalibratedBlackColorSpace$NSCalibratedRGBColorSpace$NSCalibratedWhiteColorSpace$NSCategoryDocumentAttribute$NSCharacterEncodingDocumentAttribute$NSCharacterEncodingDocumentOption$NSCharacterShapeAttributeName$NSCocoaVersionDocumentAttribute$NSColorListDidChangeNotification$NSColorListIOException$NSColorListNotEditableException$NSColorPanelColorDidChangeNotification$NSColorPboardType$NSComboBoxSelectionDidChangeNotification$NSComboBoxSelectionIsChangingNotification$NSComboBoxWillDismissNotification$NSComboBoxWillPopUpNotification$NSCommentDocumentAttribute$NSCompanyDocumentAttribute$NSConditionallySetsEditableBindingOption$NSConditionallySetsEnabledBindingOption$NSConditionallySetsHiddenBindingOption$NSContentArrayBinding$NSContentArrayForMultipleSelectionBinding$NSContentBinding$NSContentDictionaryBinding$NSContentHeightBinding$NSContentObjectBinding$NSContentObjectsBinding$NSContentPlacementTagBindingOption$NSContentSetBinding$NSContentValuesBinding$NSContentWidthBinding$NSContextHelpModeDidActivateNotification$NSContextHelpModeDidDeactivateNotification$NSContinuouslyUpdatesValueBindingOption$NSControlTextDidBeginEditingNotification$NSControlTextDidChangeNotification$NSControlTextDidEndEditingNotification$NSControlTintDidChangeNotification$NSConvertedDocumentAttribute$NSCopyrightDocumentAttribute$NSCreatesSortDescriptorBindingOption$NSCreationTimeDocumentAttribute$NSCriticalValueBinding$NSCursorAttributeName$NSCustomColorSpace$NSDataBinding$NSDefaultAttributesDocumentOption$NSDefaultTabIntervalDocumentAttribute$NSDefinitionPresentationTypeDictionaryApplication$NSDefinitionPresentationTypeKey$NSDefinitionPresentationTypeOverlay$NSDeletesObjectsOnRemoveBindingsOption$NSDeviceBitsPerSample$NSDeviceBlackColorSpace$NSDeviceCMYKColorSpace$NSDeviceColorSpaceName$NSDeviceIsPrinter$NSDeviceIsScreen$NSDeviceRGBColorSpace$NSDeviceResolution$NSDeviceSize$NSDeviceWhiteColorSpace$NSDirectoryFileType$NSDisplayNameBindingOption$NSDisplayPatternBindingOption$NSDisplayPatternTitleBinding$NSDisplayPatternValueBinding$NSDocFormatTextDocumentType$NSDocumentEditedBinding$NSDocumentTypeDocumentAttribute$NSDocumentTypeDocumentOption$NSDoubleClickArgumentBinding$NSDoubleClickTargetBinding$NSDragPboard$NSDraggingException$NSDraggingImageComponentIconKey$NSDraggingImageComponentLabelKey$NSDrawerDidCloseNotification$NSDrawerDidOpenNotification$NSDrawerWillCloseNotification$NSDrawerWillOpenNotification$NSEditableBinding$NSEditorDocumentAttribute$NSEnabledBinding$NSEventTrackingRunLoopMode$NSExcludedElementsDocumentAttribute$NSExcludedKeysBinding$NSExpansionAttributeName$NSFileContentsPboardType$NSFileTypeDocumentAttribute$NSFileTypeDocumentOption$NSFilenamesPboardType$NSFilesPromisePboardType$NSFilesystemFileType$NSFilterPredicateBinding$NSFindPanelCaseInsensitiveSearch$NSFindPanelSearchOptionsPboardType$NSFindPanelSubstringMatch$NSFindPboard$NSFontAttributeName$NSFontBinding$NSFontBoldBinding$NSFontCascadeListAttribute$NSFontCharacterSetAttribute$NSFontCollectionActionKey$NSFontCollectionAllFonts$NSFontCollectionDidChangeNotification$NSFontCollectionDisallowAutoActivationOption$NSFontCollectionFavorites$NSFontCollectionIncludeDisabledFontsOption$NSFontCollectionNameKey$NSFontCollectionOldNameKey$NSFontCollectionRecentlyUsed$NSFontCollectionRemoveDuplicatesOption$NSFontCollectionUser$NSFontCollectionVisibilityKey$NSFontCollectionWasHidden$NSFontCollectionWasRenamed$NSFontCollectionWasShown$NSFontColorAttribute$NSFontFaceAttribute$NSFontFamilyAttribute$NSFontFamilyNameBinding$NSFontFeatureSelectorIdentifierKey$NSFontFeatureSettingsAttribute$NSFontFeatureTypeIdentifierKey$NSFontFixedAdvanceAttribute$NSFontItalicBinding$NSFontMatrixAttribute$NSFontNameAttribute$NSFontNameBinding$NSFontPboard$NSFontPboardType$NSFontSetChangedNotification$NSFontSizeAttribute$NSFontSizeBinding$NSFontSlantTrait$NSFontSymbolicTrait$NSFontTraitsAttribute$NSFontUnavailableException$NSFontVariationAttribute$NSFontVariationAxisDefaultValueKey$NSFontVariationAxisIdentifierKey$NSFontVariationAxisMaximumValueKey$NSFontVariationAxisMinimumValueKey$NSFontVariationAxisNameKey$NSFontVisibleNameAttribute$NSFontWeightTrait$NSFontWidthTrait$NSForegroundColorAttributeName$NSFullScreenModeAllScreens$NSFullScreenModeApplicationPresentationOptions$NSFullScreenModeSetting$NSFullScreenModeWindowLevel$NSGeneralPboard$NSGlyphInfoAttributeName$NSGraphicsContextDestinationAttributeName$NSGraphicsContextPDFFormat$NSGraphicsContextPSFormat$NSGraphicsContextRepresentationFormatAttributeName$NSHTMLPboardType$NSHTMLTextDocumentType$NSHandlesContentAsCompoundValueBindingOption$NSHeaderTitleBinding$NSHiddenBinding$NSHyphenationFactorDocumentAttribute$NSIllegalSelectorException$NSImageBinding$NSImageCacheException$NSImageColorSyncProfileData$NSImageCompressionFactor$NSImageCompressionMethod$NSImageCurrentFrame$NSImageCurrentFrameDuration$NSImageDitherTransparency$NSImageEXIFData$NSImageFallbackBackgroundColor$NSImageFrameCount$NSImageGamma$NSImageHintCTM$NSImageHintInterpolation$NSImageInterlaced$NSImageLoopCount$NSImageNameActionTemplate$NSImageNameAddTemplate$NSImageNameAdvanced$NSImageNameApplicationIcon$NSImageNameBluetoothTemplate$NSImageNameBonjour$NSImageNameBookmarksTemplate$NSImageNameCaution$NSImageNameColorPanel$NSImageNameColumnViewTemplate$NSImageNameComputer$NSImageNameDotMac$NSImageNameEnterFullScreenTemplate$NSImageNameEveryone$NSImageNameExitFullScreenTemplate$NSImageNameFlowViewTemplate$NSImageNameFolder$NSImageNameFolderBurnable$NSImageNameFolderSmart$NSImageNameFollowLinkFreestandingTemplate$NSImageNameFontPanel$NSImageNameGoLeftTemplate$NSImageNameGoRightTemplate$NSImageNameHomeTemplate$NSImageNameIChatTheaterTemplate$NSImageNameIconViewTemplate$NSImageNameInfo$NSImageNameInvalidDataFreestandingTemplate$NSImageNameLeftFacingTriangleTemplate$NSImageNameListViewTemplate$NSImageNameLockLockedTemplate$NSImageNameLockUnlockedTemplate$NSImageNameMenuMixedStateTemplate$NSImageNameMenuOnStateTemplate$NSImageNameMobileMe$NSImageNameMultipleDocuments$NSImageNameNetwork$NSImageNamePathTemplate$NSImageNamePreferencesGeneral$NSImageNameQuickLookTemplate$NSImageNameRefreshFreestandingTemplate$NSImageNameRefreshTemplate$NSImageNameRemoveTemplate$NSImageNameRevealFreestandingTemplate$NSImageNameRightFacingTriangleTemplate$NSImageNameSlideshowTemplate$NSImageNameSmartBadgeTemplate$NSImageNameStatusAvailable$NSImageNameStatusNone$NSImageNameStatusPartiallyAvailable$NSImageNameStatusUnavailable$NSImageNameStopProgressFreestandingTemplate$NSImageNameStopProgressTemplate$NSImageNameTrashEmpty$NSImageNameTrashFull$NSImageNameUser$NSImageNameUserAccounts$NSImageNameUserGroup$NSImageNameUserGuest$NSImageProgressive$NSImageRGBColorTable$NSImageRepRegistryDidChangeNotification$NSIncludedKeysBinding$NSInitialKeyBinding$NSInitialValueBinding$NSInkTextPboardType$NSInsertsNullPlaceholderBindingOption$NSInterfaceStyleDefault$NSInvokesSeparatelyWithArrayObjectsBindingOption$NSIsIndeterminateBinding$NSKernAttributeName$NSKeywordsDocumentAttribute$NSLabelBinding$NSLeftMarginDocumentAttribute$NSLigatureAttributeName$NSLinkAttributeName$NSLocalizedKeyDictionaryBinding$NSMacSimpleTextDocumentType$NSManagedObjectContextBinding$NSManagerDocumentAttribute$NSMarkedClauseSegmentAttributeName$NSMaxValueBinding$NSMaxWidthBinding$NSMaximumRecentsBinding$NSMenuDidAddItemNotification$NSMenuDidBeginTrackingNotification$NSMenuDidChangeItemNotification$NSMenuDidEndTrackingNotification$NSMenuDidRemoveItemNotification$NSMenuDidSendActionNotification$NSMenuWillSendActionNotification$NSMinValueBinding$NSMinWidthBinding$NSMixedStateImageBinding$NSModalPanelRunLoopMode$NSModificationTimeDocumentAttribute$NSMultipleTextSelectionPboardType$NSMultipleValuesMarker$NSMultipleValuesPlaceholderBindingOption$NSNamedColorSpace$NSNibLoadingException$NSNibOwner$NSNibTopLevelObjects$NSNoSelectionMarker$NSNoSelectionPlaceholderBindingOption$NSNotApplicableMarker$NSNotApplicablePlaceholderBindingOption$NSNullPlaceholderBindingOption$NSObliquenessAttributeName$NSObservedKeyPathKey$NSObservedObjectKey$NSOffStateImageBinding$NSOfficeOpenXMLTextDocumentType$NSOnStateImageBinding$NSOpenDocumentTextDocumentType$NSOptionsKey$NSOutlineViewColumnDidMoveNotification$NSOutlineViewColumnDidResizeNotification$NSOutlineViewItemDidCollapseNotification$NSOutlineViewItemDidExpandNotification$NSOutlineViewItemWillCollapseNotification$NSOutlineViewItemWillExpandNotification$NSOutlineViewSelectionDidChangeNotification$NSOutlineViewSelectionIsChangingNotification$NSPDFPboardType$NSPICTPboardType$NSPPDIncludeNotFoundException$NSPPDIncludeStackOverflowException$NSPPDIncludeStackUnderflowException$NSPPDParseException$NSPaperSizeDocumentAttribute$NSParagraphStyleAttributeName$NSPasteboardCommunicationException$NSPasteboardTypeColor$NSPasteboardTypeFindPanelSearchOptions$NSPasteboardTypeFont$NSPasteboardTypeHTML$NSPasteboardTypeMultipleTextSelection$NSPasteboardTypePDF$NSPasteboardTypePNG$NSPasteboardTypeRTF$NSPasteboardTypeRTFD$NSPasteboardTypeRuler$NSPasteboardTypeSound$NSPasteboardTypeString$NSPasteboardTypeTIFF$NSPasteboardTypeTabularText$NSPasteboardTypeTextFinderOptions$NSPasteboardURLReadingContentsConformToTypesKey$NSPasteboardURLReadingFileURLsOnlyKey$NSPatternColorSpace$NSPlainFileType$NSPlainTextDocumentType$NSPopUpButtonCellWillPopUpNotification$NSPopUpButtonWillPopUpNotification$NSPopoverCloseReasonDetachToWindow$NSPopoverCloseReasonKey$NSPopoverCloseReasonStandard$NSPopoverDidCloseNotification$NSPopoverDidShowNotification$NSPopoverWillCloseNotification$NSPopoverWillShowNotification$NSPositioningRectBinding$NSPostScriptPboardType$NSPredicateBinding$NSPredicateFormatBindingOption$NSPreferredScrollerStyleDidChangeNotification$NSPrefixSpacesDocumentAttribute$NSPrintAllPages$NSPrintAllPresetsJobStyleHint$NSPrintBottomMargin$NSPrintCancelJob$NSPrintCopies$NSPrintDetailedErrorReporting$NSPrintFaxCoverSheetName$NSPrintFaxHighResolution$NSPrintFaxJob$NSPrintFaxModem$NSPrintFaxNumber$NSPrintFaxReceiverNames$NSPrintFaxReceiverNumbers$NSPrintFaxReturnReceipt$NSPrintFaxSendTime$NSPrintFaxTrimPageEnds$NSPrintFaxUseCoverSheet$NSPrintFirstPage$NSPrintFormName$NSPrintHeaderAndFooter$NSPrintHorizontalPagination$NSPrintHorizontallyCentered$NSPrintJobDisposition$NSPrintJobFeatures$NSPrintJobSavingFileNameExtensionHidden$NSPrintJobSavingURL$NSPrintLastPage$NSPrintLeftMargin$NSPrintManualFeed$NSPrintMustCollate$NSPrintNoPresetsJobStyleHint$NSPrintOperationExistsException$NSPrintOrientation$NSPrintPackageException$NSPrintPagesAcross$NSPrintPagesDown$NSPrintPagesPerSheet$NSPrintPanelAccessorySummaryItemDescriptionKey$NSPrintPanelAccessorySummaryItemNameKey$NSPrintPaperFeed$NSPrintPaperName$NSPrintPaperSize$NSPrintPhotoJobStyleHint$NSPrintPreviewJob$NSPrintPrinter$NSPrintPrinterName$NSPrintReversePageOrder$NSPrintRightMargin$NSPrintSaveJob$NSPrintSavePath$NSPrintScalingFactor$NSPrintSelectionOnly$NSPrintSpoolJob$NSPrintTime$NSPrintTopMargin$NSPrintVerticalPagination$NSPrintVerticallyCentered$NSPrintingCommunicationException$NSRTFDPboardType$NSRTFDTextDocumentType$NSRTFPboardType$NSRTFPropertyStackOverflowException$NSRTFTextDocumentType$NSRaisesForNotApplicableKeysBindingOption$NSReadOnlyDocumentAttribute$NSRecentSearchesBinding$NSRepresentedFilenameBinding$NSRightMarginDocumentAttribute$NSRowHeightBinding$NSRuleEditorPredicateComparisonModifier$NSRuleEditorPredicateCompoundType$NSRuleEditorPredicateCustomSelector$NSRuleEditorPredicateLeftExpression$NSRuleEditorPredicateOperatorType$NSRuleEditorPredicateOptions$NSRuleEditorPredicateRightExpression$NSRuleEditorRowsDidChangeNotification$NSRulerPboard$NSRulerPboardType$NSScreenColorSpaceDidChangeNotification$NSSelectedIdentifierBinding$NSSelectedIndexBinding$NSSelectedLabelBinding$NSSelectedObjectBinding$NSSelectedObjectsBinding$NSSelectedTagBinding$NSSelectedValueBinding$NSSelectedValuesBinding$NSSelectionIndexPathsBinding$NSSelectionIndexesBinding$NSSelectorNameBindingOption$NSSelectsAllWhenSettingContentBindingOption$NSShadowAttributeName$NSShellCommandFileType$NSSortDescriptorsBinding$NSSoundPboardType$NSSpeechCharacterModeProperty$NSSpeechCommandDelimiterProperty$NSSpeechCommandPrefix$NSSpeechCommandSuffix$NSSpeechCurrentVoiceProperty$NSSpeechDictionaryAbbreviations$NSSpeechDictionaryEntryPhonemes$NSSpeechDictionaryEntrySpelling$NSSpeechDictionaryLocaleIdentifier$NSSpeechDictionaryModificationDate$NSSpeechDictionaryPronunciations$NSSpeechErrorCount$NSSpeechErrorNewestCharacterOffset$NSSpeechErrorNewestCode$NSSpeechErrorOldestCharacterOffset$NSSpeechErrorOldestCode$NSSpeechErrorsProperty$NSSpeechInputModeProperty$NSSpeechModeLiteral$NSSpeechModeNormal$NSSpeechModePhoneme$NSSpeechModeText$NSSpeechNumberModeProperty$NSSpeechOutputToFileURLProperty$NSSpeechPhonemeInfoExample$NSSpeechPhonemeInfoHiliteEnd$NSSpeechPhonemeInfoHiliteStart$NSSpeechPhonemeInfoOpcode$NSSpeechPhonemeInfoSymbol$NSSpeechPhonemeSymbolsProperty$NSSpeechPitchBaseProperty$NSSpeechPitchModProperty$NSSpeechRateProperty$NSSpeechRecentSyncProperty$NSSpeechResetProperty$NSSpeechStatusNumberOfCharactersLeft$NSSpeechStatusOutputBusy$NSSpeechStatusOutputPaused$NSSpeechStatusPhonemeCode$NSSpeechStatusProperty$NSSpeechSynthesizerInfoIdentifier$NSSpeechSynthesizerInfoProperty$NSSpeechSynthesizerInfoVersion$NSSpeechVolumeProperty$NSSpellCheckerDidChangeAutomaticSpellingCorrectionNotification$NSSpellCheckerDidChangeAutomaticTextReplacementNotification$NSSpellingStateAttributeName$NSSplitViewDidResizeSubviewsNotification$NSSplitViewWillResizeSubviewsNotification$NSStrikethroughColorAttributeName$NSStrikethroughStyleAttributeName$NSStringPboardType$NSStrokeColorAttributeName$NSStrokeWidthAttributeName$NSSubjectDocumentAttribute$NSSuperscriptAttributeName$NSSystemColorsDidChangeNotification$NSTIFFException$NSTIFFPboardType$NSTabColumnTerminatorsAttributeName$NSTableViewColumnDidMoveNotification$NSTableViewColumnDidResizeNotification$NSTableViewRowViewKey$NSTableViewSelectionDidChangeNotification$NSTableViewSelectionIsChangingNotification$NSTabularTextPboardType$NSTargetBinding$NSTextCheckingDocumentAuthorKey$NSTextCheckingDocumentTitleKey$NSTextCheckingDocumentURLKey$NSTextCheckingOrthographyKey$NSTextCheckingQuotesKey$NSTextCheckingReferenceDateKey$NSTextCheckingReferenceTimeZoneKey$NSTextCheckingRegularExpressionsKey$NSTextCheckingReplacementsKey$NSTextColorBinding$NSTextDidBeginEditingNotification$NSTextDidChangeNotification$NSTextDidEndEditingNotification$NSTextEncodingNameDocumentAttribute$NSTextEncodingNameDocumentOption$NSTextFinderCaseInsensitiveKey$NSTextFinderMatchingTypeKey$NSTextInputContextKeyboardSelectionDidChangeNotification$NSTextLayoutSectionOrientation$NSTextLayoutSectionRange$NSTextLayoutSectionsAttribute$NSTextLineTooLongException$NSTextNoSelectionException$NSTextReadException$NSTextSizeMultiplierDocumentOption$NSTextStorageDidProcessEditingNotification$NSTextStorageWillProcessEditingNotification$NSTextViewDidChangeSelectionNotification$NSTextViewDidChangeTypingAttributesNotification$NSTextViewWillChangeNotifyingTextViewNotification$NSTextWriteException$NSTimeoutDocumentOption$NSTitleBinding$NSTitleDocumentAttribute$NSToolTipAttributeName$NSToolTipBinding$NSToolbarCustomizeToolbarItemIdentifier$NSToolbarDidRemoveItemNotification$NSToolbarFlexibleSpaceItemIdentifier$NSToolbarPrintItemIdentifier$NSToolbarSeparatorItemIdentifier$NSToolbarShowColorsItemIdentifier$NSToolbarShowFontsItemIdentifier$NSToolbarSpaceItemIdentifier$NSToolbarWillAddItemNotification$NSTopMarginDocumentAttribute$NSTransparentBinding$NSTypedStreamVersionException$NSURLPboardType$NSUnderlineColorAttributeName$NSUnderlineStyleAttributeName$NSVCardPboardType$NSValidatesImmediatelyBindingOption$NSValueBinding$NSValuePathBinding$NSValueTransformerBindingOption$NSValueTransformerNameBindingOption$NSValueURLBinding$NSVerticalGlyphFormAttributeName$NSViewAnimationEffectKey$NSViewAnimationEndFrameKey$NSViewAnimationFadeInEffect$NSViewAnimationFadeOutEffect$NSViewAnimationStartFrameKey$NSViewAnimationTargetKey$NSViewBoundsDidChangeNotification$NSViewDidUpdateTrackingAreasNotification$NSViewFocusDidChangeNotification$NSViewFrameDidChangeNotification$NSViewGlobalFrameDidChangeNotification$NSViewModeDocumentAttribute$NSViewSizeDocumentAttribute$NSViewZoomDocumentAttribute$NSVisibleBinding$NSVoiceAge$NSVoiceDemoText$NSVoiceGender$NSVoiceGenderFemale$NSVoiceGenderMale$NSVoiceGenderNeuter$NSVoiceIdentifier$NSVoiceIndividuallySpokenCharacters$NSVoiceLanguage$NSVoiceLocaleIdentifier$NSVoiceName$NSVoiceSupportedCharacters$NSWarningValueBinding$NSWebArchiveTextDocumentType$NSWebPreferencesDocumentOption$NSWebResourceLoadDelegateDocumentOption$NSWidthBinding$NSWindowDidBecomeKeyNotification$NSWindowDidBecomeMainNotification$NSWindowDidChangeScreenNotification$NSWindowDidChangeScreenProfileNotification$NSWindowDidDeminiaturizeNotification$NSWindowDidEndLiveResizeNotification$NSWindowDidEndSheetNotification$NSWindowDidEnterFullScreenNotification$NSWindowDidEnterVersionBrowserNotification$NSWindowDidExitFullScreenNotification$NSWindowDidExitVersionBrowserNotification$NSWindowDidExposeNotification$NSWindowDidMiniaturizeNotification$NSWindowDidMoveNotification$NSWindowDidResignKeyNotification$NSWindowDidResignMainNotification$NSWindowDidResizeNotification$NSWindowDidUpdateNotification$NSWindowServerCommunicationException$NSWindowWillBeginSheetNotification$NSWindowWillCloseNotification$NSWindowWillEnterFullScreenNotification$NSWindowWillEnterVersionBrowserNotification$NSWindowWillExitFullScreenNotification$NSWindowWillExitVersionBrowserNotification$NSWindowWillMiniaturizeNotification$NSWindowWillMoveNotification$NSWindowWillStartLiveResizeNotification$NSWordMLTextDocumentType$NSWordTablesReadException$NSWordTablesWriteException$NSWorkspaceActiveSpaceDidChangeNotification$NSWorkspaceApplicationKey$NSWorkspaceCompressOperation$NSWorkspaceCopyOperation$NSWorkspaceDecompressOperation$NSWorkspaceDecryptOperation$NSWorkspaceDesktopImageAllowClippingKey$NSWorkspaceDesktopImageFillColorKey$NSWorkspaceDesktopImageScalingKey$NSWorkspaceDestroyOperation$NSWorkspaceDidActivateApplicationNotification$NSWorkspaceDidChangeFileLabelsNotification$NSWorkspaceDidDeactivateApplicationNotification$NSWorkspaceDidHideApplicationNotification$NSWorkspaceDidLaunchApplicationNotification$NSWorkspaceDidMountNotification$NSWorkspaceDidPerformFileOperationNotification$NSWorkspaceDidRenameVolumeNotification$NSWorkspaceDidTerminateApplicationNotification$NSWorkspaceDidUnhideApplicationNotification$NSWorkspaceDidUnmountNotification$NSWorkspaceDidWakeNotification$NSWorkspaceDuplicateOperation$NSWorkspaceEncryptOperation$NSWorkspaceLaunchConfigurationAppleEvent$NSWorkspaceLaunchConfigurationArchitecture$NSWorkspaceLaunchConfigurationArguments$NSWorkspaceLaunchConfigurationEnvironment$NSWorkspaceLinkOperation$NSWorkspaceMoveOperation$NSWorkspaceRecycleOperation$NSWorkspaceScreensDidSleepNotification$NSWorkspaceScreensDidWakeNotification$NSWorkspaceSessionDidBecomeActiveNotification$NSWorkspaceSessionDidResignActiveNotification$NSWorkspaceVolumeLocalizedNameKey$NSWorkspaceVolumeOldLocalizedNameKey$NSWorkspaceVolumeOldURLKey$NSWorkspaceVolumeURLKey$NSWorkspaceWillLaunchApplicationNotification$NSWorkspaceWillPowerOffNotification$NSWorkspaceWillSleepNotification$NSWorkspaceWillUnmountNotification$NSWritingDirectionAttributeName$'''
constants = constants + '$NSBlack@%s$'%(sel32or64('f', 'd'),)
constants = constants + '$NSViewNoInstrinsicMetric@%s$'%(sel32or64('f', 'd'),)
constants = constants + '$NSDarkGray@%s$'%(sel32or64('f', 'd'),)
constants = constants + '$NSWhite@%s$'%(sel32or64('f', 'd'),)
constants = constants + '$NSFontIdentityMatrix@%s$'%(sel32or64('^f', '^d'),)
constants = constants + '$NSLightGray@%s$'%(sel32or64('f', 'd'),)
constants = constants + '$NSUnderlineStrikethroughMask@%s$'%(sel32or64('I', 'Q'),)
constants = constants + '$NSUnderlineByWordMask@%s$'%(sel32or64('I', 'Q'),)
enums = '''$NSAWTEventType@16$NSAboveBottom@4$NSAboveTop@1$NSAddTraitFontAction@2$NSAdobeCNS1CharacterCollection@1$NSAdobeGB1CharacterCollection@2$NSAdobeJapan1CharacterCollection@3$NSAdobeJapan2CharacterCollection@4$NSAdobeKorea1CharacterCollection@5$NSAlertAlternateReturn@0$NSAlertDefaultReturn@1$NSAlertErrorReturn@-2$NSAlertFirstButtonReturn@1000$NSAlertOtherReturn@-1$NSAlertSecondButtonReturn@1001$NSAlertThirdButtonReturn@1002$NSAllScrollerParts@2$NSAlphaFirstBitmapFormat@1$NSAlphaNonpremultipliedBitmapFormat@2$NSAlphaShiftKeyMask@65536$NSAlternateKeyMask@524288$NSAnimationBlocking@0$NSAnimationEaseIn@1$NSAnimationEaseInOut@0$NSAnimationEaseOut@2$NSAnimationEffectDisappearingItemDefault@0$NSAnimationEffectPoof@10$NSAnimationLinear@3$NSAnimationNonblocking@1$NSAnimationNonblockingThreaded@2$NSAnyType@0$NSAppKitDefined@13$NSAppKitDefinedMask@8192$NSAppKitVersionNumber10_0@577$NSAppKitVersionNumber10_1@620$NSAppKitVersionNumber10_2@663$NSAppKitVersionNumber10_3@743$NSAppKitVersionNumber10_4@824$NSAppKitVersionNumber10_5@949$NSAppKitVersionNumber10_6@1038$NSApplicationActivateAllWindows@1$NSApplicationActivateIgnoringOtherApps@2$NSApplicationActivatedEventType@1$NSApplicationActivationPolicyAccessory@1$NSApplicationActivationPolicyProhibited@2$NSApplicationActivationPolicyRegular@0$NSApplicationDeactivatedEventType@2$NSApplicationDefined@15$NSApplicationDefinedMask@32768$NSApplicationDelegateReplyCancel@1$NSApplicationDelegateReplyFailure@2$NSApplicationDelegateReplySuccess@0$NSApplicationPresentationAutoHideDock@1$NSApplicationPresentationAutoHideMenuBar@4$NSApplicationPresentationAutoHideToolbar@2048$NSApplicationPresentationDefault@0$NSApplicationPresentationDisableAppleMenu@16$NSApplicationPresentationDisableForceQuit@64$NSApplicationPresentationDisableHideApplication@256$NSApplicationPresentationDisableMenuBarTransparency@512$NSApplicationPresentationDisableProcessSwitching@32$NSApplicationPresentationDisableSessionTermination@128$NSApplicationPresentationFullScreen@1024$NSApplicationPresentationHideDock@2$NSApplicationPresentationHideMenuBar@8$NSAscendingPageOrder@1$NSAsciiWithDoubleByteEUCGlyphPacking@2$NSAtBottom@5$NSAtTop@2$NSAutoPagination@0$NSAutosaveElsewhereOperation@3$NSAutosaveInPlaceOperation@4$NSAutosaveOperation@3$NSBMPFileType@1$NSBackTabCharacter@25$NSBackgroundStyleDark@1$NSBackgroundStyleLight@0$NSBackgroundStyleLowered@3$NSBackgroundStyleRaised@2$NSBackgroundTab@1$NSBackingStoreBuffered@2$NSBackingStoreNonretained@1$NSBackingStoreRetained@0$NSBackspaceCharacter@8$NSBacktabTextMovement@18$NSBeginFunctionKey@63274$NSBelowBottom@6$NSBelowTop@3$NSBevelLineJoinStyle@2$NSBezelBorder@2$NSBlueControlTint@1$NSBoldFontMask@2$NSBorderlessWindowMask@0$NSBottomTabsBezelBorder@2$NSBoxCustom@4$NSBoxOldStyle@3$NSBoxPrimary@0$NSBoxSecondary@1$NSBoxSeparator@2$NSBreakFunctionKey@63282$NSBrowserAutoColumnResizing@1$NSBrowserDropAbove@1$NSBrowserDropOn@0$NSBrowserNoColumnResizing@0$NSBrowserUserColumnResizing@2$NSButtLineCapStyle@0$NSCMYKColorSpaceModel@2$NSCMYKModeColorPanel@2$NSCancelButton@0$NSCancelTextMovement@23$NSCarriageReturnCharacter@13$NSCellAllowsMixedState@16$NSCellChangesContents@14$NSCellDisabled@0$NSCellEditable@3$NSCellHasImageHorizontal@12$NSCellHasImageOnLeftOrBottom@13$NSCellHasOverlappingImage@11$NSCellHighlighted@5$NSCellHitContentArea@1$NSCellHitEditableTextArea@2$NSCellHitNone@0$NSCellHitTrackableArea@4$NSCellIsBordered@10$NSCellIsInsetButton@15$NSCellLightsByBackground@9$NSCellLightsByContents@6$NSCellLightsByGray@7$NSCellState@1$NSCenterTabStopType@2$NSCenterTextAlignment@2$NSChangeAutosaved@4$NSChangeBackgroundCell@8$NSChangeBackgroundCellMask@8$NSChangeCleared@2$NSChangeDiscardable@256$NSChangeDone@0$NSChangeGrayCell@4$NSChangeGrayCellMask@4$NSChangeReadOtherContents@3$NSChangeRedone@5$NSChangeUndone@1$NSCircularBezelStyle@7$NSCircularSlider@1$NSClearControlTint@7$NSClearDisplayFunctionKey@63290$NSClearLineFunctionKey@63289$NSClipPagination@2$NSClockAndCalendarDatePickerStyle@1$NSClosableWindowMask@2$NSClosePathBezierPathElement@3$NSCollectionViewDropBefore@1$NSCollectionViewDropOn@0$NSColorListModeColorPanel@5$NSColorPanelAllModesMask@65535$NSColorPanelCMYKModeMask@4$NSColorPanelColorListModeMask@32$NSColorPanelCrayonModeMask@128$NSColorPanelCustomPaletteModeMask@16$NSColorPanelGrayModeMask@1$NSColorPanelHSBModeMask@8$NSColorPanelRGBModeMask@2$NSColorPanelWheelModeMask@64$NSColorRenderingIntentAbsoluteColorimetric@1$NSColorRenderingIntentDefault@0$NSColorRenderingIntentPerceptual@3$NSColorRenderingIntentRelativeColorimetric@2$NSColorRenderingIntentSaturation@4$NSCommandKeyMask@1048576$NSCompositeClear@0$NSCompositeCopy@1$NSCompositeDestinationAtop@9$NSCompositeDestinationIn@7$NSCompositeDestinationOut@8$NSCompositeDestinationOver@6$NSCompositeHighlight@12$NSCompositePlusDarker@11$NSCompositePlusLighter@13$NSCompositeSourceAtop@5$NSCompositeSourceIn@3$NSCompositeSourceOut@4$NSCompositeSourceOver@2$NSCompositeXOR@10$NSCompressedFontMask@512$NSCondensedFontMask@64$NSContentsCellMask@1$NSContinuousCapacityLevelIndicatorStyle@1$NSControlGlyph@16777215$NSControlKeyMask@262144$NSCorrectionIndicatorTypeDefault@0$NSCorrectionIndicatorTypeGuesses@2$NSCorrectionIndicatorTypeReversion@1$NSCorrectionResponseAccepted@1$NSCorrectionResponseEdited@4$NSCorrectionResponseIgnored@3$NSCorrectionResponseNone@0$NSCorrectionResponseRejected@2$NSCorrectionResponseReverted@5$NSCrayonModeColorPanel@7$NSCriticalAlertStyle@2$NSCriticalRequest@0$NSCursorPointingDevice@2$NSCursorUpdate@17$NSCursorUpdateMask@131072$NSCurveToBezierPathElement@2$NSCustomPaletteModeColorPanel@4$NSDecimalTabStopType@3$NSDefaultControlTint@0$NSDefaultTokenStyle@0$NSDeleteCharFunctionKey@63294$NSDeleteCharacter@127$NSDeleteFunctionKey@63272$NSDeleteLineFunctionKey@63292$NSDescendingPageOrder@-1$NSDeviceIndependentModifierFlagsMask@4294901760$NSDeviceNColorSpaceModel@4$NSDirectSelection@0$NSDisclosureBezelStyle@5$NSDiscreteCapacityLevelIndicatorStyle@2$NSDisplayWindowRunLoopOrdering@600000$NSDocModalWindowMask@64$NSDockWindowLevel@20$NSDoubleType@6$NSDownArrowFunctionKey@63233$NSDownTextMovement@22$NSDragOperationAll_Obsolete@15$NSDragOperationCopy@1$NSDragOperationDelete@32$NSDragOperationGeneric@4$NSDragOperationLink@2$NSDragOperationMove@16$NSDragOperationNone@0$NSDragOperationPrivate@8$NSDraggingContextOutsideApplication@0$NSDraggingContextWithinApplication@1$NSDraggingFormationDefault@0$NSDraggingFormationList@3$NSDraggingFormationNone@1$NSDraggingFormationPile@2$NSDraggingFormationStack@4$NSDraggingItemEnumerationClearNonenumeratedImages@65536$NSDrawerClosedState@0$NSDrawerClosingState@3$NSDrawerOpenState@2$NSDrawerOpeningState@1$NSEndFunctionKey@63275$NSEnterCharacter@3$NSEraDatePickerElementFlag@256$NSEraserPointingDevice@3$NSEvenOddWindingRule@1$NSEventGestureAxisHorizontal@1$NSEventGestureAxisNone@0$NSEventGestureAxisVertical@2$NSEventMaskBeginGesture@524288$NSEventMaskEndGesture@1048576$NSEventMaskGesture@536870912$NSEventMaskMagnify@1073741824$NSEventMaskRotate@262144$NSEventMaskSwipe@2147483648$NSEventPhaseBegan@1$NSEventPhaseCancelled@16$NSEventPhaseChanged@4$NSEventPhaseEnded@8$NSEventPhaseNone@0$NSEventPhaseStationary@2$NSEventSwipeTrackingClampGestureAmount@2$NSEventSwipeTrackingLockDirection@1$NSEventTypeBeginGesture@19$NSEventTypeEndGesture@20$NSEventTypeGesture@29$NSEventTypeMagnify@30$NSEventTypeRotate@18$NSEventTypeSwipe@31$NSExclude10_4ElementsIconCreationOption@4$NSExcludeQuickDrawElementsIconCreationOption@2$NSExecuteFunctionKey@63298$NSExpandedFontMask@32$NSF10FunctionKey@63245$NSF11FunctionKey@63246$NSF12FunctionKey@63247$NSF13FunctionKey@63248$NSF14FunctionKey@63249$NSF15FunctionKey@63250$NSF16FunctionKey@63251$NSF17FunctionKey@63252$NSF18FunctionKey@63253$NSF19FunctionKey@63254$NSF1FunctionKey@63236$NSF20FunctionKey@63255$NSF21FunctionKey@63256$NSF22FunctionKey@63257$NSF23FunctionKey@63258$NSF24FunctionKey@63259$NSF25FunctionKey@63260$NSF26FunctionKey@63261$NSF27FunctionKey@63262$NSF28FunctionKey@63263$NSF29FunctionKey@63264$NSF2FunctionKey@63237$NSF30FunctionKey@63265$NSF31FunctionKey@63266$NSF32FunctionKey@63267$NSF33FunctionKey@63268$NSF34FunctionKey@63269$NSF35FunctionKey@63270$NSF3FunctionKey@63238$NSF4FunctionKey@63239$NSF5FunctionKey@63240$NSF6FunctionKey@63241$NSF7FunctionKey@63242$NSF8FunctionKey@63243$NSF9FunctionKey@63244$NSFPCurrentField@134$NSFPPreviewButton@131$NSFPPreviewField@128$NSFPRevertButton@130$NSFPSetButton@132$NSFPSizeField@129$NSFPSizeTitle@133$NSFileHandlingPanelCancelButton@0$NSFileHandlingPanelOKButton@1$NSFileWrapperReadingImmediate@1$NSFileWrapperReadingWithoutMapping@2$NSFileWrapperWritingAtomic@1$NSFileWrapperWritingWithNameUpdating@2$NSFindFunctionKey@63301$NSFindPanelActionNext@2$NSFindPanelActionPrevious@3$NSFindPanelActionReplace@5$NSFindPanelActionReplaceAll@4$NSFindPanelActionReplaceAllInSelection@8$NSFindPanelActionReplaceAndFind@6$NSFindPanelActionSelectAll@9$NSFindPanelActionSelectAllInSelection@10$NSFindPanelActionSetFindString@7$NSFindPanelActionShowFindPanel@1$NSFindPanelSubstringMatchTypeContains@0$NSFindPanelSubstringMatchTypeEndsWith@3$NSFindPanelSubstringMatchTypeFullWord@2$NSFindPanelSubstringMatchTypeStartsWith@1$NSFitPagination@1$NSFixedPitchFontMask@1024$NSFlagsChanged@12$NSFlagsChangedMask@4096$NSFloatType@3$NSFloatingPointSamplesBitmapFormat@4$NSFloatingWindowLevel@3$NSFocusRingAbove@2$NSFocusRingBelow@1$NSFocusRingOnly@0$NSFocusRingTypeDefault@0$NSFocusRingTypeExterior@2$NSFocusRingTypeNone@1$NSFontAntialiasedIntegerAdvancementsRenderingMode@3$NSFontAntialiasedRenderingMode@1$NSFontBoldTrait@2$NSFontClarendonSerifsClass@1073741824$NSFontCollectionApplicationOnlyMask@1$NSFontCollectionVisibilityComputer@4$NSFontCollectionVisibilityProcess@1$NSFontCollectionVisibilityUser@2$NSFontCondensedTrait@64$NSFontDefaultRenderingMode@0$NSFontExpandedTrait@32$NSFontFamilyClassMask@4026531840$NSFontFreeformSerifsClass@1879048192$NSFontIntegerAdvancementsRenderingMode@2$NSFontItalicTrait@1$NSFontModernSerifsClass@805306368$NSFontMonoSpaceTrait@1024$NSFontOldStyleSerifsClass@268435456$NSFontOrnamentalsClass@2415919104$NSFontPanelAllEffectsModeMask@1048320$NSFontPanelAllModesMask@4294967295$NSFontPanelCollectionModeMask@4$NSFontPanelDocumentColorEffectModeMask@2048$NSFontPanelFaceModeMask@1$NSFontPanelShadowEffectModeMask@4096$NSFontPanelSizeModeMask@2$NSFontPanelStandardModesMask@65535$NSFontPanelStrikethroughEffectModeMask@512$NSFontPanelTextColorEffectModeMask@1024$NSFontPanelUnderlineEffectModeMask@256$NSFontSansSerifClass@2147483648$NSFontScriptsClass@2684354560$NSFontSlabSerifsClass@1342177280$NSFontSymbolicClass@3221225472$NSFontTransitionalSerifsClass@536870912$NSFontUIOptimizedTrait@4096$NSFontUnknownClass@0$NSFontVerticalTrait@2048$NSFormFeedCharacter@12$NSFourByteGlyphPacking@4$NSFullScreenWindowMask@16384$NSFunctionKeyMask@8388608$NSGIFFileType@2$NSGlyphAbove@2$NSGlyphAttributeBidiLevel@2$NSGlyphAttributeElastic@1$NSGlyphAttributeInscribe@5$NSGlyphAttributeSoft@0$NSGlyphBelow@1$NSGlyphInscribeAbove@2$NSGlyphInscribeBase@0$NSGlyphInscribeBelow@1$NSGlyphInscribeOverBelow@4$NSGlyphInscribeOverstrike@3$NSGlyphLayoutAgainstAPoint@1$NSGlyphLayoutAtAPoint@0$NSGlyphLayoutWithPrevious@2$NSGradientConcaveStrong@2$NSGradientConcaveWeak@1$NSGradientConvexStrong@4$NSGradientConvexWeak@3$NSGradientDrawsAfterEndingLocation@2$NSGradientDrawsBeforeStartingLocation@1$NSGradientNone@0$NSGraphiteControlTint@6$NSGrayColorSpaceModel@0$NSGrayModeColorPanel@0$NSGrooveBorder@3$NSHSBModeColorPanel@3$NSHUDWindowMask@8192$NSHeavierFontAction@5$NSHelpButtonBezelStyle@9$NSHelpFunctionKey@63302$NSHelpKeyMask@4194304$NSHighlightModeMatrix@1$NSHomeFunctionKey@63273$NSHorizontalRuler@0$NSHourMinuteDatePickerElementFlag@12$NSHourMinuteSecondDatePickerElementFlag@14$NSIdentityMappingCharacterCollection@0$NSIllegalTextMovement@0$NSImageAbove@5$NSImageAlignBottom@5$NSImageAlignBottomLeft@6$NSImageAlignBottomRight@7$NSImageAlignCenter@0$NSImageAlignLeft@4$NSImageAlignRight@8$NSImageAlignTop@1$NSImageAlignTopLeft@2$NSImageAlignTopRight@3$NSImageBelow@4$NSImageCacheAlways@1$NSImageCacheBySize@2$NSImageCacheDefault@0$NSImageCacheNever@3$NSImageCellType@2$NSImageFrameButton@4$NSImageFrameGrayBezel@2$NSImageFrameGroove@3$NSImageFrameNone@0$NSImageFramePhoto@1$NSImageInterpolationDefault@0$NSImageInterpolationHigh@3$NSImageInterpolationLow@2$NSImageInterpolationMedium@4$NSImageInterpolationNone@1$NSImageLeft@2$NSImageLoadStatusCancelled@1$NSImageLoadStatusCompleted@0$NSImageLoadStatusInvalidData@2$NSImageLoadStatusReadError@4$NSImageLoadStatusUnexpectedEOF@3$NSImageOnly@1$NSImageOverlaps@6$NSImageRepLoadStatusCompleted@-6$NSImageRepLoadStatusInvalidData@-4$NSImageRepLoadStatusReadingHeader@-2$NSImageRepLoadStatusUnexpectedEOF@-5$NSImageRepLoadStatusUnknownType@-1$NSImageRepLoadStatusWillNeedAllData@-3$NSImageRepMatchesDevice@0$NSImageRight@3$NSImageScaleAxesIndependently@1$NSImageScaleNone@2$NSImageScaleProportionallyDown@0$NSImageScaleProportionallyUpOrDown@3$NSIndexedColorSpaceModel@5$NSInformationalAlertStyle@1$NSInformationalRequest@10$NSInlineBezelStyle@15$NSInsertCharFunctionKey@63293$NSInsertFunctionKey@63271$NSInsertLineFunctionKey@63291$NSIntType@1$NSItalicFontMask@1$NSJPEG2000FileType@5$NSJPEGFileType@3$NSJapaneseEUCGlyphPacking@1$NSJustifiedTextAlignment@3$NSKeyDown@10$NSKeyDownMask@1024$NSKeyUp@11$NSKeyUpMask@2048$NSLABColorSpaceModel@3$NSLandscapeOrientation@1$NSLayoutAttributeBaseline@11$NSLayoutAttributeBottom@4$NSLayoutAttributeCenterX@9$NSLayoutAttributeCenterY@10$NSLayoutAttributeHeight@8$NSLayoutAttributeLeading@5$NSLayoutAttributeLeft@1$NSLayoutAttributeNotAnAttribute@0$NSLayoutAttributeRight@2$NSLayoutAttributeTop@3$NSLayoutAttributeTrailing@6$NSLayoutAttributeWidth@7$NSLayoutCantFit@2$NSLayoutConstraintOrientationHorizontal@0$NSLayoutConstraintOrientationVertical@1$NSLayoutDone@1$NSLayoutFormatAlignAllBaseline@2048$NSLayoutFormatAlignAllBottom@16$NSLayoutFormatAlignAllCenterX@512$NSLayoutFormatAlignAllCenterY@1024$NSLayoutFormatAlignAllLeading@32$NSLayoutFormatAlignAllLeft@2$NSLayoutFormatAlignAllRight@4$NSLayoutFormatAlignAllTop@8$NSLayoutFormatAlignAllTrailing@64$NSLayoutFormatAlignmentMask@65535$NSLayoutFormatDirectionLeadingToTrailing@0$NSLayoutFormatDirectionLeftToRight@65536$NSLayoutFormatDirectionMask@196608$NSLayoutFormatDirectionRightToLeft@131072$NSLayoutLeftToRight@0$NSLayoutNotDone@0$NSLayoutOutOfGlyphs@3$NSLayoutPriorityDefaultHigh@750$NSLayoutPriorityDefaultLow@250$NSLayoutPriorityDragThatCanResizeWindow@510$NSLayoutPriorityDragThatCannotResizeWindow@490$NSLayoutPriorityFittingSizeCompression@50$NSLayoutPriorityRequired@1000$NSLayoutPriorityWindowSizeStayPut@500$NSLayoutRelationEqual@0$NSLayoutRelationGreaterThanOrEqual@1$NSLayoutRelationLessThanOrEqual@-1$NSLayoutRightToLeft@1$NSLeftArrowFunctionKey@63234$NSLeftMouseDown@1$NSLeftMouseDownMask@2$NSLeftMouseDragged@6$NSLeftMouseDraggedMask@64$NSLeftMouseUp@2$NSLeftMouseUpMask@4$NSLeftTabStopType@0$NSLeftTabsBezelBorder@1$NSLeftTextAlignment@0$NSLeftTextMovement@19$NSLighterFontAction@6$NSLineBorder@1$NSLineBreakByCharWrapping@1$NSLineBreakByClipping@2$NSLineBreakByTruncatingHead@3$NSLineBreakByTruncatingMiddle@5$NSLineBreakByTruncatingTail@4$NSLineBreakByWordWrapping@0$NSLineDoesntMove@0$NSLineMovesDown@3$NSLineMovesLeft@1$NSLineMovesRight@2$NSLineMovesUp@4$NSLineSeparatorCharacter@8232$NSLineSweepDown@2$NSLineSweepLeft@0$NSLineSweepRight@1$NSLineSweepUp@3$NSLineToBezierPathElement@1$NSLinearSlider@0$NSListModeMatrix@2$NSMacintoshInterfaceStyle@3$NSMainMenuWindowLevel@24$NSMenuFunctionKey@63285$NSMenuPropertyItemAccessibilityDescription@32$NSMenuPropertyItemAttributedTitle@2$NSMenuPropertyItemEnabled@16$NSMenuPropertyItemImage@8$NSMenuPropertyItemKeyEquivalent@4$NSMenuPropertyItemTitle@1$NSMiniControlSize@2$NSMiniaturizableWindowMask@4$NSMiterLineJoinStyle@0$NSMixedState@-1$NSModalPanelWindowLevel@8$NSModeSwitchFunctionKey@63303$NSMomentaryChangeButton@5$NSMomentaryLight@7$NSMomentaryLightButton@0$NSMomentaryPushButton@0$NSMomentaryPushInButton@7$NSMouseEntered@8$NSMouseEnteredMask@256$NSMouseEventSubtype@0$NSMouseExited@9$NSMouseExitedMask@512$NSMouseMoved@5$NSMouseMovedMask@32$NSMoveToBezierPathElement@0$NSNarrowFontMask@16$NSNativeShortGlyphPacking@5$NSNaturalTextAlignment@4$NSNewlineCharacter@10$NSNextFunctionKey@63296$NSNextStepInterfaceStyle@1$NSNoBorder@0$NSNoCellMask@0$NSNoFontChangeAction@0$NSNoImage@0$NSNoInterfaceStyle@0$NSNoModeColorPanel@-1$NSNoScrollerParts@0$NSNoTabsBezelBorder@4$NSNoTabsLineBorder@5$NSNoTabsNoBorder@6$NSNoTitle@0$NSNoUnderlineStyle@0$NSNonStandardCharacterSetFontMask@8$NSNonZeroWindingRule@0$NSNonactivatingPanelMask@128$NSNormalWindowLevel@0$NSNullCellType@0$NSNullGlyph@0$NSNumericPadKeyMask@2097152$NSOKButton@1$NSOPENGL_CURRENT_VERSION@1$NSOffState@0$NSOnOffButton@6$NSOnState@1$NSOneByteGlyphPacking@0$NSOnlyScrollerArrows@1$NSOpenGLCPCurrentRendererID@309$NSOpenGLCPGPUFragmentProcessing@311$NSOpenGLCPGPUVertexProcessing@310$NSOpenGLCPHasDrawable@314$NSOpenGLCPMPSwapsInFlight@315$NSOpenGLCPRasterizationEnable@221$NSOpenGLCPReclaimResources@308$NSOpenGLCPStateValidation@301$NSOpenGLCPSurfaceBackingSize@304$NSOpenGLCPSurfaceOpacity@236$NSOpenGLCPSurfaceOrder@235$NSOpenGLCPSurfaceSurfaceVolatile@306$NSOpenGLCPSwapInterval@222$NSOpenGLCPSwapRectangle@200$NSOpenGLCPSwapRectangleEnable@201$NSOpenGLGOClearFormatCache@502$NSOpenGLGOFormatCacheSize@501$NSOpenGLGOResetLibrary@504$NSOpenGLGORetainRenderers@503$NSOpenGLGOUseBuildCache@506$NSOpenGLPFAAccelerated@73$NSOpenGLPFAAcceleratedCompute@97$NSOpenGLPFAAccumSize@14$NSOpenGLPFAAllRenderers@1$NSOpenGLPFAAllowOfflineRenderers@96$NSOpenGLPFAAlphaSize@11$NSOpenGLPFAAuxBuffers@7$NSOpenGLPFAAuxDepthStencil@57$NSOpenGLPFABackingStore@76$NSOpenGLPFAClosestPolicy@74$NSOpenGLPFAColorFloat@58$NSOpenGLPFAColorSize@8$NSOpenGLPFACompliant@83$NSOpenGLPFADepthSize@12$NSOpenGLPFADoubleBuffer@5$NSOpenGLPFAFullScreen@54$NSOpenGLPFAMPSafe@78$NSOpenGLPFAMaximumPolicy@52$NSOpenGLPFAMinimumPolicy@51$NSOpenGLPFAMultiScreen@81$NSOpenGLPFAMultisample@59$NSOpenGLPFANoRecovery@72$NSOpenGLPFAOffScreen@53$NSOpenGLPFAOpenGLProfile@99$NSOpenGLPFAPixelBuffer@90$NSOpenGLPFARemotePixelBuffer@91$NSOpenGLPFARendererID@70$NSOpenGLPFARobust@75$NSOpenGLPFASampleAlpha@61$NSOpenGLPFASampleBuffers@55$NSOpenGLPFASamples@56$NSOpenGLPFAScreenMask@84$NSOpenGLPFASingleRenderer@71$NSOpenGLPFAStencilSize@13$NSOpenGLPFAStereo@6$NSOpenGLPFASupersample@60$NSOpenGLPFATripleBuffer@3$NSOpenGLPFAVirtualScreenCount@128$NSOpenGLPFAWindow@80$NSOpenGLProfileVersion3_2Core@12800$NSOpenGLProfileVersionLegacy@4096$NSOtherMouseDown@25$NSOtherMouseDownMask@33554432$NSOtherMouseDragged@27$NSOtherMouseDraggedMask@134217728$NSOtherMouseUp@26$NSOtherMouseUpMask@67108864$NSOtherTextMovement@0$NSOutlineViewDropOnItemIndex@-1$NSPNGFileType@4$NSPageDownFunctionKey@63277$NSPageUpFunctionKey@63276$NSParagraphSeparatorCharacter@8233$NSPasteboardReadingAsData@0$NSPasteboardReadingAsKeyedArchive@4$NSPasteboardReadingAsPropertyList@2$NSPasteboardReadingAsString@1$NSPasteboardWritingPromised@512$NSPathStyleNavigationBar@1$NSPathStylePopUp@2$NSPathStyleStandard@0$NSPatternColorSpaceModel@6$NSPauseFunctionKey@63280$NSPenLowerSideMask@2$NSPenPointingDevice@1$NSPenTipMask@1$NSPenUpperSideMask@4$NSPeriodic@16$NSPeriodicMask@65536$NSPlainTextTokenStyle@1$NSPopUpArrowAtBottom@2$NSPopUpArrowAtCenter@1$NSPopUpMenuWindowLevel@101$NSPopUpNoArrow@0$NSPopoverAppearanceHUD@1$NSPopoverAppearanceMinimal@0$NSPopoverBehaviorApplicationDefined@0$NSPopoverBehaviorSemitransient@2$NSPopoverBehaviorTransient@1$NSPortraitOrientation@0$NSPositiveDoubleType@7$NSPositiveFloatType@4$NSPositiveIntType@2$NSPosterFontMask@256$NSPowerOffEventType@1$NSPressedTab@2$NSPrevFunctionKey@63295$NSPrintFunctionKey@63288$NSPrintPanelShowsCopies@1$NSPrintPanelShowsOrientation@8$NSPrintPanelShowsPageRange@2$NSPrintPanelShowsPageSetupAccessory@256$NSPrintPanelShowsPaperSize@4$NSPrintPanelShowsPreview@131072$NSPrintPanelShowsPrintSelection@32$NSPrintPanelShowsScaling@16$NSPrintRenderingQualityBest@0$NSPrintRenderingQualityResponsive@1$NSPrintScreenFunctionKey@63278$NSPrinterTableError@2$NSPrinterTableNotFound@1$NSPrinterTableOK@0$NSPrintingCancelled@0$NSPrintingFailure@3$NSPrintingReplyLater@2$NSPrintingSuccess@1$NSProgressIndicatorBarStyle@0$NSProgressIndicatorPreferredAquaThickness@12$NSProgressIndicatorPreferredLargeThickness@18$NSProgressIndicatorPreferredSmallThickness@10$NSProgressIndicatorPreferredThickness@14$NSProgressIndicatorSpinningStyle@1$NSPushInCell@2$NSPushInCellMask@2$NSPushOnPushOffButton@1$NSQTMovieLoopingBackAndForthPlayback@2$NSQTMovieLoopingPlayback@1$NSQTMovieNormalPlayback@0$NSRGBColorSpaceModel@1$NSRGBModeColorPanel@1$NSRadioButton@4$NSRadioModeMatrix@0$NSRangeDateMode@1$NSRatingLevelIndicatorStyle@3$NSRecessedBezelStyle@13$NSRedoFunctionKey@63300$NSRegularControlSize@0$NSRegularSquareBezelStyle@2$NSRelevancyLevelIndicatorStyle@0$NSRemoteNotificationTypeBadge@1$NSRemoteNotificationTypeNone@0$NSRemoveTraitFontAction@7$NSResetCursorRectsRunLoopOrdering@700000$NSResetFunctionKey@63283$NSResizableWindowMask@8$NSReturnTextMovement@16$NSRightArrowFunctionKey@63235$NSRightMouseDown@3$NSRightMouseDownMask@8$NSRightMouseDragged@7$NSRightMouseDraggedMask@128$NSRightMouseUp@4$NSRightMouseUpMask@16$NSRightTabStopType@1$NSRightTabsBezelBorder@3$NSRightTextAlignment@1$NSRightTextMovement@20$NSRoundLineCapStyle@1$NSRoundLineJoinStyle@1$NSRoundRectBezelStyle@12$NSRoundedBezelStyle@1$NSRoundedDisclosureBezelStyle@14$NSRoundedTokenStyle@2$NSRuleEditorNestingModeCompound@2$NSRuleEditorNestingModeList@1$NSRuleEditorNestingModeSimple@3$NSRuleEditorNestingModeSingle@0$NSRuleEditorRowTypeCompound@1$NSRuleEditorRowTypeSimple@0$NSRunAbortedResponse@-1001$NSRunContinuesResponse@-1002$NSRunStoppedResponse@-1000$NSSaveAsOperation@1$NSSaveOperation@0$NSSaveToOperation@2$NSScaleNone@2$NSScaleProportionally@0$NSScaleToFit@1$NSScreenChangedEventType@8$NSScreenSaverWindowLevel@1000$NSScrollElasticityAllowed@2$NSScrollElasticityAutomatic@0$NSScrollElasticityNone@1$NSScrollLockFunctionKey@63279$NSScrollViewFindBarPositionAboveContent@1$NSScrollViewFindBarPositionAboveHorizontalRuler@0$NSScrollViewFindBarPositionBelowContent@2$NSScrollWheel@22$NSScrollWheelMask@4194304$NSScrollerArrowsDefaultSetting@0$NSScrollerArrowsMaxEnd@0$NSScrollerArrowsMinEnd@1$NSScrollerArrowsNone@2$NSScrollerDecrementArrow@1$NSScrollerDecrementLine@4$NSScrollerDecrementPage@1$NSScrollerIncrementArrow@0$NSScrollerIncrementLine@5$NSScrollerIncrementPage@3$NSScrollerKnob@2$NSScrollerKnobSlot@6$NSScrollerKnobStyleDark@1$NSScrollerKnobStyleDefault@0$NSScrollerKnobStyleLight@2$NSScrollerNoPart@0$NSScrollerStyleLegacy@0$NSScrollerStyleOverlay@1$NSSearchFieldClearRecentsMenuItemTag@1002$NSSearchFieldNoRecentsMenuItemTag@1003$NSSearchFieldRecentsMenuItemTag@1001$NSSearchFieldRecentsTitleMenuItemTag@1000$NSSegmentStyleAutomatic@0$NSSegmentStyleCapsule@5$NSSegmentStyleRoundRect@3$NSSegmentStyleRounded@1$NSSegmentStyleSmallSquare@6$NSSegmentStyleTexturedRounded@2$NSSegmentStyleTexturedSquare@4$NSSegmentSwitchTrackingMomentary@2$NSSegmentSwitchTrackingSelectAny@1$NSSegmentSwitchTrackingSelectOne@0$NSSelectByCharacter@0$NSSelectByParagraph@2$NSSelectByWord@1$NSSelectFunctionKey@63297$NSSelectedTab@0$NSSelectingNext@1$NSSelectingPrevious@2$NSSelectionAffinityDownstream@1$NSSelectionAffinityUpstream@0$NSServiceApplicationLaunchFailedError@66561$NSServiceApplicationNotFoundError@66560$NSServiceErrorMaximum@66817$NSServiceErrorMinimum@66560$NSServiceInvalidPasteboardDataError@66563$NSServiceMalformedServiceDictionaryError@66564$NSServiceMiscellaneousError@66800$NSServiceRequestTimedOutError@66562$NSShadowlessSquareBezelStyle@6$NSShiftKeyMask@131072$NSShowControlGlyphs@1$NSShowInvisibleGlyphs@2$NSSingleDateMode@0$NSSingleUnderlineStyle@1$NSSizeDownFontAction@4$NSSizeUpFontAction@3$NSSmallCapsFontMask@128$NSSmallControlSize@1$NSSmallIconButtonBezelStyle@2$NSSmallSquareBezelStyle@10$NSSpecialPageOrder@0$NSSpeechImmediateBoundary@0$NSSpeechSentenceBoundary@2$NSSpeechWordBoundary@1$NSSpellingStateGrammarFlag@2$NSSpellingStateSpellingFlag@1$NSSplitViewDividerStylePaneSplitter@3$NSSplitViewDividerStyleThick@1$NSSplitViewDividerStyleThin@2$NSSquareLineCapStyle@2$NSSquareStatusItemLength@-2$NSStatusWindowLevel@25$NSStopFunctionKey@63284$NSStringDrawingDisableScreenFontSubstitution@4$NSStringDrawingOneShot@16$NSStringDrawingTruncatesLastVisibleLine@32$NSStringDrawingUsesDeviceMetrics@8$NSStringDrawingUsesFontLeading@2$NSStringDrawingUsesLineFragmentOrigin@1$NSSubmenuWindowLevel@3$NSSwitchButton@3$NSSysReqFunctionKey@63281$NSSystemDefined@14$NSSystemDefinedMask@16384$NSSystemFunctionKey@63287$NSTIFFCompressionCCITTFAX3@3$NSTIFFCompressionCCITTFAX4@4$NSTIFFCompressionJPEG@6$NSTIFFCompressionLZW@5$NSTIFFCompressionNEXT@32766$NSTIFFCompressionNone@1$NSTIFFCompressionOldJPEG@32865$NSTIFFCompressionPackBits@32773$NSTIFFFileType@0$NSTabCharacter@9$NSTabTextMovement@17$NSTableColumnAutoresizingMask@1$NSTableColumnNoResizing@0$NSTableColumnUserResizingMask@2$NSTableViewAnimationEffectFade@1$NSTableViewAnimationEffectGap@2$NSTableViewAnimationEffectNone@0$NSTableViewAnimationSlideDown@32$NSTableViewAnimationSlideLeft@48$NSTableViewAnimationSlideRight@64$NSTableViewAnimationSlideUp@16$NSTableViewDashedHorizontalGridLineMask@8$NSTableViewDraggingDestinationFeedbackStyleNone@-1$NSTableViewDraggingDestinationFeedbackStyleRegular@0$NSTableViewDraggingDestinationFeedbackStyleSourceList@1$NSTableViewDropAbove@1$NSTableViewDropOn@0$NSTableViewFirstColumnOnlyAutoresizingStyle@5$NSTableViewGridNone@0$NSTableViewLastColumnOnlyAutoresizingStyle@4$NSTableViewNoColumnAutoresizing@0$NSTableViewReverseSequentialColumnAutoresizingStyle@3$NSTableViewRowSizeStyleCustom@0$NSTableViewRowSizeStyleDefault@-1$NSTableViewRowSizeStyleLarge@3$NSTableViewRowSizeStyleMedium@2$NSTableViewRowSizeStyleSmall@1$NSTableViewSelectionHighlightStyleNone@-1$NSTableViewSelectionHighlightStyleRegular@0$NSTableViewSelectionHighlightStyleSourceList@1$NSTableViewSequentialColumnAutoresizingStyle@2$NSTableViewSolidHorizontalGridLineMask@2$NSTableViewSolidVerticalGridLineMask@1$NSTableViewUniformColumnAutoresizingStyle@1$NSTabletPoint@23$NSTabletPointEventSubtype@1$NSTabletPointMask@8388608$NSTabletProximity@24$NSTabletProximityEventSubtype@2$NSTabletProximityMask@16777216$NSTerminateCancel@0$NSTerminateLater@2$NSTerminateNow@1$NSTextBlockAbsoluteValueType@0$NSTextBlockBaselineAlignment@3$NSTextBlockBorder@0$NSTextBlockBottomAlignment@2$NSTextBlockHeight@4$NSTextBlockMargin@1$NSTextBlockMaximumHeight@6$NSTextBlockMaximumWidth@2$NSTextBlockMiddleAlignment@1$NSTextBlockMinimumHeight@5$NSTextBlockMinimumWidth@1$NSTextBlockPadding@-1$NSTextBlockPercentageValueType@1$NSTextBlockTopAlignment@0$NSTextBlockWidth@0$NSTextCellType@1$NSTextFieldAndStepperDatePickerStyle@0$NSTextFieldDatePickerStyle@2$NSTextFieldRoundedBezel@1$NSTextFieldSquareBezel@0$NSTextFinderActionHideFindInterface@11$NSTextFinderActionHideReplaceInterface@13$NSTextFinderActionNextMatch@2$NSTextFinderActionPreviousMatch@3$NSTextFinderActionReplace@5$NSTextFinderActionReplaceAll@4$NSTextFinderActionReplaceAllInSelection@8$NSTextFinderActionReplaceAndFind@6$NSTextFinderActionSelectAll@9$NSTextFinderActionSelectAllInSelection@10$NSTextFinderActionSetSearchString@7$NSTextFinderActionShowFindInterface@1$NSTextFinderActionShowReplaceInterface@12$NSTextFinderMatchingTypeContains@0$NSTextFinderMatchingTypeEndsWith@3$NSTextFinderMatchingTypeFullWord@2$NSTextFinderMatchingTypeStartsWith@1$NSTextLayoutOrientationHorizontal@0$NSTextLayoutOrientationVertical@1$NSTextListPrependEnclosingMarker@1$NSTextReadInapplicableDocumentTypeError@65806$NSTextReadWriteErrorMaximum@66303$NSTextReadWriteErrorMinimum@65792$NSTextStorageEditedAttributes@1$NSTextStorageEditedCharacters@2$NSTextTableAutomaticLayoutAlgorithm@0$NSTextTableFixedLayoutAlgorithm@1$NSTextWriteInapplicableDocumentTypeError@66062$NSTextWritingDirectionEmbedding@0$NSTextWritingDirectionOverride@2$NSTexturedBackgroundWindowMask@256$NSTexturedRoundedBezelStyle@11$NSTexturedSquareBezelStyle@8$NSThickSquareBezelStyle@3$NSThickerSquareBezelStyle@4$NSTickMarkAbove@1$NSTickMarkBelow@0$NSTickMarkLeft@1$NSTickMarkRight@0$NSTimeZoneDatePickerElementFlag@16$NSTitledWindowMask@1$NSToggleButton@2$NSToolbarDisplayModeDefault@0$NSToolbarDisplayModeIconAndLabel@1$NSToolbarDisplayModeIconOnly@2$NSToolbarDisplayModeLabelOnly@3$NSToolbarItemVisibilityPriorityHigh@1000$NSToolbarItemVisibilityPriorityLow@-1000$NSToolbarItemVisibilityPriorityStandard@0$NSToolbarItemVisibilityPriorityUser@2000$NSToolbarSizeModeDefault@0$NSToolbarSizeModeRegular@1$NSToolbarSizeModeSmall@2$NSTopTabsBezelBorder@0$NSTornOffMenuWindowLevel@3$NSTouchEventSubtype@3$NSTouchPhaseBegan@1$NSTouchPhaseCancelled@16$NSTouchPhaseEnded@8$NSTouchPhaseMoved@2$NSTouchPhaseStationary@4$NSTouchPhaseTouching@7$NSTrackModeMatrix@3$NSTrackingActiveAlways@128$NSTrackingActiveInActiveApp@64$NSTrackingActiveInKeyWindow@32$NSTrackingActiveWhenFirstResponder@16$NSTrackingAssumeInside@256$NSTrackingCursorUpdate@4$NSTrackingEnabledDuringMouseDrag@1024$NSTrackingInVisibleRect@512$NSTrackingMouseEnteredAndExited@1$NSTrackingMouseMoved@2$NSTwoByteGlyphPacking@3$NSTypesetterBehavior_10_2@2$NSTypesetterBehavior_10_2_WithCompatibility@1$NSTypesetterBehavior_10_3@3$NSTypesetterBehavior_10_4@4$NSTypesetterContainerBreakAction@32$NSTypesetterHorizontalTabAction@4$NSTypesetterLatestBehavior@-1$NSTypesetterLineBreakAction@8$NSTypesetterOriginalBehavior@0$NSTypesetterParagraphBreakAction@16$NSTypesetterWhitespaceAction@2$NSTypesetterZeroAdvancementAction@1$NSUnboldFontMask@4$NSUnderlinePatternDash@512$NSUnderlinePatternDashDot@768$NSUnderlinePatternDashDotDot@1024$NSUnderlinePatternDot@256$NSUnderlinePatternSolid@0$NSUnderlineStyleDouble@9$NSUnderlineStyleNone@0$NSUnderlineStyleSingle@1$NSUnderlineStyleThick@2$NSUndoFunctionKey@63299$NSUnifiedTitleAndToolbarWindowMask@4096$NSUnitalicFontMask@16777216$NSUnknownColorSpaceModel@-1$NSUnknownPageOrder@2$NSUnknownPointingDevice@0$NSUnscaledWindowMask@2048$NSUpArrowFunctionKey@63232$NSUpTextMovement@21$NSUpdateWindowsRunLoopOrdering@500000$NSUserFunctionKey@63286$NSUserInterfaceLayoutDirectionLeftToRight@0$NSUserInterfaceLayoutDirectionRightToLeft@1$NSUtilityWindowMask@16$NSVariableStatusItemLength@-1$NSVerticalRuler@1$NSViaPanelFontAction@1$NSViewHeightSizable@16$NSViewLayerContentsPlacementBottom@8$NSViewLayerContentsPlacementBottomLeft@9$NSViewLayerContentsPlacementBottomRight@7$NSViewLayerContentsPlacementCenter@3$NSViewLayerContentsPlacementLeft@10$NSViewLayerContentsPlacementRight@6$NSViewLayerContentsPlacementScaleAxesIndependently@0$NSViewLayerContentsPlacementScaleProportionallyToFill@2$NSViewLayerContentsPlacementScaleProportionallyToFit@1$NSViewLayerContentsPlacementTop@4$NSViewLayerContentsPlacementTopLeft@11$NSViewLayerContentsPlacementTopRight@5$NSViewLayerContentsRedrawBeforeViewResize@3$NSViewLayerContentsRedrawDuringViewResize@2$NSViewLayerContentsRedrawNever@0$NSViewLayerContentsRedrawOnSetNeedsDisplay@1$NSViewMaxXMargin@4$NSViewMaxYMargin@32$NSViewMinXMargin@1$NSViewMinYMargin@8$NSViewNotSizable@0$NSViewWidthSizable@2$NSWantsBidiLevels@4$NSWarningAlertStyle@0$NSWheelModeColorPanel@6$NSWindowAbove@1$NSWindowAnimationBehaviorAlertPanel@5$NSWindowAnimationBehaviorDefault@0$NSWindowAnimationBehaviorDocumentWindow@3$NSWindowAnimationBehaviorNone@2$NSWindowAnimationBehaviorUtilityWindow@4$NSWindowBackingLocationDefault@0$NSWindowBackingLocationMainMemory@2$NSWindowBackingLocationVideoMemory@1$NSWindowBelow@-1$NSWindowCloseButton@0$NSWindowCollectionBehaviorCanJoinAllSpaces@1$NSWindowCollectionBehaviorDefault@0$NSWindowCollectionBehaviorFullScreenAuxiliary@256$NSWindowCollectionBehaviorFullScreenPrimary@128$NSWindowCollectionBehaviorIgnoresCycle@64$NSWindowCollectionBehaviorManaged@4$NSWindowCollectionBehaviorMoveToActiveSpace@2$NSWindowCollectionBehaviorParticipatesInCycle@32$NSWindowCollectionBehaviorStationary@16$NSWindowCollectionBehaviorTransient@8$NSWindowDepthOnehundredtwentyeightBitRGB@544$NSWindowDepthSixtyfourBitRGB@528$NSWindowDepthTwentyfourBitRGB@520$NSWindowDocumentIconButton@4$NSWindowDocumentVersionsButton@6$NSWindowExposedEventType@0$NSWindowFullScreenButton@7$NSWindowMiniaturizeButton@1$NSWindowMovedEventType@4$NSWindowNumberListAllApplications@1$NSWindowNumberListAllSpaces@16$NSWindowOut@0$NSWindowSharingNone@0$NSWindowSharingReadOnly@1$NSWindowSharingReadWrite@2$NSWindowToolbarButton@3$NSWindowZoomButton@2$NSWindows95InterfaceStyle@2$NSWorkspaceLaunchAllowingClassicStartup@131072$NSWorkspaceLaunchAndHide@1048576$NSWorkspaceLaunchAndHideOthers@2097152$NSWorkspaceLaunchAndPrint@2$NSWorkspaceLaunchAsync@65536$NSWorkspaceLaunchDefault@196608$NSWorkspaceLaunchInhibitingBackgroundOnly@128$NSWorkspaceLaunchNewInstance@524288$NSWorkspaceLaunchPreferringClassic@262144$NSWorkspaceLaunchWithoutActivation@512$NSWorkspaceLaunchWithoutAddingToRecents@256$NSWritingDirectionLeftToRight@0$NSWritingDirectionNatural@-1$NSWritingDirectionRightToLeft@1$NSYearMonthDatePickerElementFlag@192$NSYearMonthDayDatePickerElementFlag@224$NumGlyphsToGetEachTime@20$'''
misc.update({'NSAnyEventMask': sel32or64(4294967295, 18446744073709551615L), 'NSTouchPhaseAny': sel32or64(4294967295, 18446744073709551615L), 'NSAttachmentCharacter': b'\xef\xbf\xbc'.decode("utf-8"), 'NSDragOperationEvery': sel32or64(4294967295, 18446744073709551615L)})
misc.update({'NSAppKitVersionNumber10_4_1': 824.1, 'NSAppKitVersionNumber10_4_3': 824.23, 'NSAppKitVersionNumber10_3_9': 743.36, 'NSAppKitVersionNumberWithPatternColorLeakFix': 641.0, 'NSAppKitVersionNumber10_4_4': 824.33, 'NSAppKitVersionNumber10_4_7': 824.41, 'NSAppKitVersionNumber10_3_2': 743.14, 'NSAppKitVersionNumber10_3_3': 743.2, 'NSAppKitVersionNumberWithDeferredWindowDisplaySupport': 1019.0, 'NSAppKitVersionNumber10_3_7': 743.33, 'NSAppKitVersionNumberWithCustomSheetPosition': 686.0, 'NSAppKitVersionNumber10_3_5': 743.24, 'NSAppKitVersionNumber10_2_3': 663.6, 'NSAppKitVersionNumberWithColumnResizingBrowser': 685.0, 'NSAppKitVersionNumberWithDirectionalTabs': 631.0, 'NSAppKitVersionNumberWithDockTilePlugInSupport': 1001.0, 'NSAppKitVersionNumberWithCursorSizeSupport': 682.0, 'NSAppKitVersionNumber10_5_2': 949.27, 'NSAppKitVersionNumber10_5_3': 949.33, 'NSAppKitVersionNumberWithContinuousScrollingBrowser': 680.0, 'NSBaselineNotSet': -1.0})
functions={'NSRectClipList': (sel32or64(b'v^{_NSRect={_NSPoint=ff}{_NSSize=ff}}i', b'v^{CGRect={CGPoint=dd}{CGSize=dd}}q'), '', {'arguments': {0: {'c_array_length_in_arg': 1, 'type_modifier': 'n'}}}), 'NSApplicationLoad': (b'Z',), 'NSCountWindows': (sel32or64(b'v^i', b'v^q'), '', {'arguments': {0: {'type_modifier': 'o'}}}), 'NSGetAlertPanel': (b'@@@@@@', '', {'arguments': {1: {'printf_format': True}}, 'variadic': True}), 'NSApplicationMain': (b'ii^^c',), 'NSOpenGLGetVersion': (b'v^i^i', '', {'arguments': {0: {'type_modifier': 'o'}, 1: {'type_modifier': 'o'}}}), 'NSAccessibilityActionDescription': (b'@@',), 'NSRunAlertPanelRelativeToWindow': (sel32or64(b'i@@@@@@', b'q@@@@@@'), '', {'arguments': {1: {'printf_format': 1}}, 'variadic': True}), 'NSCreateFileContentsPboardType': (b'@@', '', {'retval': {'already_cfretained': True}}), 'NSDrawNinePartImage': (sel32or64(b'v{_NSRect={_NSPoint=ff}{_NSSize=ff}}@@@@@@@@@IfZ', b'v{CGRect={CGPoint=dd}{CGSize=dd}}@@@@@@@@@QdZ'),), 'NSOpenGLSetOption': (b'vii',), 'NSRectClip': (sel32or64(b'v{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'v{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSDottedFrameRect': (sel32or64(b'v{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'v{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSDrawBitmap': (sel32or64(b'v{_NSRect={_NSPoint=ff}{_NSSize=ff}}iiiiiiZZ@[5^C]', b'v{CGRect={CGPoint=dd}{CGSize=dd}}qqqqqqZZ@[5^C]'),), 'NSConvertGlyphsToPackedGlyphs': (sel32or64(b'i^IiI^c', b'q^IqQ^c'),), 'NSGetFileType': (b'@@',), 'NSWindowList': (sel32or64(b'vi^i', b'vq^q'), '', {'arguments': {1: {'c_array_length_in_arg': 0, 'type_modifier': 'o'}}}), 'NSAccessibilityRaiseBadArgumentException': (b'v@@@',), 'NSAccessibilityUnignoredDescendant': (b'@@',), 'NSRectFill': (sel32or64(b'v{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'v{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSGetCriticalAlertPanel': (b'@@@@@@', '', {'arguments': {1: {'printf_format': True}}, 'variadic': True}), 'NSDrawThreePartImage': (sel32or64(b'v{_NSRect={_NSPoint=ff}{_NSSize=ff}}@@@ZIfZ', b'v{CGRect={CGPoint=dd}{CGSize=dd}}@@@ZQdZ'),), 'NSAccessibilityRoleDescription': (b'@@@',), 'NSRunCriticalAlertPanel': (sel32or64(b'i@@@@@', b'q@@@@@'), '', {'arguments': {1: {'printf_format': 1}}, 'variadic': True}), 'NSFrameRect': (sel32or64(b'v{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'v{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSDrawColorTiledRects': (sel32or64(b'{_NSRect={_NSPoint=ff}{_NSSize=ff}}{_NSRect={_NSPoint=ff}{_NSSize=ff}}{_NSRect={_NSPoint=ff}{_NSSize=ff}}^i^@i', b'{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}^Q^@q'), '', {'arguments': {2: {'c_array_length_in_arg': 4, 'type_modifier': 'n'}, 3: {'c_array_length_in_arg': 4, 'type_modifier': 'n'}}}), 'NSWindowListForContext': (sel32or64(b'vii^i', b'vqq^q'), '', {'arguments': {2: {'c_array_length_in_arg': 1, 'type_modifier': 'o'}}}), 'NSBeginAlertSheet': (b'v@@@@@@::^v@', '', {'arguments': {9: {'printf_format': True}, 6: {'sel_of_type': sel32or64(b'v@:@i^v', b'v@:@q^v')}, 7: {'sel_of_type': sel32or64(b'v@:@i^v', b'v@:@q^v')}}, 'variadic': True}), 'NSCountWindowsForContext': (sel32or64(b'vi^i', b'vq^q'), '', {'arguments': {1: {'type_modifier': 'o'}}}), 'NSGetWindowServerMemory': (sel32or64(b'ii^i^i^@', b'qq^q^q^@'), '', {'arguments': {1: {'type_modifier': 'o'}, 2: {'type_modifier': 'o'}, 3: {'type_modifier': 'o'}}}), 'NSShowAnimationEffect': (sel32or64(b'vI{_NSPoint=ff}{_NSSize=ff}@:^v', b'vQ{CGPoint=dd}{CGSize=dd}@:^v'), '', {'arguments': {4: {'sel_of_type': b'v@:^v'}}}), 'NSRunCriticalAlertPanelRelativeToWindow': (sel32or64(b'i@@@@@@', b'q@@@@@@'), '', {'arguments': {1: {'printf_format': 1}}, 'variadic': True}), 'NSAccessibilityUnignoredChildren': (b'@@',), 'NSRectFillListUsingOperation': (sel32or64(b'v^{_NSRect={_NSPoint=ff}{_NSSize=ff}}iI', b'v^{CGRect={CGPoint=dd}{CGSize=dd}}qQ'), '', {'arguments': {0: {'c_array_length_in_arg': 1, 'type_modifier': 'n'}}}), 'NSCreateFilenamePboardType': (b'@@', '', {'retval': {'already_cfretained': True}}), 'NSInterfaceStyleForKey': (sel32or64(b'I@@', b'Q@@'),), 'NSAvailableWindowDepths': (b'^i', '', {'retval': {'c_array_delimited_by_null': True}}), 'NSBeginInformationalAlertSheet': (b'v@@@@@@::^v@', '', {'arguments': {9: {'printf_format': True}, 6: {'sel_of_type': sel32or64(b'v@:@i^v', b'v@:@q^v')}, 7: {'sel_of_type': sel32or64(b'v@:@i^v', b'v@:@q^v')}}, 'variadic': True}), 'NSUnregisterServicesProvider': (b'v@',), 'NSEventMaskFromType': (sel32or64(b'II', b'QQ'),), 'NSRectFillUsingOperation': (sel32or64(b'v{_NSRect={_NSPoint=ff}{_NSSize=ff}}I', b'v{CGRect={CGPoint=dd}{CGSize=dd}}Q'),), 'NSBitsPerSampleFromDepth': (sel32or64(b'ii', b'qi'),), 'NSEnableScreenUpdates': (b'v',), 'NSDrawDarkBezel': (sel32or64(b'v{_NSRect={_NSPoint=ff}{_NSSize=ff}}{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'v{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSRunInformationalAlertPanelRelativeToWindow': (sel32or64(b'i@@@@@@', b'q@@@@@@'), '', {'arguments': {1: {'printf_format': 1}}, 'variadic': True}), 'NSPerformService': (b'Z@@',), 'NSGetFileTypes': (b'@@',), 'NSDrawWhiteBezel': (sel32or64(b'v{_NSRect={_NSPoint=ff}{_NSSize=ff}}{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'v{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSReleaseAlertPanel': (b'v@',), 'NSAccessibilityUnignoredAncestor': (b'@@',), 'NSSetFocusRingStyle': (sel32or64(b'vI', b'vQ'),), 'NSAccessibilityPostNotification': (b'v@@',), 'NSDrawTiledRects': (sel32or64(b'{_NSRect={_NSPoint=ff}{_NSSize=ff}}{_NSRect={_NSPoint=ff}{_NSSize=ff}}{_NSRect={_NSPoint=ff}{_NSSize=ff}}^i^fi', b'{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}^Q^dq'), '', {'arguments': {2: {'c_array_length_in_arg': 4, 'type_modifier': 'n'}, 3: {'c_array_length_in_arg': 4, 'type_modifier': 'n'}}}), 'NSUpdateDynamicServices': (b'v',), 'NSIsControllerMarker': (b'Z@',), 'NSDrawButton': (sel32or64(b'v{_NSRect={_NSPoint=ff}{_NSSize=ff}}{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'v{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSSetShowsServicesMenuItem': (sel32or64(b'i@Z', b'q@Z'),), 'NSOpenGLGetOption': (b'vi^i', '', {'arguments': {1: {'type_modifier': 'o'}}}), 'NSDrawLightBezel': (sel32or64(b'v{_NSRect={_NSPoint=ff}{_NSSize=ff}}{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'v{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSCopyBits': (sel32or64(b'vi{_NSRect={_NSPoint=ff}{_NSSize=ff}}{_NSPoint=ff}', b'vq{CGRect={CGPoint=dd}{CGSize=dd}}{CGPoint=dd}'), '', {'retval': {'already_cfretained': True}}), 'NSDisableScreenUpdates': (b'v',), 'NSEdgeInsetsMake': (sel32or64(b'{_NSEdgeInsets=ffff}ffff', b'{_NSEdgeInsets=dddd}dddd'),), 'NSReadPixel': (sel32or64(b'@{_NSPoint=ff}', b'@{CGPoint=dd}'),), 'NSBeginCriticalAlertSheet': (b'v@@@@@@::^v@', '', {'arguments': {9: {'printf_format': True}, 6: {'sel_of_type': sel32or64(b'v@:@i^v', b'v@:@q^v')}, 7: {'sel_of_type': sel32or64(b'v@:@i^v', b'v@:@q^v')}}, 'variadic': True}), 'NSAccessibilityRoleDescriptionForUIElement': (b'@@',), 'NSDrawWindowBackground': (sel32or64(b'v{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'v{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSShowsServicesMenuItem': (b'Z@',), 'NSPlanarFromDepth': (b'Zi',), 'NSHighlightRect': (sel32or64(b'v{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'v{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSFrameRectWithWidthUsingOperation': (sel32or64(b'v{_NSRect={_NSPoint=ff}{_NSSize=ff}}fI', b'v{CGRect={CGPoint=dd}{CGSize=dd}}dQ'),), 'NSRectFillListWithColorsUsingOperation': (sel32or64(b'v^{_NSRect={_NSPoint=ff}{_NSSize=ff}}^@iI', b'v^{CGRect={CGPoint=dd}{CGSize=dd}}^@qQ'), '', {'arguments': {0: {'c_array_length_in_arg': 2, 'type_modifier': 'n'}, 1: {'c_array_length_in_arg': 2, 'type_modifier': 'n'}}}), 'NSDrawGroove': (sel32or64(b'v{_NSRect={_NSPoint=ff}{_NSSize=ff}}{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'v{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSNumberOfColorComponents': (sel32or64(b'i@', b'q@'),), 'NSFrameRectWithWidth': (sel32or64(b'v{_NSRect={_NSPoint=ff}{_NSSize=ff}}f', b'v{CGRect={CGPoint=dd}{CGSize=dd}}d'),), 'NSEraseRect': (sel32or64(b'v{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'v{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSRectFillListWithColors': (sel32or64(b'v^{_NSRect={_NSPoint=ff}{_NSSize=ff}}^@i', b'v^{CGRect={CGPoint=dd}{CGSize=dd}}^@q'), '', {'arguments': {0: {'c_array_length_in_arg': 2, 'type_modifier': 'n'}, 1: {'c_array_length_in_arg': 2, 'type_modifier': 'n'}}}), 'NSBestDepth': (sel32or64(b'i@iiZ^Z', b'i@qqZ^Z'), '', {'arguments': {4: {'type_modifier': 'o'}}}), 'NSColorSpaceFromDepth': (b'@i',), 'NSBeep': (b'v',), 'NSBitsPerPixelFromDepth': (sel32or64(b'ii', b'qi'),), 'NSAccessibilityUnignoredChildrenForOnlyChild': (b'@@',), 'NSDrawGrayBezel': (sel32or64(b'v{_NSRect={_NSPoint=ff}{_NSSize=ff}}{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'v{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSRectFillList': (sel32or64(b'v^{_NSRect={_NSPoint=ff}{_NSSize=ff}}i', b'v^{CGRect={CGPoint=dd}{CGSize=dd}}q'), '', {'arguments': {0: {'c_array_length_in_arg': 1, 'type_modifier': 'n'}}}), 'NSRunAlertPanel': (sel32or64(b'i@@@@@', b'q@@@@@'), '', {'arguments': {1: {'printf_format': 1}}, 'variadic': True}), 'NSGetInformationalAlertPanel': (b'@@@@@@', '', {'arguments': {1: {'printf_format': True}}, 'variadic': True}), 'NSRectFillListWithGrays': (sel32or64(b'v^{_NSRect={_NSPoint=ff}{_NSSize=ff}}^fi', b'v^{CGRect={CGPoint=dd}{CGSize=dd}}^dq'), '', {'arguments': {0: {'c_array_length_in_arg': 2, 'type_modifier': 'n'}, 1: {'c_array_length_in_arg': 2, 'type_modifier': 'n'}}}), 'NSRunInformationalAlertPanel': (sel32or64(b'i@@@@@', b'q@@@@@'), '', {'arguments': {1: {'printf_format': 1}}, 'variadic': True}), 'NSRegisterServicesProvider': (b'v@@',)}
aliases = {'NSTornOffMenuWindowLevel': 'kCGTornOffMenuWindowLevel', 'NSDockWindowLevel': 'kCGDockWindowLevel', 'NSStatusWindowLevel': 'kCGStatusWindowLevel', 'APPKIT_PRIVATE_EXTERN': '__private_extern__', 'NSImageRepRegistryChangedNotification': 'NSImageRepRegistryDidChangeNotification', 'NSDragOperationAll': 'NSDragOperationAll_Obsolete', 'IBAction': 'void', 'NSPopUpMenuWindowLevel': 'kCGPopUpMenuWindowLevel', 'NSSubmenuWindowLevel': 'kCGTornOffMenuWindowLevel', 'NSScreenSaverWindowLevel': 'kCGScreenSaverWindowLevel', 'NSModalPanelWindowLevel': 'kCGModalPanelWindowLevel', 'NSNormalWindowLevel': 'kCGNormalWindowLevel', 'NSMainMenuWindowLevel': 'kCGMainMenuWindowLevel', 'NSDraggingItemEnumerationConcurrent': 'NSEnumerationConcurrent', 'NSFloatingWindowLevel': 'kCGFloatingWindowLevel'}
misc.update({'NSModalSession': objc.createOpaquePointerType('NSModalSession', '^{_NSModalSession}')})
r = objc.registerMetaDataForSelector
objc._updatingMetadata(True)
try:
    r('CIImage', b'drawAtPoint:fromRect:operation:fraction:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('CIImage', b'drawInRect:fromRect:operation:fraction:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSATSTypesetter', b'bidiProcessingEnabled', {'retval': {'type': 'Z'}})
    r('NSATSTypesetter', b'boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSATSTypesetter', b'characterRangeForGlyphRange:actualGlyphRange:', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type_modifier': b'o'}}})
    r('NSATSTypesetter', b'deleteGlyphsInRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSATSTypesetter', b'getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type_modifier': b'o', 'c_array_length_in_arg': 2}, 4: {'type_modifier': b'o', 'c_array_length_in_arg': 2}, 5: {'type_modifier': b'o', 'c_array_length_in_arg': 2}, 6: {'type': '^Z', 'type_modifier': b'o', 'c_array_length_in_arg': 2}}})
    r('NSATSTypesetter', b'getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:', {'retval': {'type': 'v'}, 'arguments': {2: {'type_modifier': b'o'}, 3: {'type_modifier': b'o'}, 4: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 5: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSATSTypesetter', b'glyphRangeForCharacterRange:actualCharacterRange:', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type_modifier': b'o'}}})
    r('NSATSTypesetter', b'layoutParagraphAtPoint:', {'arguments': {2: {'type_modifier': b'N'}}})
    r('NSATSTypesetter', b'lineFragmentRectForProposedRect:remainingRect:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type_modifier': b'o'}}})
    r('NSATSTypesetter', b'lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:', {'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSATSTypesetter', b'paragraphGlyphRange', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSATSTypesetter', b'paragraphSeparatorGlyphRange', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSATSTypesetter', b'paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:', {'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSATSTypesetter', b'paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:', {'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSATSTypesetter', b'setAttachmentSize:forGlyphRange:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSATSTypesetter', b'setBidiLevels:forGlyphRange:', {'arguments': {2: {'type': '^z', 'type_modifier': b'n', 'c_array_length_in_arg': 3}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSATSTypesetter', b'setBidiProcessingEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSATSTypesetter', b'setDrawsOutsideLineFragment:forGlyphRange:', {'arguments': {2: {'type': 'Z'}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSATSTypesetter', b'setHardInvalidation:forGlyphRange:', {'arguments': {2: {'type': 'Z'}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSATSTypesetter', b'setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type': sel32or64(u'f', u'd')}}})
    r('NSATSTypesetter', b'setLocation:withAdvancements:forStartOfGlyphRange:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 3: {'type_modifier': b'n', 'c_array_length_in_arg': 4}, 4: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSATSTypesetter', b'setNotShownAttribute:forGlyphRange:', {'arguments': {2: {'type': 'Z'}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSATSTypesetter', b'setParagraphGlyphRange:separatorGlyphRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSATSTypesetter', b'setUsesFontLeading:', {'arguments': {2: {'type': 'Z'}}})
    r('NSATSTypesetter', b'shouldBreakLineByHyphenatingBeforeCharacterAtIndex:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'I', u'Q')}}})
    r('NSATSTypesetter', b'shouldBreakLineByWordBeforeCharacterAtIndex:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'I', u'Q')}}})
    r('NSATSTypesetter', b'substituteGlyphsInRange:withGlyphs:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type_modifier': b'n', 'c_array_length_in_arg': 2}}})
    r('NSATSTypesetter', b'usesFontLeading', {'retval': {'type': 'Z'}})
    r('NSATSTypesetter', b'willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:', {'arguments': {2: {'type': sel32or64(u'^{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'N'}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 4: {'type': sel32or64(u'^{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'N'}, 5: {'type': sel32or64(u'^f', u'^d'), 'type_modifier': b'N'}}})
    r('NSActionCell', b'setAction:', {'retval': {'type': 'v'}, 'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSActionCell', b'setBezeled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSActionCell', b'setBordered:', {'arguments': {2: {'type': 'Z'}}})
    r('NSActionCell', b'setEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSActionCell', b'setFloatingPointFormat:left:right:', {'arguments': {2: {'type': 'Z'}}})
    r('NSAlert', b'alertWithMessageText:defaultButton:alternateButton:otherButton:informativeTextWithFormat:', {'arguments': {6: {'printf_format': True, 'type': '@'}}, 'variadic': True})
    r('NSAlert', b'beginSheetModalForWindow:modalDelegate:didEndSelector:contextInfo:', {'arguments': {4: {'sel_of_type': sel32or64(b'v@:@i^v', b'v@:@q^v')}, 5: {'type': '^v'}}})
    r('NSAlert', b'setShowsHelp:', {'arguments': {2: {'type': 'Z'}}})
    r('NSAlert', b'setShowsSuppressionButton:', {'arguments': {2: {'type': 'Z'}}})
    r('NSAlert', b'showsHelp', {'retval': {'type': 'Z'}})
    r('NSAlert', b'showsSuppressionButton', {'retval': {'type': 'Z'}})
    r('NSAnimation', b'isAnimating', {'retval': {'type': 'Z'}})
    r('NSAnimationContext', b'completionHandler', {'retval': {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^v'}}}}})
    r('NSAnimationContext', b'setCompletionHandler:', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^v'}}}}}})
    r('NSApplication', b'activateIgnoringOtherApps:', {'arguments': {2: {'type': 'Z'}}})
    r('NSApplication', b'addWindowsItem:title:filename:', {'arguments': {4: {'type': 'Z'}}})
    r('NSApplication', b'beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo:', {'arguments': {5: {'sel_of_type': sel32or64(b'v@:@i^v', b'v@:@q^v')}, 6: {'type': '^v'}}})
    r('NSApplication', b'changeWindowsItem:title:filename:', {'arguments': {4: {'type': 'Z'}}})
    r('NSApplication', b'detachDrawingThread:toTarget:withObject:', {'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSApplication', b'isActive', {'retval': {'type': 'Z'}})
    r('NSApplication', b'isFullKeyboardAccessEnabled', {'retval': {'type': 'Z'}})
    r('NSApplication', b'isHidden', {'retval': {'type': 'Z'}})
    r('NSApplication', b'isRunning', {'retval': {'type': 'Z'}})
    r('NSApplication', b'makeWindowsPerform:inOrder:', {'arguments': {2: {'sel_of_type': b'v@:'}, 3: {'type': 'Z'}}})
    r('NSApplication', b'nextEventMatchingMask:untilDate:inMode:dequeue:', {'arguments': {5: {'type': 'Z'}}})
    r('NSApplication', b'postEvent:atStart:', {'arguments': {3: {'type': 'Z'}}})
    r('NSApplication', b'replyToApplicationShouldTerminate:', {'arguments': {2: {'type': 'Z'}}})
    r('NSApplication', b'restoreWindowWithIdentifier:state:completionHandler:', {'retval': {'type': b'Z'}})
    r('NSApplication', b'searchString:inUserInterfaceItemString:searchRange:foundRange:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 5: {'type': sel32or64(u'^{_NSRange=II}', u'^{_NSRange=QQ}'), 'type_modifier': b'o'}}})
    r('NSApplication', b'sendAction:to:from:', {'retval': {'type': 'Z'}, 'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSApplication', b'setActivationPolicy:', {'retval': {'type': 'Z'}})
    r('NSApplication', b'setWindowsNeedUpdate:', {'arguments': {2: {'type': 'Z'}}})
    r('NSApplication', b'targetForAction:', {'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSApplication', b'targetForAction:to:from:', {'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSApplication', b'tryToPerform:with:', {'retval': {'type': 'Z'}, 'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSArrayController', b'addSelectedObjects:', {'retval': {'type': 'Z'}})
    r('NSArrayController', b'addSelectionIndexes:', {'retval': {'type': 'Z'}})
    r('NSArrayController', b'alwaysUsesMultipleValuesMarker', {'retval': {'type': 'Z'}})
    r('NSArrayController', b'automaticallyRearrangesObjects', {'retval': {'type': 'Z'}})
    r('NSArrayController', b'avoidsEmptySelection', {'retval': {'type': 'Z'}})
    r('NSArrayController', b'canInsert', {'retval': {'type': 'Z'}})
    r('NSArrayController', b'canSelectNext', {'retval': {'type': 'Z'}})
    r('NSArrayController', b'canSelectPrevious', {'retval': {'type': 'Z'}})
    r('NSArrayController', b'clearsFilterPredicateOnInsertion', {'retval': {'type': 'Z'}})
    r('NSArrayController', b'preservesSelection', {'retval': {'type': 'Z'}})
    r('NSArrayController', b'removeSelectedObjects:', {'retval': {'type': 'Z'}})
    r('NSArrayController', b'removeSelectionIndexes:', {'retval': {'type': 'Z'}})
    r('NSArrayController', b'selectsInsertedObjects', {'retval': {'type': 'Z'}})
    r('NSArrayController', b'setAlwaysUsesMultipleValuesMarker:', {'arguments': {2: {'type': 'Z'}}})
    r('NSArrayController', b'setAutomaticallyRearrangesObjects:', {'arguments': {2: {'type': 'Z'}}})
    r('NSArrayController', b'setAvoidsEmptySelection:', {'arguments': {2: {'type': 'Z'}}})
    r('NSArrayController', b'setClearsFilterPredicateOnInsertion:', {'arguments': {2: {'type': 'Z'}}})
    r('NSArrayController', b'setPreservesSelection:', {'arguments': {2: {'type': 'Z'}}})
    r('NSArrayController', b'setSelectedObjects:', {'retval': {'type': 'Z'}})
    r('NSArrayController', b'setSelectionIndex:', {'retval': {'type': 'Z'}})
    r('NSArrayController', b'setSelectionIndexes:', {'retval': {'type': 'Z'}})
    r('NSArrayController', b'setSelectsInsertedObjects:', {'arguments': {2: {'type': 'Z'}}})
    r('NSAttributedString', b'RTFDFileWrapperFromRange:documentAttributes:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSAttributedString', b'RTFDFromRange:documentAttributes:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSAttributedString', b'RTFFromRange:documentAttributes:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSAttributedString', b'URLAtIndex:effectiveRange:', {'arguments': {3: {'type': sel32or64(u'^{_NSRange=II}', u'^{_NSRange=QQ}'), 'type_modifier': b'o'}}})
    r('NSAttributedString', b'boundingRectWithSize:options:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSAttributedString', b'containsAttachments', {'retval': {'type': 'Z'}})
    r('NSAttributedString', b'dataFromRange:documentAttributes:error:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 4: {'type_modifier': b'o'}}})
    r('NSAttributedString', b'docFormatFromRange:documentAttributes:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSAttributedString', b'doubleClickAtIndex:', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSAttributedString', b'drawAtPoint:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSAttributedString', b'drawInRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSAttributedString', b'drawWithRect:options:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSAttributedString', b'fileWrapperFromRange:documentAttributes:error:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 4: {'type_modifier': b'o'}}})
    r('NSAttributedString', b'fontAttributesInRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSAttributedString', b'initWithData:options:documentAttributes:error:', {'arguments': {4: {'type_modifier': b'o'}, 5: {'type_modifier': b'o'}}})
    r('NSAttributedString', b'initWithDocFormat:documentAttributes:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSAttributedString', b'initWithHTML:baseURL:documentAttributes:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSAttributedString', b'initWithHTML:documentAttributes:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSAttributedString', b'initWithHTML:options:documentAttributes:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSAttributedString', b'initWithPath:documentAttributes:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSAttributedString', b'initWithRTF:documentAttributes:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSAttributedString', b'initWithRTFD:documentAttributes:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSAttributedString', b'initWithRTFDFileWrapper:documentAttributes:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSAttributedString', b'initWithURL:documentAttributes:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSAttributedString', b'initWithURL:options:documentAttributes:error:', {'arguments': {4: {'type_modifier': b'o'}, 5: {'type_modifier': b'o'}}})
    r('NSAttributedString', b'lineBreakBeforeIndex:withinRange:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSAttributedString', b'lineBreakByHyphenatingBeforeIndex:withinRange:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSAttributedString', b'nextWordFromIndex:forward:', {'arguments': {3: {'type': 'Z'}}})
    r('NSAttributedString', b'rangeOfTextBlock:atIndex:', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSAttributedString', b'rangeOfTextList:atIndex:', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSAttributedString', b'rangeOfTextTable:atIndex:', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSAttributedString', b'rulerAttributesInRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSAttributedString', b'size', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSBezierPath', b'appendBezierPathWithArcFromPoint:toPoint:radius:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSBezierPath', b'appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSBezierPath', b'appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:clockwise:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 6: {'type': 'Z'}}})
    r('NSBezierPath', b'appendBezierPathWithGlyphs:count:inFont:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSBezierPath', b'appendBezierPathWithOvalInRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSBezierPath', b'appendBezierPathWithPackedGlyphs:', {'arguments': {2: {'c_array_delimited_by_null': True, 'type': '^v', 'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSBezierPath', b'appendBezierPathWithPoints:count:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSBezierPath', b'appendBezierPathWithRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSBezierPath', b'appendBezierPathWithRoundedRect:xRadius:yRadius:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSBezierPath', b'bezierPathWithOvalInRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSBezierPath', b'bezierPathWithRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSBezierPath', b'bezierPathWithRoundedRect:xRadius:yRadius:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSBezierPath', b'bounds', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSBezierPath', b'cachesBezierPath', {'retval': {'type': 'Z'}})
    r('NSBezierPath', b'clipRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSBezierPath', b'containsPoint:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSBezierPath', b'controlPointBounds', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSBezierPath', b'currentPoint', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}})
    r('NSBezierPath', b'curveToPoint:controlPoint1:controlPoint2:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 4: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSBezierPath', b'drawPackedGlyphs:atPoint:', {'arguments': {2: {'c_array_delimited_by_null': True, 'type': '^v', 'type_modifier': b'n'}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSBezierPath', b'elementAtIndex:associatedPoints:', {'arguments': {3: {'type_modifier': b'o', 'c_array_of_variable_length': True}}})
    r('NSBezierPath', b'fillRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSBezierPath', b'getLineDash:count:phase:', {'arguments': {2: {'type_modifier': b'o', 'c_array_length_in_arg': 3}, 3: {'type_modifier': b'N'}, 4: {'type_modifier': b'o'}}})
    r('NSBezierPath', b'isEmpty', {'retval': {'type': 'Z'}})
    r('NSBezierPath', b'lineToPoint:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSBezierPath', b'moveToPoint:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSBezierPath', b'relativeCurveToPoint:controlPoint1:controlPoint2:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 4: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSBezierPath', b'relativeLineToPoint:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSBezierPath', b'relativeMoveToPoint:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSBezierPath', b'setAssociatedPoints:atIndex:', {'arguments': {2: {'c_array_of_variable_length': True}, 3: {'type': sel32or64(u'i', u'q')}}})
    r('NSBezierPath', b'setCachesBezierPath:', {'arguments': {2: {'type': 'Z'}}})
    r('NSBezierPath', b'setLineDash:count:phase:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSBezierPath', b'strokeLineFromPoint:toPoint:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSBezierPath', b'strokeRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSBitmapImageRep', b'CGImage', {'retval': {'type': '^{CGImage=}'}})
    r('NSBitmapImageRep', b'bitmapData', {'retval': {'type': '^v', 'c_array_of_variable_length': True}})
    r('NSBitmapImageRep', b'canBeCompressedUsing:', {'retval': {'type': 'Z'}})
    r('NSBitmapImageRep', b'getBitmapDataPlanes:', {'arguments': {2: {'type': '^*', 'c_array_of_variable_length': True}}})
    r('NSBitmapImageRep', b'getCompression:factor:', {'arguments': {2: {'type_modifier': b'o'}, 3: {'type_modifier': b'o'}}})
    r('NSBitmapImageRep', b'getPixel:atX:y:', {'arguments': {2: {'type_modifier': b'o', 'c_array_of_variable_length': True}}})
    r('NSBitmapImageRep', b'getTIFFCompressionTypes:count:', {'arguments': {2: {'type': sel32or64(u'^^I', u'^^Q'), 'type_modifier': b'o', 'c_array_length_in_arg': 3}, 3: {'type': sel32or64(u'^i', u'^q'), 'type_modifier': b'o', 'c_array_length_in_arg': 3}}})
    r('NSBitmapImageRep', b'incrementalLoadFromData:complete:', {'arguments': {3: {'type': 'Z'}}})
    r('NSBitmapImageRep', b'initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bitmapFormat:bytesPerRow:bitsPerPixel:', {'arguments': {2: {'type': '^*'}, 7: {'type': b'Z'}, 8: {'type': b'Z'}}})
    r('NSBitmapImageRep', b'initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bytesPerRow:bitsPerPixel:', {'arguments': {2: {'type': '^*'}, 7: {'type': b'Z'}, 8: {'type': b'Z'}}})
    r('NSBitmapImageRep', b'initWithCGImage:', {'arguments': {2: {'type': '^{CGImage=}'}}})
    r('NSBitmapImageRep', b'initWithFocusedViewRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSBitmapImageRep', b'isPlanar', {'retval': {'type': 'Z'}})
    r('NSBitmapImageRep', b'setPixel:atX:y:', {'arguments': {2: {'type': sel32or64(u'^I', u'^Q'), 'type_modifier': b'n', 'c_array_of_variable_length': True}}})
    r('NSBox', b'borderRect', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSBox', b'contentViewMargins', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSBox', b'isTransparent', {'retval': {'type': 'Z'}})
    r('NSBox', b'setContentViewMargins:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSBox', b'setFrameFromContentFrame:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSBox', b'setTransparent:', {'arguments': {2: {'type': 'Z'}}})
    r('NSBox', b'titleRect', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSBrowser', b'acceptsArrowKeys', {'retval': {'type': 'Z'}})
    r('NSBrowser', b'allowsBranchSelection', {'retval': {'type': 'Z'}})
    r('NSBrowser', b'allowsEmptySelection', {'retval': {'type': 'Z'}})
    r('NSBrowser', b'allowsMultipleSelection', {'retval': {'type': 'Z'}})
    r('NSBrowser', b'allowsTypeSelect', {'retval': {'type': 'Z'}})
    r('NSBrowser', b'autohidesScroller', {'retval': {'type': 'Z'}})
    r('NSBrowser', b'canDragRowsWithIndexes:inColumn:withEvent:', {'retval': {'type': 'Z'}})
    r('NSBrowser', b'draggingImageForRowsWithIndexes:inColumn:withEvent:offset:', {'arguments': {5: {'type_modifier': b'N'}}})
    r('NSBrowser', b'drawTitleOfColumn:inRect:', {'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSBrowser', b'editItemAtIndexPath:withEvent:select:', {'arguments': {4: {'type': 'Z'}}})
    r('NSBrowser', b'frameOfColumn:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSBrowser', b'frameOfInsideOfColumn:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSBrowser', b'getRow:column:forPoint:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type_modifier': b'o'}, 3: {'type_modifier': b'o'}}})
    r('NSBrowser', b'hasHorizontalScroller', {'retval': {'type': 'Z'}})
    r('NSBrowser', b'isLeafItem:', {'retval': {'type': 'Z'}})
    r('NSBrowser', b'isLoaded', {'retval': {'type': 'Z'}})
    r('NSBrowser', b'isTitled', {'retval': {'type': 'Z'}})
    r('NSBrowser', b'prefersAllColumnUserResizing', {'retval': {'type': 'Z'}})
    r('NSBrowser', b'reusesColumns', {'retval': {'type': 'Z'}})
    r('NSBrowser', b'sendAction', {'retval': {'type': 'Z'}})
    r('NSBrowser', b'sendsActionOnArrowKeys', {'retval': {'type': 'Z'}})
    r('NSBrowser', b'separatesColumns', {'retval': {'type': 'Z'}})
    r('NSBrowser', b'setAcceptsArrowKeys:', {'arguments': {2: {'type': 'Z'}}})
    r('NSBrowser', b'setAllowsBranchSelection:', {'arguments': {2: {'type': 'Z'}}})
    r('NSBrowser', b'setAllowsEmptySelection:', {'arguments': {2: {'type': 'Z'}}})
    r('NSBrowser', b'setAllowsMultipleSelection:', {'retval': {'type': 'v'}, 'arguments': {2: {'type': 'Z'}}})
    r('NSBrowser', b'setAllowsTypeSelect:', {'retval': {'type': 'v'}, 'arguments': {2: {'type': 'Z'}}})
    r('NSBrowser', b'setAutohidesScroller:', {'arguments': {2: {'type': 'Z'}}})
    r('NSBrowser', b'setDoubleAction:', {'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSBrowser', b'setDraggingSourceOperationMask:forLocal:', {'arguments': {3: {'type': 'Z'}}})
    r('NSBrowser', b'setHasHorizontalScroller:', {'arguments': {2: {'type': 'Z'}}})
    r('NSBrowser', b'setPath:', {'retval': {'type': 'Z'}})
    r('NSBrowser', b'setPrefersAllColumnUserResizing:', {'arguments': {2: {'type': 'Z'}}})
    r('NSBrowser', b'setReusesColumns:', {'arguments': {2: {'type': 'Z'}}})
    r('NSBrowser', b'setSendsActionOnArrowKeys:', {'arguments': {2: {'type': 'Z'}}})
    r('NSBrowser', b'setSeparatesColumns:', {'arguments': {2: {'type': 'Z'}}})
    r('NSBrowser', b'setTakesTitleFromPreviousColumn:', {'arguments': {2: {'type': 'Z'}}})
    r('NSBrowser', b'setTitled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSBrowser', b'takesTitleFromPreviousColumn', {'retval': {'type': 'Z'}})
    r('NSBrowser', b'titleFrameOfColumn:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSBrowserCell', b'isLeaf', {'retval': {'type': 'Z'}})
    r('NSBrowserCell', b'isLoaded', {'retval': {'type': 'Z'}})
    r('NSBrowserCell', b'setLeaf:', {'retval': {'type': 'v'}, 'arguments': {2: {'type': 'Z'}}})
    r('NSBrowserCell', b'setLoaded:', {'retval': {'type': 'v'}, 'arguments': {2: {'type': 'Z'}}})
    r('NSBundle', b'loadNibFile:externalNameTable:withZone:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type': '^{_NSZone=}'}}})
    r('NSBundle', b'loadNibFile:externalNameTable:withZone:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type': '^{_NSZone=}'}}})
    r('NSBundle', b'loadNibNamed:owner:', {'retval': {'type': 'Z'}})
    r('NSButton', b'allowsMixedState', {'retval': {'type': 'Z'}})
    r('NSButton', b'getPeriodicDelay:interval:', {'arguments': {2: {'type_modifier': b'o'}, 3: {'type_modifier': b'o'}}})
    r('NSButton', b'highlight:', {'arguments': {2: {'type': 'Z'}}})
    r('NSButton', b'isBordered', {'retval': {'type': 'Z'}})
    r('NSButton', b'isTransparent', {'retval': {'type': 'Z'}})
    r('NSButton', b'performKeyEquivalent:', {'retval': {'type': 'Z'}})
    r('NSButton', b'setAllowsMixedState:', {'arguments': {2: {'type': 'Z'}}})
    r('NSButton', b'setBordered:', {'arguments': {2: {'type': 'Z'}}})
    r('NSButton', b'setShowsBorderOnlyWhileMouseInside:', {'arguments': {2: {'type': 'Z'}}})
    r('NSButton', b'setTransparent:', {'arguments': {2: {'type': 'Z'}}})
    r('NSButton', b'showsBorderOnlyWhileMouseInside', {'retval': {'type': 'Z'}})
    r('NSButtonCell', b'drawBezelWithFrame:inView:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSButtonCell', b'drawImage:withFrame:inView:', {'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSButtonCell', b'drawTitle:withFrame:inView:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSButtonCell', b'getPeriodicDelay:interval:', {'arguments': {2: {'type_modifier': b'o'}, 3: {'type_modifier': b'o'}}})
    r('NSButtonCell', b'imageDimsWhenDisabled', {'retval': {'type': 'Z'}})
    r('NSButtonCell', b'isOpaque', {'retval': {'type': 'Z'}})
    r('NSButtonCell', b'isTransparent', {'retval': {'type': 'Z'}})
    r('NSButtonCell', b'setImageDimsWhenDisabled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSButtonCell', b'setShowsBorderOnlyWhileMouseInside:', {'arguments': {2: {'type': 'Z'}}})
    r('NSButtonCell', b'setTransparent:', {'arguments': {2: {'type': 'Z'}}})
    r('NSButtonCell', b'showsBorderOnlyWhileMouseInside', {'retval': {'type': 'Z'}})
    r('NSCachedImageRep', b'initWithSize:depth:separate:alpha:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}, 4: {'type': 'Z'}, 5: {'type': 'Z'}}})
    r('NSCachedImageRep', b'initWithWindow:rect:', {'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSCachedImageRep', b'rect', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSCell', b'acceptsFirstResponder', {'retval': {'type': 'Z'}})
    r('NSCell', b'action', {'retval': {'type': ':', 'sel_of_type': b'v@:@'}})
    r('NSCell', b'allowsEditingTextAttributes', {'retval': {'type': 'Z'}})
    r('NSCell', b'allowsMixedState', {'retval': {'type': 'Z'}})
    r('NSCell', b'allowsUndo', {'retval': {'type': 'Z'}})
    r('NSCell', b'calcDrawInfo:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSCell', b'cellSize', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSCell', b'cellSizeForBounds:', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSCell', b'continueTracking:at:inView:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSCell', b'drawInteriorWithFrame:inView:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSCell', b'drawWithExpansionFrame:inView:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSCell', b'drawWithFrame:inView:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSCell', b'drawingRectForBounds:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSCell', b'editWithFrame:inView:editor:delegate:event:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSCell', b'expansionFrameWithFrame:inView:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSCell', b'getPeriodicDelay:interval:', {'arguments': {2: {'type_modifier': b'o'}, 3: {'type_modifier': b'o'}}})
    r('NSCell', b'hasValidObjectValue', {'retval': {'type': 'Z'}})
    r('NSCell', b'highlight:withFrame:inView:', {'arguments': {2: {'type': 'Z'}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSCell', b'highlightColorWithFrame:inView:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSCell', b'hitTestForEvent:inRect:ofView:', {'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSCell', b'imageRectForBounds:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSCell', b'importsGraphics', {'retval': {'type': 'Z'}})
    r('NSCell', b'isBezeled', {'retval': {'type': 'Z'}})
    r('NSCell', b'isBordered', {'retval': {'type': 'Z'}})
    r('NSCell', b'isContinuous', {'retval': {'type': 'Z'}})
    r('NSCell', b'isEditable', {'retval': {'type': 'Z'}})
    r('NSCell', b'isEnabled', {'retval': {'type': 'Z'}})
    r('NSCell', b'isEntryAcceptable:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': '@'}}})
    r('NSCell', b'isHighlighted', {'retval': {'type': 'Z'}})
    r('NSCell', b'isOpaque', {'retval': {'type': 'Z'}})
    r('NSCell', b'isScrollable', {'retval': {'type': 'Z'}})
    r('NSCell', b'isSelectable', {'retval': {'type': 'Z'}})
    r('NSCell', b'menuForEvent:inRect:ofView:', {'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSCell', b'prefersTrackingUntilMouseUp', {'retval': {'type': 'Z'}})
    r('NSCell', b'refusesFirstResponder', {'retval': {'type': 'Z'}})
    r('NSCell', b'resetCursorRect:inView:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSCell', b'selectWithFrame:inView:editor:delegate:start:length:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSCell', b'sendsActionOnEndEditing', {'retval': {'type': 'Z'}})
    r('NSCell', b'setAction:', {'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSCell', b'setAllowsEditingTextAttributes:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCell', b'setAllowsMixedState:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCell', b'setAllowsUndo:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCell', b'setAttributedStringValue:', {'retval': {'type': 'v'}, 'arguments': {2: {'type': '@'}}})
    r('NSCell', b'setBezeled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCell', b'setBordered:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCell', b'setContinuous:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCell', b'setEditable:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCell', b'setEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCell', b'setFloatingPointFormat:left:right:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCell', b'setHighlighted:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCell', b'setImportsGraphics:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCell', b'setRefusesFirstResponder:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCell', b'setScrollable:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCell', b'setSelectable:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCell', b'setSendsActionOnEndEditing:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCell', b'setShowsFirstResponder:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCell', b'setTruncatesLastVisibleLine:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCell', b'setUsesSingleLineMode:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCell', b'setWraps:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCell', b'showsFirstResponder', {'retval': {'type': 'Z'}})
    r('NSCell', b'startTrackingAt:inView:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSCell', b'stopTracking:at:inView:mouseIsUp:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 5: {'type': 'Z'}}})
    r('NSCell', b'titleRectForBounds:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSCell', b'trackMouse:inRect:ofView:untilMouseUp:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type': 'Z'}}})
    r('NSCell', b'truncatesLastVisibleLine', {'retval': {'type': 'Z'}})
    r('NSCell', b'usesSingleLineMode', {'retval': {'type': 'Z'}})
    r('NSCell', b'wantsNotificationForMarkedText', {'retval': {'type': 'Z'}})
    r('NSCell', b'wraps', {'retval': {'type': 'Z'}})
    r('NSClipView', b'autoscroll:', {'retval': {'type': 'Z'}})
    r('NSClipView', b'copiesOnScroll', {'retval': {'type': 'Z'}})
    r('NSClipView', b'documentRect', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSClipView', b'documentVisibleRect', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSClipView', b'drawsBackground', {'retval': {'type': 'Z'}})
    r('NSClipView', b'onstrainScrollPoint:', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSClipView', b'scrollToPoint:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSClipView', b'setCopiesOnScroll:', {'arguments': {2: {'type': 'Z'}}})
    r('NSClipView', b'setDrawsBackground:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCollectionView', b'allowsMultipleSelection', {'retval': {'type': 'Z'}})
    r('NSCollectionView', b'draggingImageForItemsAtIndexes:withEvent:offset:', {'arguments': {4: {'type_modifier': b'N'}}})
    r('NSCollectionView', b'frameForItemAtIndex:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSCollectionView', b'isFirstResponder', {'retval': {'type': 'Z'}})
    r('NSCollectionView', b'isSelectable', {'retval': {'type': 'Z'}})
    r('NSCollectionView', b'maxItemSize', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSCollectionView', b'minItemSize', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSCollectionView', b'setAllowsMultipleSelection:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCollectionView', b'setDraggingSourceOperationMask:forLocal:', {'arguments': {3: {'type': 'Z'}}})
    r('NSCollectionView', b'setMaxItemSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSCollectionView', b'setMinItemSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSCollectionView', b'setSelectable:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCollectionViewItem', b'isSelected', {'retval': {'type': 'Z'}})
    r('NSCollectionViewItem', b'setSelected:', {'arguments': {2: {'type': 'Z'}}})
    r('NSColor', b'colorWithColorSpace:components:count:', {'arguments': {3: {'type_modifier': b'n', 'c_array_length_in_arg': 4}}})
    r('NSColor', b'drawSwatchInRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSColor', b'getComponents:', {'arguments': {2: {'type': sel32or64(u'^f', u'^d'), 'type_modifier': b'o', 'c_array_of_variable_length': True}}})
    r('NSColor', b'getCyan:magenta:yellow:black:alpha:', {'arguments': {2: {'type_modifier': b'o'}, 3: {'type_modifier': b'o'}, 4: {'type_modifier': b'o'}, 5: {'type_modifier': b'o'}, 6: {'type_modifier': b'o'}}})
    r('NSColor', b'getHue:saturation:brightness:alpha:', {'arguments': {2: {'type_modifier': b'o'}, 3: {'type_modifier': b'o'}, 4: {'type_modifier': b'o'}, 5: {'type_modifier': b'o'}}})
    r('NSColor', b'getRed:green:blue:alpha:', {'arguments': {2: {'type_modifier': b'o'}, 3: {'type_modifier': b'o'}, 4: {'type_modifier': b'o'}, 5: {'type_modifier': b'o'}}})
    r('NSColor', b'getWhite:alpha:', {'arguments': {2: {'type_modifier': b'o'}, 3: {'type_modifier': b'o'}}})
    r('NSColor', b'ignoresAlpha', {'retval': {'type': 'Z'}})
    r('NSColor', b'setIgnoresAlpha:', {'arguments': {2: {'type': 'Z'}}})
    r('NSColorList', b'isEditable', {'retval': {'type': 'Z'}})
    r('NSColorList', b'writeToFile:', {'retval': {'type': 'Z'}})
    r('NSColorPanel', b'dragColor:withEvent:fromView:', {'retval': {'type': 'Z'}})
    r('NSColorPanel', b'isContinuous', {'retval': {'type': 'Z'}})
    r('NSColorPanel', b'setAction:', {'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSColorPanel', b'setContinuous:', {'arguments': {2: {'type': 'Z'}}})
    r('NSColorPanel', b'setShowsAlpha:', {'arguments': {2: {'type': 'Z'}}})
    r('NSColorPanel', b'sharedColorPanelExists', {'retval': {'type': 'Z'}})
    r('NSColorPanel', b'showsAlpha', {'retval': {'type': 'Z'}})
    r('NSColorPicker', b'minContentSize', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSColorSpace', b'CGColorSpace', {'retval': {'type': '^{CGColorSpace=}'}})
    r('NSColorSpace', b'colorSyncProfile', {'retval': {'type': '^{OpaqueCMProfileRef=}'}})
    r('NSColorSpace', b'initWithCGColorSpace:', {'arguments': {2: {'type': '^{CGColorSpace=}'}}})
    r('NSColorSpace', b'initWithColorSyncProfile:', {'arguments': {2: {'type': '^{OpaqueCMProfileRef=}'}}})
    r('NSColorWell', b'activate:', {'arguments': {2: {'type': 'Z'}}})
    r('NSColorWell', b'drawWellInside:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSColorWell', b'isActive', {'retval': {'type': 'Z'}})
    r('NSColorWell', b'isBordered', {'retval': {'type': 'Z'}})
    r('NSColorWell', b'setBordered:', {'arguments': {2: {'type': 'Z'}}})
    r('NSComboBox', b'completes', {'retval': {'type': 'Z'}})
    r('NSComboBox', b'hasVerticalScroller', {'retval': {'type': 'Z'}})
    r('NSComboBox', b'intercellSpacing', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSComboBox', b'isButtonBordered', {'retval': {'type': 'Z'}})
    r('NSComboBox', b'setButtonBordered:', {'arguments': {2: {'type': 'Z'}}})
    r('NSComboBox', b'setCompletes:', {'arguments': {2: {'type': 'Z'}}})
    r('NSComboBox', b'setHasVerticalScroller:', {'arguments': {2: {'type': 'Z'}}})
    r('NSComboBox', b'setIntercellSpacing:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSComboBox', b'setUsesDataSource:', {'arguments': {2: {'type': 'Z'}}})
    r('NSComboBox', b'usesDataSource', {'retval': {'type': 'Z'}})
    r('NSComboBoxCell', b'completes', {'retval': {'type': 'Z'}})
    r('NSComboBoxCell', b'hasVerticalScroller', {'retval': {'type': 'Z'}})
    r('NSComboBoxCell', b'intercellSpacing', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSComboBoxCell', b'isButtonBordered', {'retval': {'type': 'Z'}})
    r('NSComboBoxCell', b'setButtonBordered:', {'arguments': {2: {'type': 'Z'}}})
    r('NSComboBoxCell', b'setCompletes:', {'arguments': {2: {'type': 'Z'}}})
    r('NSComboBoxCell', b'setHasVerticalScroller:', {'arguments': {2: {'type': 'Z'}}})
    r('NSComboBoxCell', b'setIntercellSpacing:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSComboBoxCell', b'setUsesDataSource:', {'arguments': {2: {'type': 'Z'}}})
    r('NSComboBoxCell', b'usesDataSource', {'retval': {'type': 'Z'}})
    r('NSControl', b'abortEditing', {'retval': {'type': 'Z'}})
    r('NSControl', b'action', {'retval': {'type': ':', 'sel_of_type': b'v@:@'}})
    r('NSControl', b'ignoresMultiClick', {'retval': {'type': 'Z'}})
    r('NSControl', b'initWithFrame:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSControl', b'isContinuous', {'retval': {'type': 'Z'}})
    r('NSControl', b'isEnabled', {'retval': {'type': 'Z'}})
    r('NSControl', b'refusesFirstResponder', {'retval': {'type': 'Z'}})
    r('NSControl', b'sendAction:to:', {'retval': {'type': 'Z'}, 'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSControl', b'setAction:', {'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSControl', b'setContinuous:', {'arguments': {2: {'type': 'Z'}}})
    r('NSControl', b'setEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSControl', b'setFloatingPointFormat:left:right:', {'arguments': {2: {'type': 'Z'}}})
    r('NSControl', b'setIgnoresMultiClick:', {'arguments': {2: {'type': 'Z'}}})
    r('NSControl', b'setRefusesFirstResponder:', {'arguments': {2: {'type': 'Z'}}})
    r('NSController', b'commitEditing', {'retval': {'type': 'Z'}})
    r('NSController', b'commitEditingWithDelegate:didCommitSelector:contextInfo:', {'arguments': {3: {'type': ':', 'sel_of_type': b'v@:@Z^v'}, 4: {'type': '^v'}}})
    r('NSController', b'isEditing', {'retval': {'type': 'Z'}})
    r('NSCursor', b'hotSpot', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}})
    r('NSCursor', b'initWithImage:foregroundColorHint:backgroundColorHint:hotSpot:', {'arguments': {5: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSCursor', b'initWithImage:hotSpot:', {'arguments': {3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSCursor', b'isSetOnMouseEntered', {'retval': {'type': 'Z'}})
    r('NSCursor', b'isSetOnMouseExited', {'retval': {'type': 'Z'}})
    r('NSCursor', b'setHiddenUntilMouseMoves:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCursor', b'setOnMouseEntered:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCursor', b'setOnMouseExited:', {'arguments': {2: {'type': 'Z'}}})
    r('NSCustomImageRep', b'initWithDrawSelector:delegate:', {'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSDatePicker', b'drawsBackground', {'retval': {'type': 'Z'}})
    r('NSDatePicker', b'isBezeled', {'retval': {'type': 'Z'}})
    r('NSDatePicker', b'isBordered', {'retval': {'type': 'Z'}})
    r('NSDatePicker', b'setBezeled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSDatePicker', b'setBordered:', {'arguments': {2: {'type': 'Z'}}})
    r('NSDatePicker', b'setDrawsBackground:', {'arguments': {2: {'type': 'Z'}}})
    r('NSDatePickerCell', b'drawsBackground', {'retval': {'type': 'Z'}})
    r('NSDatePickerCell', b'setDrawsBackground:', {'arguments': {2: {'type': 'Z'}}})
    r('NSDockTile', b'setShowsApplicationBadge:', {'arguments': {2: {'type': 'Z'}}})
    r('NSDockTile', b'showsApplicationBadge', {'retval': {'type': 'Z'}})
    r('NSDockTile', b'size', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSDocument', b'autosaveDocumentWithDelegate:didAutosaveSelector:contextInfo:', {'arguments': {3: {'sel_of_type': b'v@:@Z^v'}, 4: {'type': '^v'}}})
    r('NSDocument', b'autosaveWithImplicitCancellability:completionHandler:', {'arguments': {2: {'type': b'Z'}}})
    r('NSDocument', b'autosavesInPlace', {'retval': {'type': b'Z'}})
    r('NSDocument', b'autosavingIsImplicitlyCancellable', {'retval': {'type': b'Z'}})
    r('NSDocument', b'canAsynchronouslyWriteToURL:ofType:forSaveOperation:', {'retval': {'type': b'Z'}})
    r('NSDocument', b'canCloseDocumentWithDelegate:shouldCloseSelector:contextInfo:', {'arguments': {3: {'sel_of_type': b'v@:@Z^v'}, 4: {'type': '^v'}}})
    r('NSDocument', b'canConcurrentlyReadDocumentsOfType:', {'retval': {'type': b'Z'}})
    r('NSDocument', b'canConcurrentlyReadDocumentsOfType:', {'retval': {'type': 'Z'}})
    r('NSDocument', b'checkAutosavingSafetyAndReturnError:', {'retval': {'type': b'Z'}})
    r('NSDocument', b'dataOfType:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSDocument', b'fileAttributesToWriteToURL:ofType:forSaveOperation:originalContentsURL:error:', {'arguments': {6: {'type_modifier': b'o'}}})
    r('NSDocument', b'fileNameExtensionWasHiddenInLastRunSavePanel', {'retval': {'type': 'Z'}})
    r('NSDocument', b'fileWrapperOfType:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSDocument', b'hasUnautosavedChanges', {'retval': {'type': 'Z'}})
    r('NSDocument', b'hasUndoManager', {'retval': {'type': 'Z'}})
    r('NSDocument', b'initForURL:withContentsOfURL:ofType:error:', {'arguments': {5: {'type_modifier': b'o'}}})
    r('NSDocument', b'initWithContentsOfURL:ofType:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSDocument', b'initWithType:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSDocument', b'isDocumentEdited', {'retval': {'type': 'Z'}})
    r('NSDocument', b'isEntireFileLoaded', {'retval': {'type': b'Z'}})
    r('NSDocument', b'isInViewingMode', {'retval': {'type': b'Z'}})
    r('NSDocument', b'isNativeType:', {'retval': {'type': 'Z'}})
    r('NSDocument', b'keepBackupFile', {'retval': {'type': 'Z'}})
    r('NSDocument', b'loadDataRepresentation:ofType:', {'retval': {'type': 'Z'}})
    r('NSDocument', b'loadFileWrapperRepresentation:ofType:', {'retval': {'type': 'Z'}})
    r('NSDocument', b'performActivityWithSynchronousWaiting:usingBlock:', {'arguments': {2: {'type': b'Z'}}})
    r('NSDocument', b'preparePageLayout:', {'retval': {'type': 'Z'}})
    r('NSDocument', b'prepareSavePanel:', {'retval': {'type': 'Z'}})
    r('NSDocument', b'presentError:', {'retval': {'type': 'Z'}})
    r('NSDocument', b'presentError:modalForWindow:delegate:didPresentSelector:contextInfo:', {'arguments': {5: {'sel_of_type': b'v@:Z^v'}, 6: {'type': '^v'}}})
    r('NSDocument', b'preservesVersions', {'retval': {'type': b'Z'}})
    r('NSDocument', b'printDocumentWithSettings:showPrintPanel:delegate:didPrintSelector:contextInfo:', {'arguments': {3: {'type': 'Z'}, 5: {'sel_of_type': b'v@:@Z^v'}, 6: {'type': '^v'}}})
    r('NSDocument', b'printOperationWithSettings:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSDocument', b'printShowingPrintPanel:', {'arguments': {2: {'type': 'Z'}}})
    r('NSDocument', b'readFromData:ofType:error:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSDocument', b'readFromFile:ofType:', {'retval': {'type': 'Z'}})
    r('NSDocument', b'readFromFileWrapper:ofType:error:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSDocument', b'readFromURL:ofType:', {'retval': {'type': 'Z'}})
    r('NSDocument', b'readFromURL:ofType:error:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSDocument', b'revertToContentsOfURL:ofType:error:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSDocument', b'revertToSavedFromFile:ofType:', {'retval': {'type': 'Z'}})
    r('NSDocument', b'revertToSavedFromURL:ofType:', {'retval': {'type': 'Z'}})
    r('NSDocument', b'runModalPageLayoutWithPrintInfo:delegate:didRunSelector:contextInfo:', {'arguments': {4: {'sel_of_type': b'v@:@Z^v'}, 5: {'type': '^v'}}})
    r('NSDocument', b'runModalPrintOperation:delegate:didRunSelector:contextInfo:', {'arguments': {4: {'sel_of_type': b'v@:@Z^v'}, 5: {'type': '^v'}}})
    r('NSDocument', b'runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextInfo:', {'arguments': {4: {'sel_of_type': b'v@:@Z^v'}, 5: {'type': '^v'}}})
    r('NSDocument', b'saveDocumentWithDelegate:didSaveSelector:contextInfo:', {'arguments': {3: {'sel_of_type': b'v@:@Z^v'}, 4: {'type': '^v'}}})
    r('NSDocument', b'saveToFile:saveOperation:delegate:didSaveSelector:contextInfo:', {'arguments': {5: {'sel_of_type': b'v@:@Z^v'}, 6: {'type': '^v'}}})
    r('NSDocument', b'saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:', {'arguments': {6: {'sel_of_type': b'v@:@Z^v'}, 7: {'type': '^v'}}})
    r('NSDocument', b'saveToURL:ofType:forSaveOperation:error:', {'retval': {'type': 'Z'}, 'arguments': {5: {'type_modifier': b'o'}}})
    r('NSDocument', b'setHasUndoManager:', {'arguments': {2: {'type': 'Z'}}})
    r('NSDocument', b'shouldChangePrintInfo:', {'retval': {'type': 'Z'}})
    r('NSDocument', b'shouldCloseWindowController:delegate:shouldCloseSelector:contextInfo:', {'arguments': {4: {'sel_of_type': b'v@:@Z^v'}, 5: {'type': '^v'}}})
    r('NSDocument', b'shouldRunSavePanelWithAccessoryView', {'retval': {'type': 'Z'}})
    r('NSDocument', b'validateUserInterfaceItem:', {'retval': {'type': 'Z'}})
    r('NSDocument', b'writeSafelyToURL:ofType:forSaveOperation:error:', {'retval': {'type': 'Z'}, 'arguments': {5: {'type_modifier': b'o'}}})
    r('NSDocument', b'writeToFile:ofType:', {'retval': {'type': 'Z'}})
    r('NSDocument', b'writeToFile:ofType:originalFile:saveOperation:', {'retval': {'type': 'Z'}})
    r('NSDocument', b'writeToURL:ofType:', {'retval': {'type': 'Z'}})
    r('NSDocument', b'writeToURL:ofType:error:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSDocument', b'writeToURL:ofType:forSaveOperation:originalContentsURL:error:', {'retval': {'type': 'Z'}, 'arguments': {6: {'type_modifier': b'o'}}})
    r('NSDocument', b'writeWithBackupToFile:ofType:saveOperation:', {'retval': {'type': 'Z'}})
    r('NSDocumentController', b'closeAllDocumentsWithDelegate:didCloseAllSelector:contextInfo:', {'arguments': {3: {'sel_of_type': b'v@:@Z^v'}, 4: {'type': '^v'}}})
    r('NSDocumentController', b'duplicateDocumentWithContentsOfURL:copying:displayName:error:', {'arguments': {3: {'type': b'Z'}}})
    r('NSDocumentController', b'hasEditedDocuments', {'retval': {'type': 'Z'}})
    r('NSDocumentController', b'makeDocumentForURL:withContentsOfURL:ofType:error:', {'arguments': {5: {'type_modifier': b'o'}}})
    r('NSDocumentController', b'makeDocumentWithContentsOfURL:ofType:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSDocumentController', b'makeUntitledDocumentOfType:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSDocumentController', b'openDocumentWithContentsOfFile:display:', {'arguments': {3: {'type': 'Z'}}})
    r('NSDocumentController', b'openDocumentWithContentsOfURL:display:', {'arguments': {3: {'type': 'Z'}}})
    r('NSDocumentController', b'openDocumentWithContentsOfURL:display:completionHandler:', {'arguments': {3: {'type': b'Z'}}})
    r('NSDocumentController', b'openDocumentWithContentsOfURL:display:error:', {'arguments': {3: {'type': 'Z'}, 4: {'type_modifier': b'o'}}})
    r('NSDocumentController', b'openUntitledDocumentAndDisplay:error:', {'arguments': {2: {'type': 'Z'}, 3: {'type_modifier': b'o'}}})
    r('NSDocumentController', b'openUntitledDocumentOfType:display:', {'arguments': {3: {'type': 'Z'}}})
    r('NSDocumentController', b'presentError:', {'retval': {'type': 'Z'}})
    r('NSDocumentController', b'presentError:modalForWindow:delegate:didPresentSelector:contextInfo:', {'arguments': {5: {'sel_of_type': b'v@:Z^v'}, 6: {'type': '^v'}}})
    r('NSDocumentController', b'reopenDocumentForURL:withContentsOfURL:display:completionHandler:', {'arguments': {4: {'type': b'Z'}}})
    r('NSDocumentController', b'reopenDocumentForURL:withContentsOfURL:error:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSDocumentController', b'reviewUnsavedDocumentsWithAlertTitle:cancellable:delegate:didReviewAllSelector:contextInfo:', {'arguments': {3: {'type': 'Z'}, 5: {'sel_of_type': b'v@:@Z^v'}, 6: {'type': '^v'}}})
    r('NSDocumentController', b'setShouldCreateUI:', {'arguments': {2: {'type': 'Z'}}})
    r('NSDocumentController', b'shouldCreateUI', {'retval': {'type': 'Z'}})
    r('NSDocumentController', b'typeForContentsOfURL:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSDocumentController', b'validateUserInterfaceItem:', {'retval': {'type': 'Z'}})
    r('NSDraggingSession', b'animatesToStartingPositionsOnCancelOrFail', {'retval': {'type': b'Z'}})
    r('NSDraggingSession', b'setAnimatesToStartingPositionsOnCancelOrFail:', {'arguments': {2: {'type': b'Z'}}})
    r('NSDrawer', b'contentSize', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSDrawer', b'initWithContentSize:preferredEdge:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSDrawer', b'maxContentSize', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSDrawer', b'minContentSize', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSDrawer', b'setContentSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSDrawer', b'setMaxContentSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSDrawer', b'setMinContentSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSEPSImageRep', b'boundingBox', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSEvent', b'CGEvent', {'retval': {'type': '^{__CGEvent=}'}})
    r('NSEvent', b'addGlobalMonitorForEventsMatchingMask:handler:', {'arguments': {3: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^v'}, 1: {'type': b'@'}}}}}})
    r('NSEvent', b'addLocalMonitorForEventsMatchingMask:handler:', {'arguments': {3: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^v'}, 1: {'type': b'@'}}}}}})
    r('NSEvent', b'enterExitEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:trackingNumber:userData:', {'arguments': {3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 10: {'type': '^v'}}})
    r('NSEvent', b'eventRef', {'retval': {'type': 'r^{OpaqueEventRef=}'}})
    r('NSEvent', b'eventWithCGEvent:', {'arguments': {2: {'type': '^{__CGEvent=}'}}})
    r('NSEvent', b'eventWithEventRef:', {'arguments': {2: {'type': '^{OpaqueEventRef=}'}}})
    r('NSEvent', b'hasPreciseScrollingDeltas', {'retval': {'type': b'Z'}})
    r('NSEvent', b'isARepeat', {'retval': {'type': 'Z'}})
    r('NSEvent', b'isDirectionInvertedFromDevice', {'retval': {'type': b'Z'}})
    r('NSEvent', b'isEnteringProximity', {'retval': {'type': 'Z'}})
    r('NSEvent', b'isMouseCoalescingEnabled', {'retval': {'type': 'Z'}})
    r('NSEvent', b'isSwipeTrackingFromScrollEventsEnabled', {'retval': {'type': b'Z'}})
    r('NSEvent', b'keyEventWithType:location:modifierFlags:timestamp:windowNumber:context:characters:charactersIgnoringModifiers:isARepeat:keyCode:', {'arguments': {3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 10: {'type': 'Z'}}})
    r('NSEvent', b'locationInWindow', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}})
    r('NSEvent', b'mouseEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:clickCount:pressure:', {'arguments': {3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSEvent', b'mouseLocation', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}})
    r('NSEvent', b'otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:', {'arguments': {3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSEvent', b'setMouseCoalescingEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSEvent', b'tilt', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}})
    r('NSEvent', b'userData', {'retval': {'type': '^v'}})
    r('NSFileWrapper', b'initWithURL:options:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSFileWrapper', b'isDirectory', {'retval': {'type': 'Z'}})
    r('NSFileWrapper', b'isRegularFile', {'retval': {'type': 'Z'}})
    r('NSFileWrapper', b'isSymbolicLink', {'retval': {'type': 'Z'}})
    r('NSFileWrapper', b'matchesContentsOfURL:', {'retval': {'type': 'Z'}})
    r('NSFileWrapper', b'needsToBeUpdatedFromPath:', {'retval': {'type': 'Z'}})
    r('NSFileWrapper', b'readFromURL:options:error:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSFileWrapper', b'updateFromPath:', {'retval': {'type': 'Z'}})
    r('NSFileWrapper', b'writeToFile:atomically:updateFilenames:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': 'Z'}, 4: {'type': 'Z'}}})
    r('NSFileWrapper', b'writeToURL:options:originalContentsURL:error:', {'retval': {'type': 'Z'}, 'arguments': {5: {'type_modifier': b'o'}}})
    r('NSFont', b'advancementForGlyph:', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSFont', b'boundingRectForFont', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSFont', b'boundingRectForGlyph:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSFont', b'fontWithName:matrix:', {'arguments': {3: {'c_array_of_fixed_length': 6, 'type_modifier': b'n'}}})
    r('NSFont', b'getAdvancements:forGlyphs:count:', {'arguments': {2: {'type_modifier': b'o', 'c_array_length_in_arg': 4}, 3: {'type_modifier': b'n', 'c_array_length_in_arg': 4}}})
    r('NSFont', b'getAdvancements:forPackedGlyphs:length:', {'arguments': {2: {'type_modifier': b'o', 'c_array_length_in_arg': 4}, 3: {'c_array_delimited_by_null': True, 'type': '^t', 'type_modifier': b'n', 'c_array_length_in_arg': 4}}})
    r('NSFont', b'getBoundingRects:forGlyphs:count:', {'arguments': {2: {'type_modifier': b'o', 'c_array_length_in_arg': 4}, 3: {'type_modifier': b'n', 'c_array_length_in_arg': 4}}})
    r('NSFont', b'glyphIsEncoded:', {'retval': {'type': 'Z'}})
    r('NSFont', b'isBaseFont', {'retval': {'type': 'Z'}})
    r('NSFont', b'isFixedPitch', {'retval': {'type': 'Z'}})
    r('NSFont', b'isVertical', {'retval': {'type': b'Z'}})
    r('NSFont', b'matrix', {'retval': {'c_array_of_fixed_length': 6}})
    r('NSFont', b'maximumAdvancement', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSFont', b'positionOfGlyph:forCharacter:struckOverRect:', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 'arguments': {3: {'type': 'S'}, 4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSFont', b'positionOfGlyph:precededByGlyph:isNominal:', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 'arguments': {4: {'type': '^Z', 'type_modifier': b'o'}}})
    r('NSFont', b'positionOfGlyph:struckOverGlyph:metricsExist:', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 'arguments': {4: {'type': '^Z', 'type_modifier': b'o'}}})
    r('NSFont', b'positionOfGlyph:struckOverRect:metricsExist:', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 4: {'type': '^Z', 'type_modifier': b'o'}}})
    r('NSFont', b'positionOfGlyph:withRelation:toBaseGlyph:totalAdvancement:metricsExist:', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 'arguments': {5: {'type_modifier': b'o'}, 6: {'type': '^Z', 'type_modifier': b'o'}}})
    r('NSFont', b'positionsForCompositeSequence:numberOfGlyphs:pointArray:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 3}, 4: {'type_modifier': b'o', 'c_array_length_in_arg': 3}}})
    r('NSFontCollection', b'hideFontCollectionWithName:visibility:error:', {'retval': {'type': b'Z'}})
    r('NSFontCollection', b'renameFontCollectionWithName:visibility:toName:error:', {'retval': {'type': b'Z'}})
    r('NSFontCollection', b'showFontCollection:withName:visibility:error:', {'retval': {'type': b'Z'}})
    r('NSFontManager', b'addCollection:options:', {'retval': {'type': 'Z'}})
    r('NSFontManager', b'convertWeight:ofFont:', {'arguments': {2: {'type': 'Z'}}})
    r('NSFontManager', b'fontMenu:', {'arguments': {2: {'type': 'Z'}}})
    r('NSFontManager', b'fontNamed:hasTraits:', {'retval': {'type': 'Z'}})
    r('NSFontManager', b'fontPanel:', {'arguments': {2: {'type': 'Z'}}})
    r('NSFontManager', b'isEnabled', {'retval': {'type': 'Z'}})
    r('NSFontManager', b'isMultiple', {'retval': {'type': 'Z'}})
    r('NSFontManager', b'removeCollection:', {'retval': {'type': 'Z'}})
    r('NSFontManager', b'sendAction', {'retval': {'type': 'Z'}})
    r('NSFontManager', b'setAction:', {'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSFontManager', b'setEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSFontManager', b'setSelectedAttributes:isMultiple:', {'arguments': {3: {'type': 'Z'}}})
    r('NSFontManager', b'setSelectedFont:isMultiple:', {'arguments': {3: {'type': 'Z'}}})
    r('NSFontPanel', b'isEnabled', {'retval': {'type': 'Z'}})
    r('NSFontPanel', b'setEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSFontPanel', b'setPanelFont:isMultiple:', {'arguments': {3: {'type': 'Z'}}})
    r('NSFontPanel', b'sharedFontPanelExists', {'retval': {'type': 'Z'}})
    r('NSFontPanel', b'worksWhenModal', {'retval': {'type': 'Z'}})
    r('NSForm', b'setBezeled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSForm', b'setBordered:', {'arguments': {2: {'type': 'Z'}}})
    r('NSForm', b'setFrameSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSFormCell', b'isOpaque', {'retval': {'type': 'Z'}})
    r('NSFormCell', b'titleWidth:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSGlyphGenerator', b'generateGlyphsForGlyphStorage:desiredNumberOfCharacters:glyphIndex:characterIndex:', {'arguments': {4: {'type_modifier': b'o'}, 5: {'type_modifier': b'o'}}})
    r('NSGradient', b'drawFromCenter:radius:toCenter:radius:options:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 3: {'type': sel32or64(u'f', u'd')}, 4: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSGradient', b'drawFromPoint:toPoint:options:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSGradient', b'drawInBezierPath:relativeCenterPosition:', {'arguments': {3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSGradient', b'drawInRect:angle:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSGradient', b'drawInRect:relativeCenterPosition:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSGradient', b'getColor:location:atIndex:', {'arguments': {2: {'type_modifier': b'o'}, 3: {'type_modifier': b'o'}}})
    r('NSGradient', b'initWithColors:atLocations:colorSpace:', {'arguments': {3: {'type_modifier': b'n', 'c_array_length_in_arg': 2}}})
    r('NSGradient', b'initWithColorsAndLocations:', {'suggestion': 'use initWithColors:atLocation:colorSpace:', 'variadic': True})
    r('NSGraphicsContext', b'currentContextDrawingToScreen', {'retval': {'type': 'Z'}})
    r('NSGraphicsContext', b'focusStack', {'retval': {'type': '^v'}})
    r('NSGraphicsContext', b'graphicsContextWithGraphicsPort:flipped:', {'arguments': {2: {'type': '^{CGContext=}'}, 3: {'type': 'Z'}}})
    r('NSGraphicsContext', b'graphicsPort', {'retval': {'type': '^{CGContext=}'}})
    r('NSGraphicsContext', b'isDrawingToScreen', {'retval': {'type': 'Z'}})
    r('NSGraphicsContext', b'isFlipped', {'retval': {'type': 'Z'}})
    r('NSGraphicsContext', b'patternPhase', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}})
    r('NSGraphicsContext', b'setFocusStack:', {'arguments': {2: {'type': '^v'}}})
    r('NSGraphicsContext', b'setPatternPhase:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSGraphicsContext', b'setShouldAntialias:', {'arguments': {2: {'type': 'Z'}}})
    r('NSGraphicsContext', b'shouldAntialias', {'retval': {'type': 'Z'}})
    r('NSHelpManager', b'isContextHelpModeActive', {'retval': {'type': 'Z'}})
    r('NSHelpManager', b'registerBooksInBundle:', {'retval': {'type': b'Z'}})
    r('NSHelpManager', b'setContextHelpModeActive:', {'arguments': {2: {'type': 'Z'}}})
    r('NSHelpManager', b'showContextHelpForObject:locationHint:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSImage', b'CGImageForProposedRect:context:hints:', {'arguments': {2: {'type': sel32or64(u'^{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'o'}}})
    r('NSImage', b'alignmentRect', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSImage', b'bestRepresentationForRect:context:hints:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSImage', b'cacheDepthMatchesImageDepth', {'retval': {'type': 'Z'}})
    r('NSImage', b'canInitWithPasteboard:', {'retval': {'type': 'Z'}})
    r('NSImage', b'compositeToPoint:fromRect:operation:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSImage', b'compositeToPoint:fromRect:operation:fraction:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSImage', b'compositeToPoint:operation:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSImage', b'compositeToPoint:operation:fraction:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSImage', b'dissolveToPoint:fraction:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSImage', b'dissolveToPoint:fromRect:fraction:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSImage', b'drawAtPoint:fromRect:operation:fraction:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSImage', b'drawInRect:fromRect:operation:fraction:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSImage', b'drawInRect:fromRect:operation:fraction:respectFlipped:hints:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 6: {'type': 'Z'}}})
    r('NSImage', b'drawRepresentation:inRect:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSImage', b'hitTestRect:withImageDestinationRect:context:hints:flipped:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 6: {'type': 'Z'}}})
    r('NSImage', b'hitTestRect:withImageDestinationRect:context_hints:flipped:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSImage', b'initWithCGImage:size:', {'arguments': {3: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSImage', b'initWithIconRef:', {'arguments': {2: {'type': '^{OpaqueIconRef=}'}}})
    r('NSImage', b'initWithSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSImage', b'isCachedSeparately', {'retval': {'type': 'Z'}})
    r('NSImage', b'isDataRetained', {'retval': {'type': 'Z'}})
    r('NSImage', b'isFlipped', {'retval': {'type': 'Z'}})
    r('NSImage', b'isTemplate', {'retval': {'type': 'Z'}})
    r('NSImage', b'isValid', {'retval': {'type': 'Z'}})
    r('NSImage', b'lockFocusFlipped:', {'arguments': {2: {'type': 'Z'}}})
    r('NSImage', b'matchesOnMultipleResolution', {'retval': {'type': 'Z'}})
    r('NSImage', b'prefersColorMatch', {'retval': {'type': 'Z'}})
    r('NSImage', b'scalesWhenResized', {'retval': {'type': 'Z'}})
    r('NSImage', b'setAlignmentRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSImage', b'setCacheDepthMatchesImageDepth:', {'arguments': {2: {'type': 'Z'}}})
    r('NSImage', b'setCachedSeparately:', {'arguments': {2: {'type': 'Z'}}})
    r('NSImage', b'setDataRetained:', {'arguments': {2: {'type': 'Z'}}})
    r('NSImage', b'setFlipped:', {'arguments': {2: {'type': 'Z'}}})
    r('NSImage', b'setMatchesOnMultipleResolution:', {'arguments': {2: {'type': 'Z'}}})
    r('NSImage', b'setName:', {'retval': {'type': 'Z'}})
    r('NSImage', b'setPrefersColorMatch:', {'arguments': {2: {'type': 'Z'}}})
    r('NSImage', b'setScalesWhenResized:', {'arguments': {2: {'type': 'Z'}}})
    r('NSImage', b'setSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSImage', b'setTemplate:', {'arguments': {2: {'type': 'Z'}}})
    r('NSImage', b'setUsesEPSOnResolutionMismatch:', {'arguments': {2: {'type': 'Z'}}})
    r('NSImage', b'size', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSImage', b'usesEPSOnResolutionMismatch', {'retval': {'type': 'Z'}})
    r('NSImageRep', b'CGImageForProposedRect:context:hints:', {'arguments': {2: {'type': sel32or64(u'^{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'N'}}})
    r('NSImageRep', b'canInitWithData:', {'retval': {'type': 'Z'}})
    r('NSImageRep', b'canInitWithPasteboard:', {'retval': {'type': 'Z'}})
    r('NSImageRep', b'draw', {'retval': {'type': 'Z'}})
    r('NSImageRep', b'drawAtPoint:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSImageRep', b'drawInRect:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSImageRep', b'drawInRect:fromRect:operation:fraction:respectFlipped:hints:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 6: {'type': 'Z'}}})
    r('NSImageRep', b'hasAlpha', {'retval': {'type': 'Z'}})
    r('NSImageRep', b'isOpaque', {'retval': {'type': 'Z'}})
    r('NSImageRep', b'setAlpha:', {'arguments': {2: {'type': 'Z'}}})
    r('NSImageRep', b'setOpaque:', {'arguments': {2: {'type': 'Z'}}})
    r('NSImageRep', b'setSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSImageRep', b'size', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSImageView', b'allowsCutCopyPaste', {'retval': {'type': 'Z'}})
    r('NSImageView', b'animates', {'retval': {'type': 'Z'}})
    r('NSImageView', b'isEditable', {'retval': {'type': 'Z'}})
    r('NSImageView', b'setAllowsCutCopyPaste:', {'arguments': {2: {'type': 'Z'}}})
    r('NSImageView', b'setAnimates:', {'arguments': {2: {'type': 'Z'}}})
    r('NSImageView', b'setEditable:', {'arguments': {2: {'type': 'Z'}}})
    r('NSInputManager', b'handleMouseEvent:', {'retval': {'type': 'Z'}})
    r('NSInputManager', b'markedTextSelectionChanged:client:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSInputManager', b'wantsToDelayTextChangeNotifications', {'retval': {'type': 'Z'}})
    r('NSInputManager', b'wantsToHandleMouseEvents', {'retval': {'type': 'Z'}})
    r('NSInputManager', b'wantsToInterpretAllKeystrokes', {'retval': {'type': 'Z'}})
    r('NSLayoutConstraint', b'setShouldBeArchived:', {'arguments': {2: {'type': b'Z'}}})
    r('NSLayoutConstraint', b'shouldBeArchived', {'retval': {'type': b'Z'}})
    r('NSLayoutManager', b'addTemporaryAttribute:value:forCharacterRange:', {'arguments': {4: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'addTemporaryAttributes:forCharacterRange:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'allowsNonContiguousLayout', {'retval': {'type': 'Z'}})
    r('NSLayoutManager', b'attachmentSizeForGlyphAtIndex:', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSLayoutManager', b'backgroundLayoutEnabled', {'retval': {'type': 'Z'}})
    r('NSLayoutManager', b'boundingRectForGlyphRange:inTextContainer:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'boundsRectForTextBlock:atIndex:effectiveRange:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSLayoutManager', b'boundsRectForTextBlock:glyphRange:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 4: {'type_modifier': b'o'}}})
    r('NSLayoutManager', b'characterRangeForGlyphRange:actualGlyphRange:', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type_modifier': b'o'}}})
    r('NSLayoutManager', b'deleteGlyphsInRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'drawBackgroundForGlyphRange:atPoint:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSLayoutManager', b'drawGlyphsForGlyphRange:atPoint:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSLayoutManager', b'drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 5: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 6: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 7: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSLayoutManager', b'drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 5: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 6: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 7: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSLayoutManager', b'drawsOutsideLineFragmentForGlyphAtIndex:', {'retval': {'type': 'Z'}})
    r('NSLayoutManager', b'ensureGlyphsForCharacterRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'ensureGlyphsForGlyphRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'ensureLayoutForBoundingRect:inTextContainer:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSLayoutManager', b'ensureLayoutForCharacterRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'ensureLayoutForGlyphRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'extraLineFragmentRect', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSLayoutManager', b'extraLineFragmentUsedRect', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSLayoutManager', b'fillBackgroundRectArray:count:forCharacterRange:color:', {'arguments': {2: {'type': sel32or64(u'^{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'N', 'c_array_length_in_arg': 3}, 4: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'fractionOfDistanceThroughGlyphForPoint:inTextContainer:', {'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSLayoutManager', b'getFirstUnlaidCharacterIndex:glyphIndex:', {'arguments': {2: {'type_modifier': b'o'}, 3: {'type_modifier': b'o'}}})
    r('NSLayoutManager', b'getGlyphs:range:', {'arguments': {2: {'type_modifier': b'o', 'c_array_length_in_arg': 3}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type_modifier': b'o', 'c_array_length_in_arg': 2}, 4: {'type_modifier': b'o', 'c_array_length_in_arg': 2}, 5: {'type_modifier': b'o', 'c_array_length_in_arg': 2}, 6: {'type': '^Z', 'type_modifier': b'o', 'c_array_length_in_arg': 2}}})
    r('NSLayoutManager', b'getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type_modifier': b'o', 'c_array_length_in_arg': 2}, 4: {'type_modifier': b'o', 'c_array_length_in_arg': 2}, 5: {'type_modifier': b'o', 'c_array_length_in_arg': 2}, 6: {'type': '^Z', 'type_modifier': b'o', 'c_array_length_in_arg': 2}, 7: {'type': '^C', 'type_modifier': b'o', 'c_array_length_in_arg': 2}}})
    r('NSLayoutManager', b'getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:', {'arguments': {3: {'type': 'Z'}, 4: {'type': 'Z'}, 5: {'type': sel32or64(u'r^f', u'r^d'), 'type_modifier': b'o'}, 6: {'type': sel32or64(u'^I', u'^Q'), 'type_modifier': b'o'}}})
    r('NSLayoutManager', b'glyphAtIndex:isValidIndex:', {'arguments': {3: {'type': '^Z', 'type_modifier': b'o'}}})
    r('NSLayoutManager', b'glyphIndexForPoint:inTextContainer:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSLayoutManager', b'glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 4: {'null_accepted': False, 'type_modifier': b'o'}}})
    r('NSLayoutManager', b'glyphRangeForBoundingRect:inTextContainer:', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSLayoutManager', b'glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSLayoutManager', b'glyphRangeForCharacterRange:actualCharacterRange:', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type_modifier': b'o'}}})
    r('NSLayoutManager', b'glyphRangeForTextContainer:', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSLayoutManager', b'hasNonContiguousLayout', {'retval': {'type': 'Z'}})
    r('NSLayoutManager', b'insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:', {'arguments': {2: {'type': '^I', 'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSLayoutManager', b'invalidateDisplayForCharacterRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'invalidateDisplayForGlyphRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 4: {'type': sel32or64(u'^{_NSRange=II}', u'^{_NSRange=QQ}'), 'type_modifier': b'o'}}})
    r('NSLayoutManager', b'invalidateGlyphsOnLayoutInvalidationForGlyphRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'invalidateLayoutForCharacterRange:actualCharacterRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type': sel32or64(u'^{_NSRange=II}', u'^{_NSRange=QQ}'), 'type_modifier': b'o'}}})
    r('NSLayoutManager', b'invalidateLayoutForCharacterRange:isSoft:actualCharacterRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type': 'Z'}, 4: {'type': sel32or64(u'^{_NSRange=II}', u'^{_NSRange=QQ}'), 'type_modifier': b'o'}}})
    r('NSLayoutManager', b'isValidGlyphIndex:', {'retval': {'type': 'Z'}})
    r('NSLayoutManager', b'layoutManagerOwnsFirstResponderInWindow:', {'retval': {'type': 'Z'}})
    r('NSLayoutManager', b'layoutRectForTextBlock:atIndex:effectiveRange:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {4: {'type': sel32or64(u'^{_NSRange=II}', u'^{_NSRange=QQ}'), 'type_modifier': b'o'}}})
    r('NSLayoutManager', b'layoutRectForTextBlock:glyphRange:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'lineFragmentRectForGlyphAtIndex:effectiveRange:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {3: {'type': sel32or64(u'^{_NSRange=II}', u'^{_NSRange=QQ}'), 'type_modifier': b'o'}}})
    r('NSLayoutManager', b'lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {3: {'type_modifier': b'o'}, 4: {'type': 'Z'}}})
    r('NSLayoutManager', b'lineFragmentUsedRectForGlyphAtIndex:effectiveRange:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {3: {'type_modifier': b'o'}}})
    r('NSLayoutManager', b'lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {3: {'type_modifier': b'o'}, 4: {'type': 'Z'}}})
    r('NSLayoutManager', b'locationForGlyphAtIndex:', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}})
    r('NSLayoutManager', b'notShownAttributeForGlyphAtIndex:', {'retval': {'type': 'Z'}})
    r('NSLayoutManager', b'rangeOfNominallySpacedGlyphsContainingIndex:', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSLayoutManager', b'rectArrayForCharacterRange:withinSelectedCharacterRange:inTextContainer:rectCount:', {'retval': {'c_array_length_in_arg': 5}, 'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 5: {'type_modifier': b'o'}}})
    r('NSLayoutManager', b'rectArrayForGlyphRange:withinSelectedGlyphRange:inTextContainer:rectCount:', {'retval': {'c_array_length_in_arg': 5}, 'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 5: {'type_modifier': b'o'}}})
    r('NSLayoutManager', b'removeTemporaryAttribute:forCharacterRange:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'rulerAccessoryViewForTextView:paragraphStyle:ruler:enabled:', {'arguments': {5: {'type': 'Z'}}})
    r('NSLayoutManager', b'setAllowsNonContiguousLayout:', {'arguments': {2: {'type': 'Z'}}})
    r('NSLayoutManager', b'setAttachmentSize:forGlyphRange:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'setBackgroundLayoutEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSLayoutManager', b'setBoundsRect:forTextBlock:glyphRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 4: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'setDrawsOutsideLineFragment:forGlyphAtIndex:', {'arguments': {2: {'type': 'Z'}}})
    r('NSLayoutManager', b'setExtraLineFragmentRect:usedRect:textContainer:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSLayoutManager', b'setLayoutRect:forTextBlock:glyphRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 4: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'setLineFragmentRect:forGlyphRange:usedRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSLayoutManager', b'setLocation:forStartOfGlyphRange:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'setLocations:startingGlyphIndexes:count:forGlyphRange:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 4}, 3: {'type_modifier': b'n', 'c_array_length_in_arg': 4}, 5: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'setNotShownAttribute:forGlyphAtIndex:', {'arguments': {2: {'type': 'Z'}}})
    r('NSLayoutManager', b'setShowsControlCharacters:', {'arguments': {2: {'type': 'Z'}}})
    r('NSLayoutManager', b'setShowsInvisibleCharacters:', {'arguments': {2: {'type': 'Z'}}})
    r('NSLayoutManager', b'setTemporaryAttributes:forCharacterRange:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'setTextContainer:forGlyphRange:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'setUsesFontLeading:', {'arguments': {2: {'type': 'Z'}}})
    r('NSLayoutManager', b'setUsesScreenFonts:', {'arguments': {2: {'type': 'Z'}}})
    r('NSLayoutManager', b'showAttachmentCell:inRect:characterIndex:', {'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSLayoutManager', b'showPackedGlyphs:length:glyphRange:atPoint:font:color:printingAdjustment:', {'arguments': {2: {'c_array_delimited_by_null': True, 'type': '^v', 'type_modifier': b'n', 'c_array_length_in_arg': 3}, 4: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 5: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 8: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSLayoutManager', b'showsControlCharacters', {'retval': {'type': 'Z'}})
    r('NSLayoutManager', b'showsInvisibleCharacters', {'retval': {'type': 'Z'}})
    r('NSLayoutManager', b'strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 6: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSLayoutManager', b'temporaryAttribute:atCharacterIndex:effectiveRange:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSLayoutManager', b'temporaryAttribute:atCharacterIndex:longestEffectiveRange:inRange:', {'arguments': {4: {'type_modifier': b'o'}, 5: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'temporaryAttributesAtCharacterIndex:effectiveRange:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSLayoutManager', b'temporaryAttributesAtCharacterIndex:longestEffectiveRange:inRange:', {'arguments': {3: {'type_modifier': b'o'}, 4: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'textContainerForGlyphAtIndex:effectiveRange:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSLayoutManager', b'textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:', {'arguments': {3: {'type_modifier': b'o'}, 4: {'type': 'Z'}}})
    r('NSLayoutManager', b'textStorage:edited:range:changeInLength:invalidatedRange:', {'arguments': {3: {'type': sel32or64(u'I', u'Q')}, 4: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 6: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSLayoutManager', b'underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 6: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSLayoutManager', b'usedRectForTextContainer:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSLayoutManager', b'usesFontLeading', {'retval': {'type': 'Z'}})
    r('NSLayoutManager', b'usesScreenFonts', {'retval': {'type': 'Z'}})
    r('NSLevelIndicator', b'rectOfTickMarkAtIndex:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSLevelIndicatorCell', b'rectOfTickMarkAtIndex:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSMatrix', b'acceptsFirstMouse:', {'retval': {'type': 'Z'}})
    r('NSMatrix', b'allowsEmptySelection', {'retval': {'type': 'Z'}})
    r('NSMatrix', b'autosizesCells', {'retval': {'type': 'Z'}})
    r('NSMatrix', b'cellFrameAtRow:column:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSMatrix', b'cellSize', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSMatrix', b'context:', {'arguments': {2: {'type': '^v'}}})
    r('NSMatrix', b'drawsBackground', {'retval': {'type': 'Z'}})
    r('NSMatrix', b'drawsCellBackground', {'retval': {'type': 'Z'}})
    r('NSMatrix', b'getNumberOfRows:columns:', {'arguments': {2: {'type_modifier': b'o'}, 3: {'type_modifier': b'o'}}})
    r('NSMatrix', b'getRow:column:forPoint:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type_modifier': b'o'}, 3: {'type_modifier': b'o'}, 4: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSMatrix', b'getRow:column:ofCell:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type_modifier': b'o'}, 3: {'type_modifier': b'o'}}})
    r('NSMatrix', b'highlightCell:atRow:column:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMatrix', b'initWithFrame:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSMatrix', b'initWithFrame:mode:cellClass:numberOfRows:numberOfColumns:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSMatrix', b'initWithFrame:mode:prototype:numberOfRows:numberOfColumns:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSMatrix', b'intercellSpacing', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSMatrix', b'isAutoscroll', {'retval': {'type': 'Z'}})
    r('NSMatrix', b'isSelectionByRect', {'retval': {'type': 'Z'}})
    r('NSMatrix', b'performKeyEquivalent:', {'retval': {'type': 'Z'}})
    r('NSMatrix', b'selectCellWithTag:', {'retval': {'type': 'Z'}})
    r('NSMatrix', b'sendAction', {'retval': {'type': 'Z'}})
    r('NSMatrix', b'sendAction:to:forAllCells:', {'arguments': {2: {'sel_of_type': b'Z@:@'}, 4: {'type': 'Z'}}})
    r('NSMatrix', b'setAllowsEmptySelection:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMatrix', b'setAutoscroll:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMatrix', b'setAutosizesCells:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMatrix', b'setCellSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSMatrix', b'setDoubleAction:', {'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSMatrix', b'setDrawsBackground:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMatrix', b'setDrawsCellBackground:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMatrix', b'setIntercellSpacing:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSMatrix', b'setScrollable:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMatrix', b'setSelectionByRect:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMatrix', b'setSelectionFrom:to:anchor:highlight:', {'arguments': {5: {'type': 'Z'}}})
    r('NSMatrix', b'setTabKeyTraversesCells:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMatrix', b'setValidateSize:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMatrix', b'sortUsingFunction:context:', {'arguments': {2: {'callable': {'retval': {'type': sel32or64(b'i', b'q')}, 'arguments': {0: {'type': b'@'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}, 'callable_retained': False}, 3: {'type': '@'}}})
    r('NSMatrix', b'sortUsingSelector:', {'arguments': {2: {'sel_of_type': sel32or64(b'i@:@', b'q@:@')}}})
    r('NSMatrix', b'tabKeyTraversesCells', {'retval': {'type': 'Z'}})
    r('NSMatrix', b'textShouldBeginEditing:', {'retval': {'type': 'Z'}})
    r('NSMatrix', b'textShouldEndEditing:', {'retval': {'type': 'Z'}})
    r('NSMenu', b'addItemWithTitle:action:keyEquivalent:', {'arguments': {3: {'sel_of_type': b'v@:@'}}})
    r('NSMenu', b'allowsContextMenuPlugIns', {'retval': {'type': 'Z'}})
    r('NSMenu', b'autoenablesItems', {'retval': {'type': 'Z'}})
    r('NSMenu', b'indexOfItemWithTarget:andAction:', {'arguments': {3: {'sel_of_type': b'v@:@'}}})
    r('NSMenu', b'insertItemWithTitle:action:keyEquivalent:atIndex:', {'arguments': {3: {'sel_of_type': b'v@:@'}}})
    r('NSMenu', b'isAttached', {'retval': {'type': 'Z'}})
    r('NSMenu', b'isTornOff', {'retval': {'type': 'Z'}})
    r('NSMenu', b'locationForSubmenu:', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}})
    r('NSMenu', b'menuBarVisible', {'retval': {'type': 'Z'}})
    r('NSMenu', b'menuChangedMessagesEnabled', {'retval': {'type': 'Z'}})
    r('NSMenu', b'menuZone', {'retval': {'type': '^{_NSZone=}'}})
    r('NSMenu', b'performKeyEquivalent:', {'retval': {'type': 'Z'}})
    r('NSMenu', b'popUpMenuPositioningItem:atLocation:inView:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSMenu', b'setAllowsContextMenuPlugIns:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMenu', b'setAutoenablesItems:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMenu', b'setMenuBarVisible:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMenu', b'setMenuChangedMessagesEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMenu', b'setMenuZone:', {'arguments': {2: {'type': '^{_NSZone=}'}}})
    r('NSMenu', b'setShowsStateColumn:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMenu', b'showsStateColumn', {'retval': {'type': 'Z'}})
    r('NSMenuItem', b'hasSubmenu', {'retval': {'type': 'Z'}})
    r('NSMenuItem', b'initWithTitle:action:keyEquivalent:', {'arguments': {3: {'sel_of_type': b'v@:@'}}})
    r('NSMenuItem', b'isAlternate', {'retval': {'type': 'Z'}})
    r('NSMenuItem', b'isEnabled', {'retval': {'type': 'Z'}})
    r('NSMenuItem', b'isHidden', {'retval': {'type': 'Z'}})
    r('NSMenuItem', b'isHiddenOrHasHiddenAncestor', {'retval': {'type': 'Z'}})
    r('NSMenuItem', b'isHighlighted', {'retval': {'type': 'Z'}})
    r('NSMenuItem', b'isSeparatorItem', {'retval': {'type': 'Z'}})
    r('NSMenuItem', b'setAction:', {'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSMenuItem', b'setAlternate:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMenuItem', b'setEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMenuItem', b'setHidden:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMenuItem', b'setUsesUserKeyEquivalents:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMenuItem', b'usesUserKeyEquivalents', {'retval': {'type': 'Z'}})
    r('NSMenuItemCell', b'drawBorderAndBackgroundWithFrame:inView:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSMenuItemCell', b'drawImageWithFrame:inView:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSMenuItemCell', b'drawKeyEquivalentWithFrame:inView:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSMenuItemCell', b'drawSeparatorItemWithFrame:inView:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSMenuItemCell', b'drawStateImageWithFrame:inView:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSMenuItemCell', b'drawTitleWithFrame:inView:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSMenuItemCell', b'keyEquivalentRectForBounds:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSMenuItemCell', b'keyEquivalentWidth', {'retval': {'type': sel32or64(u'f', u'd')}})
    r('NSMenuItemCell', b'needsDisplay', {'retval': {'type': 'Z'}})
    r('NSMenuItemCell', b'needsSizing', {'retval': {'type': 'Z'}})
    r('NSMenuItemCell', b'setNeedsDisplay:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMenuItemCell', b'setNeedsSizing:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMenuItemCell', b'stateImageRectForBounds:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSMenuItemCell', b'titleRectForBounds:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSMenuView', b'indexOfItemAtPoint:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSMenuView', b'initWithFrame:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSMenuView', b'innerRect', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSMenuView', b'isAttached', {'retval': {'type': 'Z'}})
    r('NSMenuView', b'isHorizontal', {'retval': {'type': 'Z'}})
    r('NSMenuView', b'isTornOff', {'retval': {'type': 'Z'}})
    r('NSMenuView', b'locationForSubmenu:', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}})
    r('NSMenuView', b'needsSizing', {'retval': {'type': 'Z'}})
    r('NSMenuView', b'rectOfItemAtIndex:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSMenuView', b'setHorizontal:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMenuView', b'setNeedsSizing:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMenuView', b'setWindowFrameForAttachingToRect:onScreen:preferredEdge:popUpSelectedItem:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSMenuView', b'trackWithEvent:', {'retval': {'type': 'Z'}})
    r('NSMovie', b'QTMovie', {'retval': {'type': '^^{MovieType}'}})
    r('NSMovie', b'canInitWithPasteboard:', {'retval': {'type': 'Z'}})
    r('NSMovie', b'initWithMovie:', {'arguments': {2: {'type': '^^{MovieType}'}}})
    r('NSMovie', b'initWithURL:byReference:', {'arguments': {3: {'type': 'Z'}}})
    r('NSMovieView', b'isControllerVisible', {'retval': {'type': 'Z'}})
    r('NSMovieView', b'isEditable', {'retval': {'type': 'Z'}})
    r('NSMovieView', b'isMuted', {'retval': {'type': 'Z'}})
    r('NSMovieView', b'isPlaying', {'retval': {'type': 'Z'}})
    r('NSMovieView', b'movieController', {'retval': {'type': '^{ComponentInstanceRecord=[1l]}'}})
    r('NSMovieView', b'movieRect', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSMovieView', b'playsEveryFrame', {'retval': {'type': 'Z'}})
    r('NSMovieView', b'playsSelectionOnly', {'retval': {'type': 'Z'}})
    r('NSMovieView', b'setEditable:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMovieView', b'setMuted:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMovieView', b'setPlaysEveryFrame:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMovieView', b'setPlaysSelectionOnly:', {'arguments': {2: {'type': 'Z'}}})
    r('NSMovieView', b'showController:adjustingSize:', {'arguments': {2: {'type': 'Z'}, 3: {'type': 'Z'}}})
    r('NSMovieView', b'sizeForMagnification:', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSMutableAttributedString', b'applyFontTraits:range:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSMutableAttributedString', b'fixAttachmentAttributeInRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSMutableAttributedString', b'fixAttributesInRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSMutableAttributedString', b'fixFontAttributeInRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSMutableAttributedString', b'fixParagraphStyleAttributeInRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSMutableAttributedString', b'readFromData:options:documentAttributes:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSMutableAttributedString', b'readFromData:options:documentAttributes:error:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type_modifier': b'o'}, 5: {'type_modifier': b'o'}}})
    r('NSMutableAttributedString', b'readFromURL:options:documentAttributes:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSMutableAttributedString', b'readFromURL:options:documentAttributes:error:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type_modifier': b'o'}, 5: {'type_modifier': b'o'}}})
    r('NSMutableAttributedString', b'setAlignment:range:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSMutableAttributedString', b'setBaseWritingDirection:range:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSMutableAttributedString', b'subscriptRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSMutableAttributedString', b'superscriptRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSMutableAttributedString', b'unscriptRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSNib', b'instantiateNibWithExternalNameTable:', {'retval': {'type': 'Z'}})
    r('NSNib', b'instantiateNibWithOwner:topLevelObjects:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type_modifier': b'o'}}})
    r('NSObject', b'accessibilityHitTest:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSObject', b'accessibilityIsAttributeSettable:', {'retval': {'type': 'Z'}})
    r('NSObject', b'accessibilityIsIgnored', {'retval': {'type': 'Z'}})
    r('NSObject', b'accessibilityPerformAction:', {'retval': {'type': 'v'}})
    r('NSObject', b'accessibilitySetOverrideValue:forAttribute:', {'retval': {'type': 'Z'}})
    r('NSObject', b'accessibilitySetValue:forAttribute:', {'retval': {'type': 'v'}})
    r('NSObject', b'action', {'retval': {'type': ':'}})
    r('NSObject', b'activeConversationChanged:toNewConversation:', {'retval': {'type': 'v'}, 'arguments': {3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'activeConversationWillChange:fromOldConversation:', {'retval': {'type': 'v'}, 'arguments': {3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'alertShowHelp:', {'retval': {'type': 'Z'}})
    r('NSObject', b'alphaControlAddedOrRemoved:', {'retval': {'type': 'v'}})
    r('NSObject', b'animation:didReachProgressMark:', {'retval': {'type': 'v'}, 'arguments': {3: {'type': 'f'}}})
    r('NSObject', b'animation:valueForProgress:', {'retval': {'type': 'f'}, 'arguments': {3: {'type': 'f'}}})
    r('NSObject', b'animationDidEnd:', {'retval': {'type': 'v'}})
    r('NSObject', b'animationDidStop:', {'retval': {'type': 'v'}})
    r('NSObject', b'animationShouldStart:', {'retval': {'type': 'Z'}})
    r('NSObject', b'application:delegateHandlesKey:', {'retval': {'type': 'Z'}})
    r('NSObject', b'application:openFile:', {'retval': {'type': 'Z'}})
    r('NSObject', b'application:openFileWithoutUI:', {'retval': {'type': 'Z'}})
    r('NSObject', b'application:openFiles:', {'retval': {'type': 'v'}})
    r('NSObject', b'application:openTempFile:', {'retval': {'type': 'Z'}})
    r('NSObject', b'application:printFile:', {'retval': {'type': 'Z'}})
    r('NSObject', b'application:printFiles:', {'retval': {'type': 'v'}})
    r('NSObject', b'application:printFiles:withSettings:showPrintPanels:', {'retval': {'type': 'I'}, 'arguments': {5: {'type': 'Z'}}})
    r('NSObject', b'applicationDidBecomeActive:', {'retval': {'type': 'v'}})
    r('NSObject', b'applicationDidChangeScreenParameters:', {'retval': {'type': 'v'}})
    r('NSObject', b'applicationDidFinishLaunching:', {'retval': {'type': 'v'}})
    r('NSObject', b'applicationDidHide:', {'retval': {'type': 'v'}})
    r('NSObject', b'applicationDidResignActive:', {'retval': {'type': 'v'}})
    r('NSObject', b'applicationDidUnhide:', {'retval': {'type': 'v'}})
    r('NSObject', b'applicationDidUpdate:', {'retval': {'type': 'v'}})
    r('NSObject', b'applicationOpenUntitledFile:', {'retval': {'type': 'Z'}})
    r('NSObject', b'applicationShouldHandleReopen:hasVisibleWindows:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': 'Z'}}})
    r('NSObject', b'applicationShouldOpenUntitledFile:', {'retval': {'type': 'Z'}})
    r('NSObject', b'applicationShouldTerminate:', {'retval': {'type': 'I'}})
    r('NSObject', b'applicationShouldTerminateAfterLastWindowClosed:', {'retval': {'type': 'Z'}})
    r('NSObject', b'attributedSubstringForProposedRange:actualRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type': sel32or64(u'^{_NSRange=II}', u'^{_NSRange=QQ}'), 'type_modifier': b'o'}}})
    r('NSObject', b'attributedSubstringFromRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSObject', b'baselineDeltaForCharacterAtIndex:', {'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {2: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'browser:acceptDrop:atRow:column:dropOperation:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type': sel32or64(u'i', u'q')}, 5: {'type': sel32or64(u'i', u'q')}, 6: {'type': 'I'}}})
    r('NSObject', b'browser:canDragRowsWithIndexes:inColumn:withEvent:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:createRowsForColumn:inMatrix:', {'retval': {'type': 'v'}, 'arguments': {3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:', {'retval': {'type': '@'}, 'arguments': {4: {'type': sel32or64(u'i', u'q')}, 6: {'type_modifier': b'N'}}})
    r('NSObject', b'browser:heightOfRow:inColumn:', {'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {3: {'type': sel32or64(u'i', u'q')}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:isColumnValid:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:isLeafItem:', {'retval': {'type': 'Z'}})
    r('NSObject', b'browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:', {'arguments': {5: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:', {'retval': {'type': sel32or64(u'i', u'q')}, 'arguments': {3: {'type': sel32or64(u'i', u'q')}, 4: {'type': sel32or64(u'i', u'q')}, 5: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:numberOfRowsInColumn:', {'retval': {'type': sel32or64(u'i', u'q')}, 'arguments': {3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:selectCellWithString:inColumn:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:selectRow:inColumn:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': sel32or64(u'i', u'q')}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:shouldEditItem:', {'retval': {'type': 'Z'}})
    r('NSObject', b'browser:shouldShowCellExpansionForRow:column:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': sel32or64(u'i', u'q')}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:shouldSizeColumn:forUserResize:toWidth:', {'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {3: {'type': sel32or64(u'i', u'q')}, 4: {'type': 'Z'}, 5: {'type': sel32or64(u'f', u'd')}}})
    r('NSObject', b'browser:shouldTypeSelectForEvent:withCurrentSearchString:', {'retval': {'type': 'Z'}})
    r('NSObject', b'browser:sizeToFitWidthOfColumn:', {'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:titleOfColumn:', {'arguments': {3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:typeSelectStringForRow:inColumn:', {'arguments': {3: {'type': sel32or64(u'i', u'q')}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:validateDrop:proposedRow:column:dropOperation:', {'retval': {'type': 'I'}, 'arguments': {4: {'type_modifier': b'N'}, 5: {'type_modifier': b'N'}, 6: {'type_modifier': b'N'}}})
    r('NSObject', b'browser:willDisplayCell:atRow:column:', {'arguments': {4: {'type': sel32or64(u'i', u'q')}, 5: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:writeRowsWithIndexes:inColumn:toPasteboard:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'canBeDisabled', {'retval': {'type': 'Z'}})
    r('NSObject', b'cellBaselineOffset', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}})
    r('NSObject', b'cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 4: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 5: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'cellSize', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSObject', b'characterIndexForPoint:', {'retval': {'type': sel32or64(u'I', u'Q')}, 'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSObject', b'collectionView:acceptDrop:index:dropOperation:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type': sel32or64(u'i', u'q')}, 5: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'collectionView:canDragItemsAtIndexes:withEvent:', {'retval': {'type': 'Z'}})
    r('NSObject', b'collectionView:draggingImageForItemsAtIndexes:withEvent:offset:', {'arguments': {5: {'type': sel32or64(u'^{_NSPoint=ff}', u'^{CGPoint=dd}'), 'type_modifier': b'N'}}})
    r('NSObject', b'collectionView:draggingSession:endedAtPoint:draggingOperation:', {'arguments': {4: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 5: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexes:', {'arguments': {4: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSObject', b'collectionView:pasteboardWriterForItemAtIndex:', {'arguments': {3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'collectionView:validateDrop:proposedIndex:dropOperation:', {'retval': {'type': sel32or64(u'i', u'q')}, 'arguments': {4: {'type': sel32or64(u'^i', u'^q'), 'type_modifier': b'N'}, 5: {'type': sel32or64(u'^i', u'^q'), 'type_modifier': b'N'}}})
    r('NSObject', b'collectionView:writeItemsAtIndexes:toPasteboard:', {'retval': {'type': 'Z'}})
    r('NSObject', b'comboBox:indexOfItemWithStringValue:', {'retval': {'type': sel32or64(u'I', u'Q')}})
    r('NSObject', b'comboBox:objectValueForItemAtIndex:', {'arguments': {3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'comboBoxCell:indexOfItemWithStringValue:', {'retval': {'type': sel32or64(u'I', u'Q')}})
    r('NSObject', b'comboBoxCell:objectValueForItemAtIndex:', {'arguments': {3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'commitEditing', {'retval': {'type': 'Z'}})
    r('NSObject', b'commitEditingAndReturnError:', {'retval': {'type': b'Z'}})
    r('NSObject', b'commitEditingWithDelegate:didCommitSelector:contextInfo:', {'retval': {'type': 'v'}, 'arguments': {3: {'type': ':', 'sel_of_type': b'v@:@Z^v'}, 4: {'type': '^v'}}})
    r('NSObject', b'confinementRectForMenu:onScreen:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSObject', b'control:didFailToFormatString:errorDescription:', {'retval': {'type': 'Z'}})
    r('NSObject', b'control:didFailToValidatePartialString:errorDescription:', {'retval': {'type': 'v'}})
    r('NSObject', b'control:isValidObject:', {'retval': {'type': 'Z'}})
    r('NSObject', b'control:textShouldBeginEditing:', {'retval': {'type': 'Z'}})
    r('NSObject', b'control:textShouldEndEditing:', {'retval': {'type': 'Z'}})
    r('NSObject', b'control:textView:completions:forPartialWordRange:indexOfSelectedItem:', {'arguments': {5: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 6: {'null_accepted': False, 'type_modifier': b'N'}}})
    r('NSObject', b'control:textView:doCommandBySelector:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type': ':', 'sel_of_type': b'v@:@'}}})
    r('NSObject', b'conversationIdentifier', {'retval': {'type': sel32or64(u'i', u'q')}})
    r('NSObject', b'currentMode', {'retval': {'type': 'i'}})
    r('NSObject', b'datePickerCell:validateProposedDateValue:timeInterval:', {'arguments': {3: {'type': '^@', 'type_modifier': b'N'}, 4: {'type': sel32or64(u'^f', u'^d'), 'type_modifier': b'N'}}})
    r('NSObject', b'doCommandBySelector:', {'arguments': {2: {'type': ':', 'sel_of_type': b'v@:@'}}})
    r('NSObject', b'doCommandBySelector:client:', {'arguments': {2: {'type': ':', 'sel_of_type': b'v@:@'}}})
    r('NSObject', b'draggedImage:beganAt:', {'arguments': {3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSObject', b'draggedImage:endedAt:deposited:', {'arguments': {3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 4: {'type': 'Z'}}})
    r('NSObject', b'draggedImage:endedAt:operation:', {'arguments': {3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'draggedImage:movedTo:', {'arguments': {3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSObject', b'draggedImageLocation', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}})
    r('NSObject', b'draggingEntered:', {'retval': {'type': sel32or64(u'I', u'Q')}})
    r('NSObject', b'draggingLocation', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}})
    r('NSObject', b'draggingSequenceNumber', {'retval': {'type': sel32or64(u'i', u'q')}})
    r('NSObject', b'draggingSourceOperationMask', {'retval': {'type': sel32or64(u'I', u'Q')}})
    r('NSObject', b'draggingSourceOperationMaskForLocal:', {'retval': {'type': sel32or64(u'I', u'Q')}, 'arguments': {2: {'type': 'Z'}}})
    r('NSObject', b'draggingUpdated:', {'retval': {'type': sel32or64(u'I', u'Q')}})
    r('NSObject', b'drawWithFrame:inView:', {'retval': {'type': 'v'}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSObject', b'drawWithFrame:inView:characterIndex:', {'retval': {'type': 'v'}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'drawWithFrame:inView:characterIndex:layoutManager:', {'retval': {'type': 'v'}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'drawerShouldClose:', {'retval': {'type': 'Z'}})
    r('NSObject', b'drawerShouldOpen:', {'retval': {'type': 'Z'}})
    r('NSObject', b'drawerWillResizeContents:toSize:', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}, 'arguments': {3: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSObject', b'drawsVerticallyForCharacterAtIndex:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'firstRectForCharacterRange:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSObject', b'firstRectForCharacterRange:actualRange:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type': sel32or64(u'^{_NSRange=II}', u'^{_NSRange=QQ}'), 'type_modifier': b'o'}}})
    r('NSObject', b'fontManager:willIncludeFont:', {'retval': {'type': 'Z'}})
    r('NSObject', b'fractionOfDistanceThroughGlyphForPoint:', {'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSObject', b'hasMarkedText', {'retval': {'type': 'Z'}})
    r('NSObject', b'highlight:withFrame:inView:', {'arguments': {2: {'type': 'Z'}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSObject', b'ignoreModifierKeysWhileDragging', {'retval': {'type': 'Z'}})
    r('NSObject', b'image:didLoadPartOfRepresentation:withValidRows:', {'arguments': {4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'image:didLoadRepresentation:withStatus:', {'arguments': {4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'imageDidNotDraw:inRect:', {'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSObject', b'initWithPickerMask:colorPanel:', {'arguments': {2: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:', {'arguments': {2: {'type': '^I', 'type_modifier': b'n', 'c_array_length_in_arg': 3}, 3: {'type': sel32or64(u'I', u'Q')}, 4: {'type': sel32or64(u'I', u'Q')}, 5: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'insertNewButtonImage:in:', {'retval': {'type': 'v'}, 'arguments': {2: {'type': '@'}, 3: {'type': '@'}}})
    r('NSObject', b'insertText:', {'retval': {'type': 'v'}, 'arguments': {2: {'type': '@'}}})
    r('NSObject', b'insertText:client:', {'retval': {'type': 'v'}, 'arguments': {2: {'type': '@'}, 3: {'type': '@'}}})
    r('NSObject', b'insertText:replacementRange:', {'retval': {'type': 'v'}, 'arguments': {2: {'type': '@'}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSObject', b'ioCommandBySelector:', {'arguments': {2: {'type': ':', 'sel_of_type': b'v@:@'}}})
    r('NSObject', b'isContentDiscarded', {'retval': {'type': 'Z'}})
    r('NSObject', b'isExplicitlyIncluded', {'retval': {'type': 'Z'}})
    r('NSObject', b'layoutManager:didCompleteLayoutForTextContainer:atEnd:', {'arguments': {4: {'type': 'Z'}}})
    r('NSObject', b'layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:', {'arguments': {4: {'type': 'Z'}, 5: {'type': sel32or64(u'I', u'Q')}, 6: {'type': sel32or64(u'^{_NSRange=II}', u'^{_NSRange=QQ}'), 'type_modifier': b'o'}}})
    r('NSObject', b'markedRange', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSObject', b'markedTextSelectionChanged:client:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSObject', b'menu:updateItem:atIndex:shouldCancel:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type': sel32or64(u'i', u'q')}, 5: {'type': 'Z'}}})
    r('NSObject', b'menuHasKeyEquivalent:forEvent:target:action:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type': '^@', 'type_modifier': b'o'}, 5: {'type': '^:', 'type_modifier': b'o'}}})
    r('NSObject', b'minContentSize', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSObject', b'mouseDownOnCharacterIndex:atCoordinate:withModifier:client:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'I', u'Q')}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'I', u'Q')}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'mouseUpOnCharacterIndex:atCoordinate:withModifier:client:', {'arguments': {2: {'type': sel32or64(u'I', u'Q')}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'numberOfItemsInComboBox:', {'retval': {'type': sel32or64(u'i', u'q')}})
    r('NSObject', b'numberOfItemsInComboBoxCell:', {'retval': {'type': sel32or64(u'i', u'q')}})
    r('NSObject', b'numberOfItemsInMenu:', {'retval': {'type': sel32or64(u'i', u'q')}})
    r('NSObject', b'numberOfRowsInTableView:', {'retval': {'type': sel32or64(u'i', u'q')}})
    r('NSObject', b'outlineView:acceptDrop:item:childIndex:', {'retval': {'type': 'Z'}, 'arguments': {5: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'outlineView:child:ofItem:', {'arguments': {3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'outlineView:heightOfRowByItem:', {'retval': {'type': sel32or64(u'f', u'd')}})
    r('NSObject', b'outlineView:isGroupItem:', {'retval': {'type': 'Z'}})
    r('NSObject', b'outlineView:isItemExpandable:', {'retval': {'type': 'Z'}})
    r('NSObject', b'outlineView:numberOfChildrenOfItem:', {'retval': {'type': sel32or64(u'i', u'q')}})
    r('NSObject', b'outlineView:shouldCollapseItem:', {'retval': {'type': 'Z'}})
    r('NSObject', b'outlineView:shouldEditTableColumn:item:', {'retval': {'type': 'Z'}})
    r('NSObject', b'outlineView:shouldExpandItem:', {'retval': {'type': 'Z'}})
    r('NSObject', b'outlineView:shouldReorderColumn:toColumn:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': sel32or64(u'i', u'q')}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'outlineView:shouldSelectItem:', {'retval': {'type': 'Z'}})
    r('NSObject', b'outlineView:shouldSelectTableColumn:', {'retval': {'type': 'Z'}})
    r('NSObject', b'outlineView:shouldShowCellExpansionForTableColumn:item:', {'retval': {'type': 'Z'}})
    r('NSObject', b'outlineView:shouldShowOutlineCellForItem:', {'retval': {'type': 'Z'}})
    r('NSObject', b'outlineView:shouldTrackCell:forTableColumn:item:', {'retval': {'type': 'Z'}})
    r('NSObject', b'outlineView:shouldTypeSelectForEvent:withCurrentSearchString:', {'retval': {'type': 'Z'}})
    r('NSObject', b'outlineView:sizeToFitWidthOfColumn:', {'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'outlineView:sortDescriptorsDidChange:', {'retval': {'type': 'v'}})
    r('NSObject', b'outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:', {'arguments': {4: {'type': sel32or64(u'^{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'N'}, 7: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSObject', b'outlineView:validateDrop:proposedItem:proposedChildIndex:', {'retval': {'type': sel32or64(u'I', u'Q')}, 'arguments': {5: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'outlineView:writeItems:toPasteboard:', {'retval': {'type': 'Z'}})
    r('NSObject', b'panel:compareFilename:with:caseSensitive:', {'retval': {'type': sel32or64(u'i', u'q')}, 'arguments': {5: {'type': 'Z'}}})
    r('NSObject', b'panel:isValidFilename:', {'retval': {'type': 'Z'}})
    r('NSObject', b'panel:shouldEnableURL:', {'retval': {'type': 'Z'}})
    r('NSObject', b'panel:shouldShowFilename:', {'retval': {'type': 'Z'}})
    r('NSObject', b'panel:userEnteredFilename:confirmed:', {'arguments': {4: {'type': 'Z'}}})
    r('NSObject', b'panel:validateURL:error:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type': '^@', 'type_modifier': b'o'}}})
    r('NSObject', b'panel:willExpand:', {'arguments': {3: {'type': 'Z'}}})
    r('NSObject', b'pathControl:acceptDrop:', {'retval': {'type': 'Z'}})
    r('NSObject', b'pathControl:shouldDragPathComponentCell:withPasteboard:', {'retval': {'type': 'Z'}})
    r('NSObject', b'pathControl:validateDrop:', {'retval': {'type': sel32or64(u'I', u'Q')}})
    r('NSObject', b'pathControl:willDisplayOpenPanel:', {'retval': {'type': 'v'}})
    r('NSObject', b'pathControl:willPopUpMenu:', {'retval': {'type': 'v'}})
    r('NSObject', b'performDragOperation:', {'retval': {'type': 'Z'}})
    r('NSObject', b'prepareForDragOperation:', {'retval': {'type': 'Z'}})
    r('NSObject', b'provideNewView:', {'arguments': {2: {'type': 'Z'}}})
    r('NSObject', b'readSelectionFromPasteboard:', {'retval': {'type': 'Z'}})
    r('NSObject', b'ruleEditor:child:forCriterion:withRowType:', {'arguments': {3: {'type': sel32or64(u'i', u'q')}, 5: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'ruleEditor:displayValueForCriterion:inRow:', {'arguments': {4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'ruleEditor:numberOfChildrenForCriterion:withRowType:', {'retval': {'type': sel32or64(u'i', u'q')}, 'arguments': {4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:', {'arguments': {5: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'rulerView:willAddMarker:atLocation:', {'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {4: {'type': sel32or64(u'f', u'd')}}})
    r('NSObject', b'rulerView:willMoveMarker:toLocation:', {'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {4: {'type': sel32or64(u'f', u'd')}}})
    r('NSObject', b'searchForItemsWithSearchString:resultLimit:matchedItemHandler:', {'arguments': {3: {'type': sel32or64(u'i', u'q')}, 4: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^v'}, 1: {'type': b'@'}}}, 'type': '@?'}}})
    r('NSObject', b'selectedRange', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSObject', b'selectionShouldChangeInOutlineView:', {'retval': {'type': 'Z'}})
    r('NSObject', b'selectionShouldChangeInTableView:', {'retval': {'type': 'Z'}})
    r('NSObject', b'setIntAttribute:value:forGlyphAtIndex:', {'arguments': {2: {'type': sel32or64(u'i', u'q')}, 3: {'type': sel32or64(u'i', u'q')}, 4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'setMarkedText:selectedRange:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSObject', b'setMarkedText:selectedRange:replacementRange:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 4: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSObject', b'setMode:', {'arguments': {2: {'type': 'i'}}})
    r('NSObject', b'slideDraggedImageTo:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSObject', b'sound:didFinishPlaying:', {'arguments': {3: {'type': 'Z'}}})
    r('NSObject', b'speechSynthesizer:didEncounterErrorAtIndex:ofString:message:', {'arguments': {3: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'speechSynthesizer:didFinishSpeaking:', {'arguments': {3: {'type': 'Z'}}})
    r('NSObject', b'speechSynthesizer:willSpeakPhoneme:', {'arguments': {3: {'type': 's'}}})
    r('NSObject', b'speechSynthesizer:willSpeakWord:ofString:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSObject', b'splitView:additionalEffectiveRectOfDividerAtIndex:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'splitView:canCollapseSubview:', {'retval': {'type': 'Z'}})
    r('NSObject', b'splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'splitView:onstrainMaxCoordinate:ofSubviewAt:', {'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {3: {'type': sel32or64(u'f', u'd')}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'splitView:onstrainMinCoordinate:ofSubviewAt:', {'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {3: {'type': sel32or64(u'f', u'd')}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'splitView:onstrainSplitPosition:ofSubviewAt:', {'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {3: {'type': sel32or64(u'f', u'd')}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'splitView:resizeSubviewsWithOldSize:', {'arguments': {3: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSObject', b'splitView:shouldAdjustSizeOfSubview:', {'retval': {'type': 'Z'}})
    r('NSObject', b'splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'splitView:shouldHideDividerAtIndex:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'supportsMode:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': 'i'}}})
    r('NSObject', b'tabView:didSelectTabViewItem:', {'retval': {'type': 'v'}})
    r('NSObject', b'tabView:shouldSelectTabViewItem:', {'retval': {'type': 'Z'}})
    r('NSObject', b'tableView:acceptDrop:row:dropOperation:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type': sel32or64(u'i', u'q')}, 5: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'tableView:dataCellForTableColumn:row:', {'retval': {'type': '@'}, 'arguments': {4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:heightOfRow:', {'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:isGroupRow:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:nextTypeSelectMatchFromRow:toRow:forString:', {'retval': {'type': sel32or64(u'i', u'q')}, 'arguments': {3: {'type': sel32or64(u'i', u'q')}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:objectValueForTableColumn:row:', {'arguments': {4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:setObjectValue:forTableColumn:row:', {'arguments': {5: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:shouldEditTableColumn:row:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:shouldReorderColumn:toColumn:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': sel32or64(u'i', u'q')}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:shouldSelectRow:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:shouldSelectTableColumn:', {'retval': {'type': 'Z'}})
    r('NSObject', b'tableView:shouldShowCellExpansionForTableColumn:row:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:shouldTrackCell:forTableColumn:row:', {'retval': {'type': 'Z'}, 'arguments': {5: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:shouldTypeSelectForEvent:withCurrentSearchString:', {'retval': {'type': 'Z'}})
    r('NSObject', b'tableView:sizeToFitWidthOfColumn:', {'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:', {'arguments': {4: {'type_modifier': b'N'}, 6: {'type': sel32or64(u'i', u'q')}, 7: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSObject', b'tableView:typeSelectStringForTableColumn:row:', {'arguments': {4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:validateDrop:proposedRow:proposedDropOperation:', {'retval': {'type': sel32or64(u'I', u'Q')}, 'arguments': {4: {'type': sel32or64(u'i', u'q')}, 5: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'tableView:willDisplayCell:forTableColumn:row:', {'retval': {'type': 'v'}, 'arguments': {5: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:writeRows:toPasteboard:', {'retval': {'type': 'Z'}})
    r('NSObject', b'tableView:writeRowsWithIndexes:toPasteboard:', {'retval': {'type': 'Z'}})
    r('NSObject', b'tag', {'retval': {'type': sel32or64(u'i', u'q')}})
    r('NSObject', b'textShouldBeginEditing:', {'retval': {'type': 'Z'}})
    r('NSObject', b'textShouldEndEditing:', {'retval': {'type': 'Z'}})
    r('NSObject', b'textView:clickedOnCell:inRect:', {'arguments': {4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSObject', b'textView:clickedOnCell:inRect:atIndex:', {'arguments': {4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'textView:clickedOnLink:', {'retval': {'type': 'Z'}})
    r('NSObject', b'textView:clickedOnLink:atIndex:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'textView:completions:forPartialWordRange:indexOfSelectedItem:', {'arguments': {4: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 5: {'type': sel32or64(u'^i', u'^q'), 'type_modifier': b'N'}}})
    r('NSObject', b'textView:didCheckTextInRange:types:options:results:orthography:wordCount:', {'arguments': {8: {'type': sel32or64(u'i', u'q')}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'textView:doCommandBySelector:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': ':', 'sel_of_type': b'v@:@'}}})
    r('NSObject', b'textView:doubleClickedOnCell:inRect:atIndex:', {'arguments': {4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'textView:draggedCell:inRect:event:', {'arguments': {4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSObject', b'textView:draggedCell:inRect:event:atIndex:', {'arguments': {4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 6: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'textView:menu:forEvent:atIndex:', {'arguments': {5: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'textView:shouldChangeTextInRange:replacementString:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSObject', b'textView:shouldChangeTextInRanges:replacementStrings:', {'retval': {'type': 'Z'}})
    r('NSObject', b'textView:shouldSetSpellingState:range:', {'retval': {'type': sel32or64(u'i', u'q')}, 'arguments': {3: {'type': sel32or64(u'i', u'q')}, 4: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSObject', b'textView:willChangeSelectionFromCharacterRange:toCharacterRange:', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 4: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSObject', b'textView:willCheckTextInRange:options:types:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 5: {'type': sel32or64(u'^i', u'^q'), 'type_modifier': b'N'}}})
    r('NSObject', b'textView:willDisplayToolTip:forCharacterAtIndex:', {'arguments': {4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'textView:writablePasteboardTypesForCell:atIndex:', {'arguments': {4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'textView:writeCell:atIndex:toPasteboard:type:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:', {'arguments': {4: {'type': sel32or64(u'i', u'q')}, 5: {'type': sel32or64(u'^i', u'^q'), 'type_modifier': b'o'}}})
    r('NSObject', b'tokenField:hasMenuForRepresentedObject:', {'retval': {'type': 'Z'}})
    r('NSObject', b'tokenField:shouldAddObjects:atIndex:', {'arguments': {4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'tokenField:styleForRepresentedObject:', {'retval': {'type': sel32or64(u'I', u'Q')}})
    r('NSObject', b'tokenField:writeRepresentedObjects:toPasteboard:', {'retval': {'type': 'Z'}})
    r('NSObject', b'tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:', {'arguments': {4: {'type': sel32or64(u'i', u'q')}, 5: {'type': sel32or64(u'^i', u'^q'), 'type_modifier': b'o'}}})
    r('NSObject', b'tokenFieldCell:hasMenuForRepresentedObject:', {'retval': {'type': 'Z'}})
    r('NSObject', b'tokenFieldCell:shouldAddObjects:atIndex:', {'arguments': {4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'tokenFieldCell:styleForRepresentedObject:', {'retval': {'type': sel32or64(u'I', u'Q')}})
    r('NSObject', b'tokenFieldCell:writeRepresentedObjects:toPasteboard:', {'retval': {'type': 'Z'}})
    r('NSObject', b'toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:', {'arguments': {4: {'type': 'Z'}}})
    r('NSObject', b'trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type': sel32or64(u'I', u'Q')}, 6: {'type': 'Z'}}})
    r('NSObject', b'trackMouse:inRect:ofView:untilMouseUp:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type': 'Z'}}})
    r('NSObject', b'validModesForFontPanel:', {'retval': {'type': sel32or64(u'I', u'Q')}})
    r('NSObject', b'validateMenuItem:', {'retval': {'type': 'Z'}})
    r('NSObject', b'validateToolbarItem:', {'retval': {'type': 'Z'}})
    r('NSObject', b'validateUserInterfaceItem:', {'retval': {'type': 'Z'}})
    r('NSObject', b'valueClassForBinding:', {'retval': {'type': '#'}})
    r('NSObject', b'view:stringForToolTip:point:userData:', {'arguments': {3: {'type': 'i'}, 4: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 5: {'type': '^v'}}})
    r('NSObject', b'wantsPeriodicDraggingUpdates', {'retval': {'type': 'Z'}})
    r('NSObject', b'wantsToDelayTextChangeNotifications', {'retval': {'type': 'Z'}})
    r('NSObject', b'wantsToHandleMouseEvents', {'retval': {'type': 'Z'}})
    r('NSObject', b'wantsToInterpretAllKeystrokes', {'retval': {'type': 'Z'}})
    r('NSObject', b'wantsToTrackMouse', {'retval': {'type': 'Z'}})
    r('NSObject', b'wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'window:shouldDragDocumentWithEvent:from:withPasteboard:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSObject', b'window:shouldPopUpDocumentPathMenu:', {'retval': {'type': 'Z'}})
    r('NSObject', b'window:willPositionSheet:usingRect:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSObject', b'windowLevel', {'retval': {'type': sel32or64(u'i', u'q')}})
    r('NSObject', b'windowShouldClose:', {'retval': {'type': 'Z'}})
    r('NSObject', b'windowShouldZoom:toFrame:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSObject', b'windowWillResize:toSize:', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}, 'arguments': {3: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSObject', b'windowWillUseStandardFrame:defaultFrame:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSObject', b'writeSelectionToPasteboard:types:', {'retval': {'type': 'Z'}})
    r('NSObjectController', b'automaticallyPreparesContent', {'retval': {'type': 'Z'}})
    r('NSObjectController', b'canAdd', {'retval': {'type': 'Z'}})
    r('NSObjectController', b'canRemove', {'retval': {'type': 'Z'}})
    r('NSObjectController', b'fetchWithRequest:merge:error:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': 'Z'}, 4: {'type_modifier': b'o'}}})
    r('NSObjectController', b'isEditable', {'retval': {'type': 'Z'}})
    r('NSObjectController', b'setAutomaticallyPreparesContent:', {'arguments': {2: {'type': 'Z'}}})
    r('NSObjectController', b'setEditable:', {'arguments': {2: {'type': 'Z'}}})
    r('NSObjectController', b'setUsesLazyFetching:', {'retval': {'type': 'v'}, 'arguments': {2: {'type': 'Z'}}})
    r('NSObjectController', b'usesLazyFetching', {'retval': {'type': 'Z'}})
    r('NSObjectController', b'validateUserInterfaceItem:', {'retval': {'type': 'Z'}})
    r('NSOpenGLContext', b'CGLContextObj', {'retval': {'type': '^{_CGLContextObj}'}})
    r('NSOpenGLContext', b'getValues:forParameter:', {'arguments': {2: {'type': '^i'}}})
    r('NSOpenGLContext', b'setOffScreen:width:height:rowbytes:', {'arguments': {2: {'c_array_of_variable_length': True}}})
    r('NSOpenGLContext', b'setValues:forParameter:', {'arguments': {2: {'c_array_delimited_by_null': True}}})
    r('NSOpenGLLayer', b'canDrawInOpenGLContext:pixelFormat:forLayerTime:displayTime:', {'retval': {'type': 'Z'}, 'arguments': {5: {'type': sel32or64(b'^{_CVTimeStamp=IiqQdq{CVSMPTETime=ssLLLssss}QQ}', b'^{_CVTimeStamp=IiqQdq{CVSMPTETime=ssIIIssss}QQ}')}}})
    r('NSOpenGLLayer', b'drawInOpenGLContext:pixelFormat:forLayerTime:displayTime:', {'arguments': {5: {'type': sel32or64(b'^{_CVTimeStamp=IiqQdq{CVSMPTETime=ssLLLssss}QQ}', b'^{_CVTimeStamp=IiqQdq{CVSMPTETime=ssIIIssss}QQ}')}}})
    r('NSOpenGLPixelFormat', b'CGLPixelFormatObj', {'retval': {'type': '^{_CGLPixelFormatObject}'}})
    r('NSOpenGLPixelFormat', b'getValues:forAttribute:forVirtualScreen:', {'arguments': {2: {'type': '^i', 'type_modifier': b'o'}}})
    r('NSOpenGLPixelFormat', b'initWithAttributes:', {'arguments': {2: {'c_array_delimited_by_null': True, 'type': 'r^I', 'type_modifier': b'n'}}})
    r('NSOpenGLView', b'initWithFrame:pixelFormat:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSOpenPanel', b'allowsMultipleSelection', {'retval': {'type': 'Z'}})
    r('NSOpenPanel', b'beginForDirectory:file:types:modelessDelegate:didEndSelector:contextInfo:', {'arguments': {6: {'type': ':', 'sel_of_type': sel32or64(b'v@:@i^v', b'v@:@q^v')}, 7: {'type': '^v'}}})
    r('NSOpenPanel', b'beginSheetForDirectory:file:types:modalForWindow:modalDelegate:didEndSelector:contextInfo:', {'arguments': {7: {'sel_of_type': sel32or64(b'v@:@i^v', b'v@:@q^v')}, 8: {'type': '^v'}}})
    r('NSOpenPanel', b'canChooseDirectories', {'retval': {'type': 'Z'}})
    r('NSOpenPanel', b'canChooseFiles', {'retval': {'type': 'Z'}})
    r('NSOpenPanel', b'resolvesAliases', {'retval': {'type': 'Z'}})
    r('NSOpenPanel', b'setAllowsMultipleSelection:', {'arguments': {2: {'type': 'Z'}}})
    r('NSOpenPanel', b'setCanChooseDirectories:', {'arguments': {2: {'type': 'Z'}}})
    r('NSOpenPanel', b'setCanChooseFiles:', {'arguments': {2: {'type': 'Z'}}})
    r('NSOpenPanel', b'setResolvesAliases:', {'arguments': {2: {'type': 'Z'}}})
    r('NSOutlineView', b'autoresizesOutlineColumn', {'retval': {'type': 'Z'}})
    r('NSOutlineView', b'autosaveExpandedItems', {'retval': {'type': 'Z'}})
    r('NSOutlineView', b'collapseItem:collapseChildren:', {'arguments': {3: {'type': 'Z'}}})
    r('NSOutlineView', b'expandItem:expandChildren:', {'arguments': {3: {'type': 'Z'}}})
    r('NSOutlineView', b'frameOfOutlineCellAtRow:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSOutlineView', b'indentationMarkerFollowsCell', {'retval': {'type': 'Z'}})
    r('NSOutlineView', b'isExpandable:', {'retval': {'type': 'Z'}})
    r('NSOutlineView', b'isItemExpanded:', {'retval': {'type': 'Z'}})
    r('NSOutlineView', b'reloadItem:reloadChildren:', {'arguments': {3: {'type': 'Z'}}})
    r('NSOutlineView', b'setAutoresizesOutlineColumn:', {'arguments': {2: {'type': 'Z'}}})
    r('NSOutlineView', b'setAutosaveExpandedItems:', {'arguments': {2: {'type': 'Z'}}})
    r('NSOutlineView', b'setIndentationMarkerFollowsCell:', {'arguments': {2: {'type': 'Z'}}})
    r('NSOutlineView', b'shouldCollapseAutoExpandedItemsForDeposited:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': 'Z'}}})
    r('NSPDFImageRep', b'bounds', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSPICTImageRep', b'boundingBox', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSPageLayout', b'beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:', {'arguments': {5: {'sel_of_type': sel32or64(b'v@:@i^v', b'v@:@q^v')}, 6: {'type': '^v'}}})
    r('NSPanel', b'becomesKeyOnlyIfNeeded', {'retval': {'type': 'Z'}})
    r('NSPanel', b'isFloatingPanel', {'retval': {'type': 'Z'}})
    r('NSPanel', b'setBecomesKeyOnlyIfNeeded:', {'arguments': {2: {'type': 'Z'}}})
    r('NSPanel', b'setFloatingPanel:', {'arguments': {2: {'type': 'Z'}}})
    r('NSPanel', b'setWorksWhenModal:', {'arguments': {2: {'type': 'Z'}}})
    r('NSPanel', b'worksWhenModal', {'retval': {'type': 'Z'}})
    r('NSPasteboard', b'canReadItemWithDataConformingToTypes:', {'retval': {'type': 'Z'}})
    r('NSPasteboard', b'canReadObjectForClasses:options:', {'retval': {'type': 'Z'}})
    r('NSPasteboard', b'setData:forType:', {'retval': {'type': 'Z'}})
    r('NSPasteboard', b'setPropertyList:forType:', {'retval': {'type': 'Z'}})
    r('NSPasteboard', b'setString:forType:', {'retval': {'type': 'Z'}})
    r('NSPasteboard', b'writeFileContents:', {'retval': {'type': 'Z'}})
    r('NSPasteboard', b'writeFileWrapper:', {'retval': {'type': 'Z'}})
    r('NSPasteboard', b'writeObjects:', {'retval': {'type': 'Z'}})
    r('NSPasteboardItem', b'setData:forType:', {'retval': {'type': 'Z'}})
    r('NSPasteboardItem', b'setDataProvider:forTypes:', {'retval': {'type': 'Z'}})
    r('NSPasteboardItem', b'setPropertyList:forType:', {'retval': {'type': 'Z'}})
    r('NSPasteboardItem', b'setString:forType:', {'retval': {'type': 'Z'}})
    r('NSPathCell', b'mouseEntered:withFrame:inView:', {'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSPathCell', b'mouseExited:withFrame:inView:', {'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSPathCell', b'pathComponentCellAtPoint:withFrame:inView:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSPathCell', b'rectOfPathComponentCell:withFrame:inView:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSPathCell', b'setDoubleAction:', {'retval': {'type': 'v'}, 'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSPathControl', b'setDoubleAction:', {'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSPathControl', b'setDraggingSourceOperationMask:forLocal:', {'arguments': {3: {'type': 'Z'}}})
    r('NSPersistentDocument', b'configurePersistentStoreCoordinatorForURL:ofType:error:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSPersistentDocument', b'configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:', {'retval': {'type': 'Z'}, 'arguments': {6: {'type_modifier': b'o'}}})
    r('NSPersistentDocument', b'readFromURL:ofType:error:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSPersistentDocument', b'revertToContentsOfURL:ofType:error:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSPersistentDocument', b'writeToURL:ofType:forSaveOperation:originalContentsURL:error:', {'retval': {'type': 'Z'}, 'arguments': {6: {'type_modifier': b'o'}}})
    r('NSPopUpButton', b'autoenablesItems', {'retval': {'type': 'Z'}})
    r('NSPopUpButton', b'indexOfItemWithTarget:andAction:', {'arguments': {3: {'sel_of_type': b'v@:@'}}})
    r('NSPopUpButton', b'initWithFrame:pullsDown:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': 'Z'}}})
    r('NSPopUpButton', b'pullsDown', {'retval': {'type': 'Z'}})
    r('NSPopUpButton', b'selectItemWithTag:', {'retval': {'type': 'Z'}})
    r('NSPopUpButton', b'setAutoenablesItems:', {'arguments': {2: {'type': 'Z'}}})
    r('NSPopUpButton', b'setPullsDown:', {'arguments': {2: {'type': 'Z'}}})
    r('NSPopUpButtonCell', b'altersStateOfSelectedItem', {'retval': {'type': 'Z'}})
    r('NSPopUpButtonCell', b'attachPopUpWithFrame:inView:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSPopUpButtonCell', b'autoenablesItems', {'retval': {'type': 'Z'}})
    r('NSPopUpButtonCell', b'indexOfItemWithTarget:andAction:', {'arguments': {3: {'sel_of_type': b'v@:@'}}})
    r('NSPopUpButtonCell', b'initTextCell:pullsDown:', {'arguments': {3: {'type': 'Z'}}})
    r('NSPopUpButtonCell', b'performClickWithFrame:inView:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSPopUpButtonCell', b'pullsDown', {'retval': {'type': 'Z'}})
    r('NSPopUpButtonCell', b'selectItemWithTag:', {'retval': {'type': 'Z'}})
    r('NSPopUpButtonCell', b'setAltersStateOfSelectedItem:', {'arguments': {2: {'type': 'Z'}}})
    r('NSPopUpButtonCell', b'setAutoenablesItems:', {'arguments': {2: {'type': 'Z'}}})
    r('NSPopUpButtonCell', b'setPullsDown:', {'arguments': {2: {'type': 'Z'}}})
    r('NSPopUpButtonCell', b'setUsesItemFromMenu:', {'arguments': {2: {'type': 'Z'}}})
    r('NSPopUpButtonCell', b'usesItemFromMenu', {'retval': {'type': 'Z'}})
    r('NSPopover', b'animates', {'retval': {'type': b'Z'}})
    r('NSPopover', b'isShown', {'retval': {'type': b'Z'}})
    r('NSPopover', b'setAnimates:', {'arguments': {2: {'type': b'Z'}}})
    r('NSPrintInfo', b'PMPageFormat', {'retval': {'type': '^{OpaquePMPageFormat=}'}})
    r('NSPrintInfo', b'PMPrintSession', {'retval': {'type': '^{OpaquePMPrintSession=}'}})
    r('NSPrintInfo', b'PMPrintSettings', {'retval': {'type': '^{OpaquePMPrintSettings=}'}})
    r('NSPrintInfo', b'imageablePageBounds', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSPrintInfo', b'isHorizontallyCentered', {'retval': {'type': 'Z'}})
    r('NSPrintInfo', b'isSelectionOnly', {'retval': {'type': 'Z'}})
    r('NSPrintInfo', b'isVerticallyCentered', {'retval': {'type': 'Z'}})
    r('NSPrintInfo', b'paperSize', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSPrintInfo', b'setHorizontallyCentered:', {'arguments': {2: {'type': 'Z'}}})
    r('NSPrintInfo', b'setPaperSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSPrintInfo', b'setSelectionOnly:', {'arguments': {2: {'type': 'Z'}}})
    r('NSPrintInfo', b'setVerticallyCentered:', {'arguments': {2: {'type': 'Z'}}})
    r('NSPrintInfo', b'sizeForPaperName:', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSPrintOperation', b'EPSOperationWithView:insideRect:toData:', {'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSPrintOperation', b'EPSOperationWithView:insideRect:toData:printInfo:', {'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSPrintOperation', b'EPSOperationWithView:insideRect:toPath:printInfo:', {'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSPrintOperation', b'PDFOperationWithView:insideRect:toData:', {'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSPrintOperation', b'PDFOperationWithView:insideRect:toData:printInfo:', {'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSPrintOperation', b'PDFOperationWithView:insideRect:toPath:printInfo:', {'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSPrintOperation', b'canSpawnSeparateThread', {'retval': {'type': 'Z'}})
    r('NSPrintOperation', b'deliverResult', {'retval': {'type': 'Z'}})
    r('NSPrintOperation', b'isCopyingOperation', {'retval': {'type': 'Z'}})
    r('NSPrintOperation', b'pageRange', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSPrintOperation', b'runOperation', {'retval': {'type': 'Z'}})
    r('NSPrintOperation', b'runOperationModalForWindow:delegate:didRunSelector:contextInfo:', {'arguments': {4: {'sel_of_type': b'v@:@Z^v'}, 5: {'type': '^v'}}})
    r('NSPrintOperation', b'setCanSpawnSeparateThread:', {'arguments': {2: {'type': 'Z'}}})
    r('NSPrintOperation', b'setShowPanels:', {'arguments': {2: {'type': 'Z'}}})
    r('NSPrintOperation', b'setShowsPrintPanel:', {'arguments': {2: {'type': 'Z'}}})
    r('NSPrintOperation', b'setShowsProgressPanel:', {'arguments': {2: {'type': 'Z'}}})
    r('NSPrintOperation', b'showPanels', {'retval': {'type': 'Z'}})
    r('NSPrintOperation', b'showsPrintPanel', {'retval': {'type': 'Z'}})
    r('NSPrintOperation', b'showsProgressPanel', {'retval': {'type': 'Z'}})
    r('NSPrintPanel', b'beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:', {'arguments': {5: {'sel_of_type': sel32or64(b'v@:@i^v', b'v@:@q^v')}, 6: {'type': '^v'}}})
    r('NSPrinter', b'acceptsBinary', {'retval': {'type': 'Z'}})
    r('NSPrinter', b'booleanForKey:inTable:', {'retval': {'type': 'Z'}})
    r('NSPrinter', b'imageRectForPaper:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSPrinter', b'isColor', {'retval': {'type': 'Z'}})
    r('NSPrinter', b'isFontAvailable:', {'retval': {'type': 'Z'}})
    r('NSPrinter', b'isKey:inTable:', {'retval': {'type': 'Z'}})
    r('NSPrinter', b'isOutputStackInReverseOrder', {'retval': {'type': 'Z'}})
    r('NSPrinter', b'pageSizeForPaper:', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSPrinter', b'printerWithName:domain:includeUnavailable:', {'arguments': {4: {'type': 'Z'}}})
    r('NSPrinter', b'rectForKey:inTable:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSPrinter', b'sizeForKey:inTable:', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSProgressIndicator', b'isBezeled', {'retval': {'type': 'Z'}})
    r('NSProgressIndicator', b'isDisplayedWhenStopped', {'retval': {'type': 'Z'}})
    r('NSProgressIndicator', b'isIndeterminate', {'retval': {'type': 'Z'}})
    r('NSProgressIndicator', b'setBezeled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSProgressIndicator', b'setDisplayedWhenStopped:', {'arguments': {2: {'type': 'Z'}}})
    r('NSProgressIndicator', b'setIndeterminate:', {'arguments': {2: {'type': 'Z'}}})
    r('NSProgressIndicator', b'setUsesThreadedAnimation:', {'arguments': {2: {'type': 'Z'}}})
    r('NSProgressIndicator', b'usesThreadedAnimation', {'retval': {'type': 'Z'}})
    r('NSQuickDrawView', b'qdPort', {'retval': {'type': '^v'}})
    r('NSResponder', b'acceptsFirstResponder', {'retval': {'type': 'Z'}})
    r('NSResponder', b'becomeFirstResponder', {'retval': {'type': 'Z'}})
    r('NSResponder', b'doCommandBySelector:', {'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSResponder', b'noResponderFor:', {'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSResponder', b'performKeyEquivalent:', {'retval': {'type': 'Z'}})
    r('NSResponder', b'performMnemonic:', {'retval': {'type': 'Z'}})
    r('NSResponder', b'presentError:', {'retval': {'type': 'Z'}})
    r('NSResponder', b'presentError:modalForWindow:delegate:didPresentSelector:contextInfo:', {'arguments': {5: {'sel_of_type': b'v@:Z^v'}, 6: {'type': '^v'}}})
    r('NSResponder', b'resignFirstResponder', {'retval': {'type': 'Z'}})
    r('NSResponder', b'shouldBeTreatedAsInkEvent:', {'retval': {'type': 'Z'}})
    r('NSResponder', b'tryToPerform:with:', {'retval': {'type': 'Z'}, 'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSResponder', b'validateProposedFirstResponder:forEvent:', {'retval': {'type': b'Z'}})
    r('NSResponder', b'wantsForwardedScrollEventsForAxis:', {'retval': {'type': b'Z'}})
    r('NSResponder', b'wantsScrollEventsForSwipeTrackingOnAxis:', {'retval': {'type': b'Z'}})
    r('NSRuleEditor', b'canRemoveAllRows', {'retval': {'type': 'Z'}})
    r('NSRuleEditor', b'insertRowAtIndex:withType:asSubrowOfRow:animate:', {'arguments': {5: {'type': 'Z'}}})
    r('NSRuleEditor', b'isEditable', {'retval': {'type': 'Z'}})
    r('NSRuleEditor', b'removeRowsAtIndexes:includeSubrows:', {'arguments': {3: {'type': 'Z'}}})
    r('NSRuleEditor', b'selectRowIndexes:byExtendingSelection:', {'arguments': {3: {'type': 'Z'}}})
    r('NSRuleEditor', b'setCanRemoveAllRows:', {'arguments': {2: {'type': 'Z'}}})
    r('NSRuleEditor', b'setEditable:', {'arguments': {2: {'type': 'Z'}}})
    r('NSRulerMarker', b'drawRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSRulerMarker', b'imageOrigin', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}})
    r('NSRulerMarker', b'imageRectInRuler', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSRulerMarker', b'initWithRulerView:markerLocation:image:imageOrigin:', {'arguments': {5: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSRulerMarker', b'isDragging', {'retval': {'type': 'Z'}})
    r('NSRulerMarker', b'isMovable', {'retval': {'type': 'Z'}})
    r('NSRulerMarker', b'isRemovable', {'retval': {'type': 'Z'}})
    r('NSRulerMarker', b'setImageOrigin:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSRulerMarker', b'setMovable:', {'arguments': {2: {'type': 'Z'}}})
    r('NSRulerMarker', b'setRemovable:', {'arguments': {2: {'type': 'Z'}}})
    r('NSRulerMarker', b'trackMouse:adding:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': 'Z'}}})
    r('NSRulerView', b'drawHashMarksAndLabelsInRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSRulerView', b'drawMarkersInRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSRulerView', b'isFlipped', {'retval': {'type': 'Z'}})
    r('NSRulerView', b'trackMarker:withMouseEvent:', {'retval': {'type': 'Z'}})
    r('NSRunningApplication', b'activateWithOptions:', {'retval': {'type': 'Z'}})
    r('NSRunningApplication', b'forceTerminate', {'retval': {'type': 'Z'}})
    r('NSRunningApplication', b'hide', {'retval': {'type': 'Z'}})
    r('NSRunningApplication', b'isActive', {'retval': {'type': 'Z'}})
    r('NSRunningApplication', b'isFinishedLaunching', {'retval': {'type': 'Z'}})
    r('NSRunningApplication', b'isHidden', {'retval': {'type': 'Z'}})
    r('NSRunningApplication', b'isTerminated', {'retval': {'type': 'Z'}})
    r('NSRunningApplication', b'ownsMenuBar', {'retval': {'type': b'Z'}})
    r('NSRunningApplication', b'terminate', {'retval': {'type': 'Z'}})
    r('NSRunningApplication', b'unhide', {'retval': {'type': 'Z'}})
    r('NSSavePanel', b'allowsOtherFileTypes', {'retval': {'type': 'Z'}})
    r('NSSavePanel', b'beginForDirectory:file:types:modelessDelegate:didEndSelector:contextInfo:', {'arguments': {6: {'type': ':', 'sel_of_type': sel32or64(b'v@:@i^v', b'v@:@q^v')}, 7: {'type': '^v'}}})
    r('NSSavePanel', b'beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector:contextInfo:', {'arguments': {6: {'sel_of_type': sel32or64(b'v@:@i^v', b'v@:@q^v')}, 7: {'type': '^v'}}})
    r('NSSavePanel', b'beginSheetForDirectory:file:types:modalForWindow:modalDelegate:didEndSelector:contextInfo:', {'arguments': {8: {'type': '^v'}, 7: {'sel_of_type': sel32or64(b'v@:@i^v', b'v@:@q^v')}}})
    r('NSSavePanel', b'beginSheetModalForWindow:completionHandler:', {'arguments': {3: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^v'}, 1: {'type': sel32or64(b'i', b'q')}}}}}})
    r('NSSavePanel', b'beginWithCompletionHandler:', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^v'}, 1: {'type': sel32or64(b'i', b'q')}}}}}})
    r('NSSavePanel', b'canCreateDirectories', {'retval': {'type': 'Z'}})
    r('NSSavePanel', b'canSelectHiddenExtension', {'retval': {'type': 'Z'}})
    r('NSSavePanel', b'isExpanded', {'retval': {'type': 'Z'}})
    r('NSSavePanel', b'isExtensionHidden', {'retval': {'type': 'Z'}})
    r('NSSavePanel', b'setAllowsOtherFileTypes:', {'arguments': {2: {'type': 'Z'}}})
    r('NSSavePanel', b'setCanCreateDirectories:', {'arguments': {2: {'type': 'Z'}}})
    r('NSSavePanel', b'setCanSelectHiddenExtension:', {'arguments': {2: {'type': 'Z'}}})
    r('NSSavePanel', b'setExtensionHidden:', {'arguments': {2: {'type': 'Z'}}})
    r('NSSavePanel', b'setShowsHiddenFiles:', {'arguments': {2: {'type': 'Z'}}})
    r('NSSavePanel', b'setTreatsFilePackagesAsDirectories:', {'arguments': {2: {'type': 'Z'}}})
    r('NSSavePanel', b'showsHiddenFiles', {'retval': {'type': 'Z'}})
    r('NSSavePanel', b'treatsFilePackagesAsDirectories', {'retval': {'type': 'Z'}})
    r('NSScreen', b'frame', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSScreen', b'supportedWindowDepths', {'retval': {'c_array_delimited_by_null': True}})
    r('NSScreen', b'visibleFrame', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSScrollView', b'autohidesScrollers', {'retval': {'type': 'Z'}})
    r('NSScrollView', b'contentSize', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSScrollView', b'contentSizeForFrameSize:hasHorizontalScroller:hasVerticalScroller:borderType:', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}, 'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}, 3: {'type': 'Z'}, 4: {'type': 'Z'}}})
    r('NSScrollView', b'documentVisibleRect', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSScrollView', b'drawsBackground', {'retval': {'type': 'Z'}})
    r('NSScrollView', b'frameSizeForContentSize:hasHorizontalScroller:hasVerticalScroller:borderType:', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}, 'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}, 3: {'type': 'Z'}, 4: {'type': 'Z'}}})
    r('NSScrollView', b'hasHorizontalRuler', {'retval': {'type': 'Z'}})
    r('NSScrollView', b'hasHorizontalScroller', {'retval': {'type': 'Z'}})
    r('NSScrollView', b'hasVerticalRuler', {'retval': {'type': 'Z'}})
    r('NSScrollView', b'hasVerticalScroller', {'retval': {'type': 'Z'}})
    r('NSScrollView', b'rulersVisible', {'retval': {'type': 'Z'}})
    r('NSScrollView', b'scrollsDynamically', {'retval': {'type': 'Z'}})
    r('NSScrollView', b'setAutohidesScrollers:', {'arguments': {2: {'type': 'Z'}}})
    r('NSScrollView', b'setDrawsBackground:', {'arguments': {2: {'type': 'Z'}}})
    r('NSScrollView', b'setHasHorizontalRuler:', {'arguments': {2: {'type': 'Z'}}})
    r('NSScrollView', b'setHasHorizontalScroller:', {'arguments': {2: {'type': 'Z'}}})
    r('NSScrollView', b'setHasVerticalRuler:', {'arguments': {2: {'type': 'Z'}}})
    r('NSScrollView', b'setHasVerticalScroller:', {'arguments': {2: {'type': 'Z'}}})
    r('NSScrollView', b'setRulersVisible:', {'arguments': {2: {'type': 'Z'}}})
    r('NSScrollView', b'setScrollsDynamically:', {'arguments': {2: {'type': 'Z'}}})
    r('NSScrollView', b'setUsesPredominantAxisScrolling:', {'arguments': {2: {'type': b'Z'}}})
    r('NSScrollView', b'usesPredominantAxisScrolling', {'retval': {'type': b'Z'}})
    r('NSScroller', b'drawArrow:highlight:', {'arguments': {3: {'type': 'Z'}}})
    r('NSScroller', b'drawKnobSlotInRect:highlight:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': 'Z'}}})
    r('NSScroller', b'highlight:', {'arguments': {2: {'type': 'Z'}}})
    r('NSScroller', b'isCompatibleWithOverlayScrollers', {'retval': {'type': b'Z'}})
    r('NSScroller', b'rectForPart:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSScroller', b'testPart:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSSearchFieldCell', b'cancelButtonRectForBounds:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSSearchFieldCell', b'searchButtonRectForBounds:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSSearchFieldCell', b'searchTextRectForBounds:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSSearchFieldCell', b'sendsSearchStringImmediately', {'retval': {'type': 'Z'}})
    r('NSSearchFieldCell', b'sendsWholeSearchString', {'retval': {'type': 'Z'}})
    r('NSSearchFieldCell', b'setSendsSearchStringImmediately:', {'arguments': {2: {'type': 'Z'}}})
    r('NSSearchFieldCell', b'setSendsWholeSearchString:', {'arguments': {2: {'type': 'Z'}}})
    r('NSSecureTextFieldCell', b'echosBullets', {'retval': {'type': 'Z'}})
    r('NSSecureTextFieldCell', b'setEchosBullets:', {'arguments': {2: {'type': 'Z'}}})
    r('NSSegmentedCell', b'drawSegment:inFrame:withView:', {'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSSegmentedCell', b'isEnabledForSegment:', {'retval': {'type': 'Z'}})
    r('NSSegmentedCell', b'isSelectedForSegment:', {'retval': {'type': 'Z'}})
    r('NSSegmentedCell', b'selectSegmentWithTag:', {'retval': {'type': 'Z'}})
    r('NSSegmentedCell', b'setEnabled:forSegment:', {'arguments': {2: {'type': 'Z'}}})
    r('NSSegmentedCell', b'setSelected:forSegment:', {'arguments': {2: {'type': 'Z'}}})
    r('NSSegmentedControl', b'isEnabledForSegment:', {'retval': {'type': 'Z'}})
    r('NSSegmentedControl', b'isSelectedForSegment:', {'retval': {'type': 'Z'}})
    r('NSSegmentedControl', b'selectSegmentWithTag:', {'retval': {'type': 'Z'}})
    r('NSSegmentedControl', b'setEnabled:forSegment:', {'arguments': {2: {'type': 'Z'}}})
    r('NSSegmentedControl', b'setSelected:forSegment:', {'arguments': {2: {'type': 'Z'}}})
    r('NSShadow', b'setShadowOffset:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSShadow', b'shadowOffset', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSSimpleHorizontalTypesetter', b'growGlyphCaches:fillGlyphInfo:', {'arguments': {3: {'type': 'Z'}}})
    r('NSSimpleHorizontalTypesetter', b'layoutControlGlyphForLineFragment:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSSimpleHorizontalTypesetter', b'layoutGlyphsInHorizontalLineFragment:baseline:', {'arguments': {2: {'type_modifier': b'N'}, 3: {'type_modifier': b'N'}}})
    r('NSSimpleHorizontalTypesetter', b'layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:', {'arguments': {5: {'type_modifier': b'o'}}})
    r('NSSimpleHorizontalTypesetter', b'typesetterLaidOneGlyph:', {'arguments': {2: {'type_modifier': b'N'}}})
    r('NSSimpleHorizontalTypesetter', b'willSetLineFragmentRect:forGlyphRange:usedRect:', {'arguments': {2: {'type': sel32or64(u'^{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'N'}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 4: {'type': sel32or64(u'^{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'N'}}})
    r('NSSlider', b'acceptsFirstMouse:', {'retval': {'type': 'Z'}})
    r('NSSlider', b'allowsTickMarkValuesOnly', {'retval': {'type': 'Z'}})
    r('NSSlider', b'indexOfTickMarkAtPoint:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSSlider', b'rectOfTickMarkAtIndex:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSSlider', b'setAllowsTickMarkValuesOnly:', {'arguments': {2: {'type': 'Z'}}})
    r('NSSliderCell', b'allowsTickMarkValuesOnly', {'retval': {'type': 'Z'}})
    r('NSSliderCell', b'drawBarInside:flipped:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': 'Z'}}})
    r('NSSliderCell', b'drawKnob:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSSliderCell', b'indexOfTickMarkAtPoint:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSSliderCell', b'knobRectFlipped:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': 'Z'}}})
    r('NSSliderCell', b'prefersTrackingUntilMouseUp', {'retval': {'type': 'Z'}})
    r('NSSliderCell', b'rectOfTickMarkAtIndex:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'i', u'q')}}})
    r('NSSliderCell', b'setAllowsTickMarkValuesOnly:', {'arguments': {2: {'type': 'Z'}}})
    r('NSSliderCell', b'trackRect', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSSound', b'canInitWithPasteboard:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': '@'}}})
    r('NSSound', b'initWithContentsOfFile:byReference:', {'arguments': {3: {'type': 'Z'}}})
    r('NSSound', b'initWithContentsOfURL:byReference:', {'arguments': {3: {'type': 'Z'}}})
    r('NSSound', b'isPlaying', {'retval': {'type': 'Z'}})
    r('NSSound', b'loops', {'retval': {'type': 'Z'}})
    r('NSSound', b'name', {'retval': {'type': '@'}})
    r('NSSound', b'pause', {'retval': {'type': 'Z'}})
    r('NSSound', b'play', {'retval': {'type': 'Z'}})
    r('NSSound', b'resume', {'retval': {'type': 'Z'}})
    r('NSSound', b'setLoops:', {'arguments': {2: {'type': 'Z'}}})
    r('NSSound', b'setName:', {'retval': {'type': 'Z'}})
    r('NSSound', b'stop', {'retval': {'type': 'Z'}})
    r('NSSpeechRecognizer', b'blocksOtherRecognizers', {'retval': {'type': 'Z'}})
    r('NSSpeechRecognizer', b'listensInForegroundOnly', {'retval': {'type': 'Z'}})
    r('NSSpeechRecognizer', b'setBlocksOtherRecognizers:', {'arguments': {2: {'type': 'Z'}}})
    r('NSSpeechRecognizer', b'setListensInForegroundOnly:', {'arguments': {2: {'type': 'Z'}}})
    r('NSSpeechSynthesizer', b'isAnyApplicationSpeaking', {'retval': {'type': 'Z'}})
    r('NSSpeechSynthesizer', b'isSpeaking', {'retval': {'type': 'Z'}})
    r('NSSpeechSynthesizer', b'objectForProperty:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSSpeechSynthesizer', b'setObject:forProperty:error:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSSpeechSynthesizer', b'setUsesFeedbackWindow:', {'arguments': {2: {'type': 'Z'}}})
    r('NSSpeechSynthesizer', b'setVoice:', {'retval': {'type': 'Z'}})
    r('NSSpeechSynthesizer', b'startSpeakingString:', {'retval': {'type': 'Z'}})
    r('NSSpeechSynthesizer', b'startSpeakingString:toURL:', {'retval': {'type': 'Z'}})
    r('NSSpeechSynthesizer', b'usesFeedbackWindow', {'retval': {'type': 'Z'}})
    r('NSSpeechSynthesizer', b'voice', {'retval': {'type': '@'}})
    r('NSSpellChecker', b'automaticallyIdentifiesLanguages', {'retval': {'type': 'Z'}})
    r('NSSpellChecker', b'checkGrammarOfString:startingAt:language:wrap:inSpellDocumentWithTag:details:', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 'arguments': {5: {'type': 'Z'}, 7: {'type_modifier': b'o'}}})
    r('NSSpellChecker', b'checkSpellingOfString:startingAt:', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSSpellChecker', b'checkSpellingOfString:startingAt:language:wrap:inSpellDocumentWithTag:wordCount:', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 'arguments': {5: {'type': 'Z'}, 7: {'type_modifier': b'o'}}})
    r('NSSpellChecker', b'checkString:range:types:options:inSpellDocumentWithTag:orthography:wordCount:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 7: {'type_modifier': b'o'}, 8: {'type_modifier': b'o'}}})
    r('NSSpellChecker', b'completionsForPartialWordRange:inString:language:inSpellDocumentWithTag:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSSpellChecker', b'hasLearnedWord:', {'retval': {'type': 'Z'}})
    r('NSSpellChecker', b'isAutomaticSpellingCorrectionEnabled', {'retval': {'type': b'Z'}})
    r('NSSpellChecker', b'isAutomaticTextReplacementEnabled', {'retval': {'type': b'Z'}})
    r('NSSpellChecker', b'requestCheckingOfString:range:types:options:inSpellDocumentWithTag:completionHandler:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 7: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^v'}, 1: {'type': sel32or64(b'i', b'q')}, 2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(b'i', b'q')}}}}}})
    r('NSSpellChecker', b'setAutomaticallyIdentifiesLanguages:', {'arguments': {2: {'type': 'Z'}}})
    r('NSSpellChecker', b'setLanguage:', {'retval': {'type': 'Z'}})
    r('NSSpellChecker', b'sharedSpellCheckerExists', {'retval': {'type': 'Z'}})
    r('NSSpellChecker', b'unlearnWord:', {'arguments': {2: {'type': '@'}}})
    r('NSSplitView', b'drawDividerInRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSSplitView', b'isPaneSplitter', {'retval': {'type': 'Z'}})
    r('NSSplitView', b'isSubviewCollapsed:', {'retval': {'type': 'Z'}})
    r('NSSplitView', b'isVertical', {'retval': {'type': 'Z'}})
    r('NSSplitView', b'setIsPaneSplitter:', {'arguments': {2: {'type': 'Z'}}})
    r('NSSplitView', b'setVertical:', {'arguments': {2: {'type': 'Z'}}})
    r('NSStatusBar', b'isVertical', {'retval': {'type': 'Z'}})
    r('NSStatusItem', b'drawStatusBarBackgroundInRect:withHighlight:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': 'Z'}}})
    r('NSStatusItem', b'highlightMode', {'retval': {'type': 'Z'}})
    r('NSStatusItem', b'isEnabled', {'retval': {'type': 'Z'}})
    r('NSStatusItem', b'setAction:', {'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSStatusItem', b'setDoubleAction:', {'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSStatusItem', b'setEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSStatusItem', b'setHighlightMode:', {'arguments': {2: {'type': 'Z'}}})
    r('NSStepper', b'autorepeat', {'retval': {'type': 'Z'}})
    r('NSStepper', b'setAutorepeat:', {'arguments': {2: {'type': 'Z'}}})
    r('NSStepper', b'setValueWraps:', {'arguments': {2: {'type': 'Z'}}})
    r('NSStepper', b'valueWraps', {'retval': {'type': 'Z'}})
    r('NSStepperCell', b'autorepeat', {'retval': {'type': 'Z'}})
    r('NSStepperCell', b'setAutorepeat:', {'arguments': {2: {'type': 'Z'}}})
    r('NSStepperCell', b'setValueWraps:', {'arguments': {2: {'type': 'Z'}}})
    r('NSStepperCell', b'valueWraps', {'retval': {'type': 'Z'}})
    r('NSString', b'boundingRectWithSize:options:attributes:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSString', b'drawAtPoint:withAttributes:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSString', b'drawInRect:withAttributes:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSString', b'drawWithRect:options:attributes:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSString', b'sizeWithAttributes:', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSTabView', b'allowsTruncatedLabels', {'retval': {'type': 'Z'}})
    r('NSTabView', b'contentRect', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSTabView', b'drawsBackground', {'retval': {'type': 'Z'}})
    r('NSTabView', b'minimumSize', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSTabView', b'setAllowsTruncatedLabels:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTabView', b'setDrawsBackground:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTabView', b'tabViewItemAtPoint:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSTabViewItem', b'drawLabel:inRect:', {'arguments': {2: {'type': 'Z'}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSTabViewItem', b'sizeOfLabel:', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}, 'arguments': {2: {'type': 'Z'}}})
    r('NSTableColumn', b'isEditable', {'retval': {'type': 'Z'}})
    r('NSTableColumn', b'isHidden', {'retval': {'type': 'Z'}})
    r('NSTableColumn', b'isResizable', {'retval': {'type': 'Z'}})
    r('NSTableColumn', b'setEditable:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTableColumn', b'setHidden:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTableColumn', b'setResizable:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTableHeaderCell', b'drawSortIndicatorWithFrame:inView:ascending:priority:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 4: {'type': 'Z'}}})
    r('NSTableHeaderCell', b'sortIndicatorRectForBounds:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSTableHeaderView', b'columnAtPoint:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSTableHeaderView', b'headerRectOfColumn:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSTableRowView', b'isEmphasized', {'retval': {'type': b'Z'}})
    r('NSTableRowView', b'isFloating', {'retval': {'type': b'Z'}})
    r('NSTableRowView', b'isGroupRowStyle', {'retval': {'type': b'Z'}})
    r('NSTableRowView', b'isSelected', {'retval': {'type': b'Z'}})
    r('NSTableRowView', b'isTargetForDropOperation', {'retval': {'type': b'Z'}})
    r('NSTableRowView', b'setEmphasized:', {'arguments': {2: {'type': b'Z'}}})
    r('NSTableRowView', b'setFloating:', {'arguments': {2: {'type': b'Z'}}})
    r('NSTableRowView', b'setGroupRowStyle:', {'arguments': {2: {'type': b'Z'}}})
    r('NSTableRowView', b'setSelected:', {'arguments': {2: {'type': b'Z'}}})
    r('NSTableRowView', b'setTargetForDropOperation:', {'arguments': {2: {'type': b'Z'}}})
    r('NSTableView', b'allowsColumnReordering', {'retval': {'type': 'Z'}})
    r('NSTableView', b'allowsColumnResizing', {'retval': {'type': 'Z'}})
    r('NSTableView', b'allowsColumnSelection', {'retval': {'type': 'Z'}})
    r('NSTableView', b'allowsEmptySelection', {'retval': {'type': 'Z'}})
    r('NSTableView', b'allowsMultipleSelection', {'retval': {'type': 'Z'}})
    r('NSTableView', b'allowsTypeSelect', {'retval': {'type': 'Z'}})
    r('NSTableView', b'autoresizesAllColumnsToFit', {'retval': {'type': 'Z'}})
    r('NSTableView', b'autosaveTableColumns', {'retval': {'type': 'Z'}})
    r('NSTableView', b'canDragRowsWithIndexes:atPoint:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSTableView', b'columnAtPoint:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSTableView', b'columnIndexesInRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSTableView', b'columnsInRect:', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSTableView', b'dragImageForRows:event:dragImageOffset:', {'arguments': {4: {'type_modifier': b'N'}}})
    r('NSTableView', b'dragImageForRowsWithIndexes:tableColumns:event:offset:', {'arguments': {5: {'type_modifier': b'N'}}})
    r('NSTableView', b'drawBackgroundInClipRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSTableView', b'drawGridInClipRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSTableView', b'drawRow:clipRect:', {'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSTableView', b'drawsGrid', {'retval': {'type': 'Z'}})
    r('NSTableView', b'editColumn:row:withEvent:select:', {'arguments': {5: {'type': 'Z'}}})
    r('NSTableView', b'floatsGroupRows', {'retval': {'type': b'Z'}})
    r('NSTableView', b'frameOfCellAtColumn:row:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSTableView', b'highlightSelectionInClipRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSTableView', b'intercellSpacing', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSTableView', b'isColumnSelected:', {'retval': {'type': 'Z'}})
    r('NSTableView', b'isRowSelected:', {'retval': {'type': 'Z'}})
    r('NSTableView', b'rectOfColumn:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSTableView', b'rectOfRow:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSTableView', b'rowAtPoint:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSTableView', b'rowViewAtRow:makeIfNecessary:', {'arguments': {3: {'type': b'Z'}}})
    r('NSTableView', b'rowsInRect:', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSTableView', b'selectColumn:byExtendingSelection:', {'arguments': {3: {'type': 'Z'}}})
    r('NSTableView', b'selectColumnIndexes:byExtendingSelection:', {'arguments': {3: {'type': 'Z'}}})
    r('NSTableView', b'selectRow:byExtendingSelection:', {'arguments': {3: {'type': 'Z'}}})
    r('NSTableView', b'selectRowIndexes:byExtendingSelection:', {'arguments': {3: {'type': 'Z'}}})
    r('NSTableView', b'setAllowsColumnReordering:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTableView', b'setAllowsColumnResizing:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTableView', b'setAllowsColumnSelection:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTableView', b'setAllowsEmptySelection:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTableView', b'setAllowsMultipleSelection:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTableView', b'setAllowsTypeSelect:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTableView', b'setAutoresizesAllColumnsToFit:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTableView', b'setAutosaveTableColumns:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTableView', b'setDoubleAction:', {'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSTableView', b'setDraggingSourceOperationMask:forLocal:', {'arguments': {3: {'type': 'Z'}}})
    r('NSTableView', b'setDrawsGrid:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTableView', b'setFloatsGroupRows:', {'arguments': {2: {'type': b'Z'}}})
    r('NSTableView', b'setIntercellSpacing:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSTableView', b'setUsesAlternatingRowBackgroundColors:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTableView', b'setVerticalMotionCanBeginDrag:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTableView', b'shouldFocusCell:atColumn:row:', {'retval': {'type': 'Z'}})
    r('NSTableView', b'textShouldBeginEditing:', {'retval': {'type': b'Z'}})
    r('NSTableView', b'textShouldEndEditing:', {'retval': {'type': 'Z'}})
    r('NSTableView', b'usesAlternatingRowBackgroundColors', {'retval': {'type': 'Z'}})
    r('NSTableView', b'verticalMotionCanBeginDrag', {'retval': {'type': 'Z'}})
    r('NSTableView', b'viewAtColumn:row:makeIfNecessary:', {'arguments': {4: {'type': b'Z'}}})
    r('NSText', b'RTFDFromRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSText', b'RTFFromRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSText', b'drawsBackground', {'retval': {'type': 'Z'}})
    r('NSText', b'importsGraphics', {'retval': {'type': 'Z'}})
    r('NSText', b'isEditable', {'retval': {'type': 'Z'}})
    r('NSText', b'isFieldEditor', {'retval': {'type': 'Z'}})
    r('NSText', b'isHorizontallyResizable', {'retval': {'type': 'Z'}})
    r('NSText', b'isRichText', {'retval': {'type': 'Z'}})
    r('NSText', b'isRulerVisible', {'retval': {'type': 'Z'}})
    r('NSText', b'isSelectable', {'retval': {'type': 'Z'}})
    r('NSText', b'isVerticallyResizable', {'retval': {'type': 'Z'}})
    r('NSText', b'maxSize', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSText', b'minSize', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSText', b'readRTFDFromFile:', {'retval': {'type': 'Z'}})
    r('NSText', b'replaceCharactersInRange:withRTF:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSText', b'replaceCharactersInRange:withRTFD:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSText', b'replaceCharactersInRange:withString:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSText', b'scrollRangeToVisible:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSText', b'selectedRange', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSText', b'setDrawsBackground:', {'arguments': {2: {'type': 'Z'}}})
    r('NSText', b'setEditable:', {'arguments': {2: {'type': 'Z'}}})
    r('NSText', b'setFieldEditor:', {'arguments': {2: {'type': 'Z'}}})
    r('NSText', b'setFont:range:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSText', b'setHorizontallyResizable:', {'arguments': {2: {'type': 'Z'}}})
    r('NSText', b'setImportsGraphics:', {'arguments': {2: {'type': 'Z'}}})
    r('NSText', b'setMaxSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSText', b'setMinSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSText', b'setRichText:', {'arguments': {2: {'type': 'Z'}}})
    r('NSText', b'setSelectable:', {'arguments': {2: {'type': 'Z'}}})
    r('NSText', b'setSelectedRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSText', b'setTextColor:range:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSText', b'setUsesFontPanel:', {'arguments': {2: {'type': 'Z'}}})
    r('NSText', b'setVerticallyResizable:', {'arguments': {2: {'type': 'Z'}}})
    r('NSText', b'usesFontPanel', {'retval': {'type': 'Z'}})
    r('NSText', b'writeRTFDToFile:atomically:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': 'Z'}}})
    r('NSTextBlock', b'boundsRectForContentRect:inRect:textContainer:characterRange:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTextBlock', b'drawBackgroundWithFrame:inView:characterRange:layoutManager:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 4: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTextBlock', b'rectForLayoutAtPoint:inRect:textContainer:characterRange:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTextContainer', b'containerSize', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSTextContainer', b'containsPoint:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSTextContainer', b'heightTracksTextView', {'retval': {'type': 'Z'}})
    r('NSTextContainer', b'initWithContainerSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSTextContainer', b'isSimpleRectangularTextContainer', {'retval': {'type': 'Z'}})
    r('NSTextContainer', b'lineFragmentRectForProposedRect:sweepDirection:movementDirection:remainingRect:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type_modifier': b'o'}}})
    r('NSTextContainer', b'setContainerSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSTextContainer', b'setHeightTracksTextView:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextContainer', b'setWidthTracksTextView:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextContainer', b'widthTracksTextView', {'retval': {'type': 'Z'}})
    r('NSTextField', b'acceptsFirstResponder', {'retval': {'type': 'Z'}})
    r('NSTextField', b'allowsEditingTextAttributes', {'retval': {'type': 'Z'}})
    r('NSTextField', b'drawsBackground', {'retval': {'type': 'Z'}})
    r('NSTextField', b'importsGraphics', {'retval': {'type': 'Z'}})
    r('NSTextField', b'isBezeled', {'retval': {'type': 'Z'}})
    r('NSTextField', b'isBordered', {'retval': {'type': 'Z'}})
    r('NSTextField', b'isEditable', {'retval': {'type': 'Z'}})
    r('NSTextField', b'isSelectable', {'retval': {'type': 'Z'}})
    r('NSTextField', b'setAllowsEditingTextAttributes:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextField', b'setBezeled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextField', b'setBordered:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextField', b'setDrawsBackground:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextField', b'setEditable:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextField', b'setImportsGraphics:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextField', b'setSelectable:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextField', b'setTextColor:', {'arguments': {2: {'type': '@'}}})
    r('NSTextField', b'textShouldBeginEditing:', {'retval': {'type': 'Z'}})
    r('NSTextField', b'textShouldEndEditing:', {'retval': {'type': 'Z'}})
    r('NSTextFieldCell', b'drawsBackground', {'retval': {'type': 'Z'}})
    r('NSTextFieldCell', b'setDrawsBackground:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextFieldCell', b'setWantsNotificationForMarkedText:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextFinder', b'findIndicatorNeedsUpdate', {'retval': {'type': b'Z'}})
    r('NSTextFinder', b'incrementalSearchingShouldDimContentView', {'retval': {'type': b'Z'}})
    r('NSTextFinder', b'isIncrementalSearchingEnabled', {'retval': {'type': b'Z'}})
    r('NSTextFinder', b'setFindIndicatorNeedsUpdate:', {'arguments': {2: {'type': b'Z'}}})
    r('NSTextFinder', b'setIncrementalSearchingEnabled:', {'arguments': {2: {'type': b'Z'}}})
    r('NSTextFinder', b'setIncrementalSearchingShouldDimContentView:', {'arguments': {2: {'type': b'Z'}}})
    r('NSTextFinder', b'validateAction:', {'retval': {'type': b'Z'}})
    r('NSTextInputContext', b'acceptsGlyphInfo', {'retval': {'type': 'Z'}})
    r('NSTextInputContext', b'handleEvent:', {'retval': {'type': 'Z'}})
    r('NSTextInputContext', b'setAcceptsGlyphInfo:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextStorage', b'edited:range:changeInLength:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTextStorage', b'editedRange', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSTextStorage', b'ensureAttributesAreFixedInRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTextStorage', b'fixesAttributesLazily', {'retval': {'type': 'Z'}})
    r('NSTextStorage', b'invalidateAttributesInRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTextTable', b'boundsRectForBlock:contentRect:inRect:textContainer:characterRange:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 6: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTextTable', b'collapsesBorders', {'retval': {'type': 'Z'}})
    r('NSTextTable', b'drawBackgroundForBlock:withFrame:inView:characterRange:layoutManager:', {'retval': {'type': 'v'}, 'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTextTable', b'hidesEmptyCells', {'retval': {'type': 'Z'}})
    r('NSTextTable', b'rectForBlock:layoutAtPoint:inRect:textContainer:characterRange:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 6: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTextTable', b'setCollapsesBorders:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextTable', b'setHidesEmptyCells:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'acceptsGlyphInfo', {'retval': {'type': 'Z'}})
    r('NSTextView', b'allowsDocumentBackgroundColorChange', {'retval': {'type': 'Z'}})
    r('NSTextView', b'allowsImageEditing', {'retval': {'type': 'Z'}})
    r('NSTextView', b'allowsUndo', {'retval': {'type': 'Z'}})
    r('NSTextView', b'characterIndexForInsertionAtPoint:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSTextView', b'completionsForPartialWordRange:indexOfSelectedItem:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type_modifier': b'o'}}})
    r('NSTextView', b'displaysLinkToolTips', {'retval': {'type': 'Z'}})
    r('NSTextView', b'dragImageForSelectionWithEvent:origin:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSTextView', b'dragSelectionWithEvent:offset:slideBack:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}, 4: {'type': 'Z'}}})
    r('NSTextView', b'drawInsertionPointInRect:color:turnedOn:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 4: {'type': 'Z'}}})
    r('NSTextView', b'drawViewBackgroundInRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSTextView', b'drawsBackground', {'retval': {'type': 'Z'}})
    r('NSTextView', b'importsGraphics', {'retval': {'type': 'Z'}})
    r('NSTextView', b'initWithFrame:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSTextView', b'initWithFrame:textContainer:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSTextView', b'insertCompletion:forPartialWordRange:movement:isFinal:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 5: {'type': 'Z'}}})
    r('NSTextView', b'isAutomaticDashSubstitutionEnabled', {'retval': {'type': 'Z'}})
    r('NSTextView', b'isAutomaticDataDetectionEnabled', {'retval': {'type': 'Z'}})
    r('NSTextView', b'isAutomaticLinkDetectionEnabled', {'retval': {'type': 'Z'}})
    r('NSTextView', b'isAutomaticQuoteSubstitutionEnabled', {'retval': {'type': 'Z'}})
    r('NSTextView', b'isAutomaticSpellingCorrectionEnabled', {'retval': {'type': 'Z'}})
    r('NSTextView', b'isAutomaticTextReplacementEnabled', {'retval': {'type': 'Z'}})
    r('NSTextView', b'isCoalescingUndo', {'retval': {'type': 'Z'}})
    r('NSTextView', b'isContinuousSpellCheckingEnabled', {'retval': {'type': 'Z'}})
    r('NSTextView', b'isEditable', {'retval': {'type': 'Z'}})
    r('NSTextView', b'isFieldEditor', {'retval': {'type': 'Z'}})
    r('NSTextView', b'isGrammarCheckingEnabled', {'retval': {'type': 'Z'}})
    r('NSTextView', b'isIncrementalSearchingEnabled', {'retval': {'type': b'Z'}})
    r('NSTextView', b'isRichText', {'retval': {'type': 'Z'}})
    r('NSTextView', b'isRulerVisible', {'retval': {'type': 'Z'}})
    r('NSTextView', b'isSelectable', {'retval': {'type': 'Z'}})
    r('NSTextView', b'rangeForUserCharacterAttributeChange', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSTextView', b'rangeForUserCompletion', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSTextView', b'rangeForUserParagraphAttributeChange', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSTextView', b'rangeForUserTextChange', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSTextView', b'readSelectionFromPasteboard:', {'retval': {'type': 'Z'}})
    r('NSTextView', b'readSelectionFromPasteboard:type:', {'retval': {'type': 'Z'}})
    r('NSTextView', b'rulerView:shouldAddMarker:', {'retval': {'type': 'Z'}})
    r('NSTextView', b'rulerView:shouldMoveMarker:', {'retval': {'type': 'Z'}})
    r('NSTextView', b'rulerView:shouldRemoveMarker:', {'retval': {'type': 'Z'}})
    r('NSTextView', b'rulerView:willMoveMarker:toLocation:', {'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {4: {'type': sel32or64(u'f', u'd')}}})
    r('NSTextView', b'selectionRangeForProposedRange:granularity:', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTextView', b'setAcceptsGlyphInfo:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'setAlignment:range:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTextView', b'setAllowsDocumentBackgroundColorChange:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'setAllowsImageEditing:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'setAllowsUndo:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'setAutomaticDashSubstitutionEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'setAutomaticDataDetectionEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'setAutomaticLinkDetectionEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'setAutomaticQuoteSubstitutionEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'setAutomaticSpellingCorrectionEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'setAutomaticTextReplacementEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'setBaseWritingDirection:range:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTextView', b'setConstrainedFrameSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSTextView', b'setContinuousSpellCheckingEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'setDisplaysLinkToolTips:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'setDrawsBackground:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'setEditable:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'setFieldEditor:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'setGrammarCheckingEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'setImportsGraphics:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'setIncrementalSearchingEnabled:', {'arguments': {2: {'type': b'Z'}}})
    r('NSTextView', b'setNeedsDisplayInRect:avoidAdditionalLayout:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': 'Z'}}})
    r('NSTextView', b'setRichText:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'setRulerVisible:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'setSelectable:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'setSelectedRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTextView', b'setSelectedRange:affinity:stillSelecting:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 4: {'type': 'Z'}}})
    r('NSTextView', b'setSelectedRanges:affinity:stillSelecting:', {'arguments': {4: {'type': 'Z'}}})
    r('NSTextView', b'setSmartInsertDeleteEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'setSpellingState:range:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTextView', b'setTextContainerInset:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSTextView', b'setUsesFindBar:', {'arguments': {2: {'type': b'Z'}}})
    r('NSTextView', b'setUsesFindPanel:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'setUsesFontPanel:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'setUsesInspectorBar:', {'arguments': {2: {'type': b'Z'}}})
    r('NSTextView', b'setUsesRuler:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'shouldChangeTextInRange:replacementString:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTextView', b'shouldChangeTextInRanges:replacementStrings:', {'retval': {'type': 'Z'}})
    r('NSTextView', b'shouldDrawInsertionPoint', {'retval': {'type': 'Z'}})
    r('NSTextView', b'showFindIndicatorForRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTextView', b'smartDeleteRangeForProposedRange:', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTextView', b'smartInsertAfterStringForString:replacingRange:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTextView', b'smartInsertBeforeStringForString:replacingRange:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTextView', b'smartInsertDeleteEnabled', {'retval': {'type': 'Z'}})
    r('NSTextView', b'smartInsertForString:replacingRange:beforeString:afterString:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 4: {'type_modifier': b'o'}, 5: {'type_modifier': b'o'}}})
    r('NSTextView', b'textContainerInset', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSTextView', b'textContainerOrigin', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}})
    r('NSTextView', b'updateInsertionPointStateAndRestartTimer:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTextView', b'usesFindBar', {'retval': {'type': b'Z'}})
    r('NSTextView', b'usesFindPanel', {'retval': {'type': 'Z'}})
    r('NSTextView', b'usesFontPanel', {'retval': {'type': 'Z'}})
    r('NSTextView', b'usesInspectorBar', {'retval': {'type': b'Z'}})
    r('NSTextView', b'usesRuler', {'retval': {'type': 'Z'}})
    r('NSTextView', b'writeSelectionToPasteboard:type:', {'retval': {'type': 'Z'}})
    r('NSTextView', b'writeSelectionToPasteboard:types:', {'retval': {'type': 'Z'}})
    r('NSToolbar', b'allowsUserCustomization', {'retval': {'type': 'Z'}})
    r('NSToolbar', b'autosavesConfiguration', {'retval': {'type': 'Z'}})
    r('NSToolbar', b'customizationPaletteIsRunning', {'retval': {'type': 'Z'}})
    r('NSToolbar', b'isVisible', {'retval': {'type': 'Z'}})
    r('NSToolbar', b'setAllowsUserCustomization:', {'arguments': {2: {'type': 'Z'}}})
    r('NSToolbar', b'setAutosavesConfiguration:', {'arguments': {2: {'type': 'Z'}}})
    r('NSToolbar', b'setShowsBaselineSeparator:', {'arguments': {2: {'type': 'Z'}}})
    r('NSToolbar', b'setVisible:', {'arguments': {2: {'type': 'Z'}}})
    r('NSToolbar', b'showsBaselineSeparator', {'retval': {'type': 'Z'}})
    r('NSToolbarItem', b'allowsDuplicatesInToolbar', {'retval': {'type': 'Z'}})
    r('NSToolbarItem', b'autovalidates', {'retval': {'type': 'Z'}})
    r('NSToolbarItem', b'isEnabled', {'retval': {'type': 'Z'}})
    r('NSToolbarItem', b'maxSize', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSToolbarItem', b'minSize', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSToolbarItem', b'setAction:', {'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSToolbarItem', b'setAutovalidates:', {'arguments': {2: {'type': 'Z'}}})
    r('NSToolbarItem', b'setEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSToolbarItem', b'setMaxSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSToolbarItem', b'setMinSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSTouch', b'deviceSize', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSTouch', b'isResting', {'retval': {'type': 'Z'}})
    r('NSTrackingArea', b'initWithRect:options:owner:userInfo:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSTrackingArea', b'rect', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSTreeController', b'addSelectionIndexPaths:', {'retval': {'type': 'Z'}})
    r('NSTreeController', b'alwaysUsesMultipleValuesMarker', {'retval': {'type': 'Z'}})
    r('NSTreeController', b'avoidsEmptySelection', {'retval': {'type': 'Z'}})
    r('NSTreeController', b'canAddChild', {'retval': {'type': 'Z'}})
    r('NSTreeController', b'canInsert', {'retval': {'type': 'Z'}})
    r('NSTreeController', b'canInsertChild', {'retval': {'type': 'Z'}})
    r('NSTreeController', b'preservesSelection', {'retval': {'type': 'Z'}})
    r('NSTreeController', b'removeSelectionIndexPaths:', {'retval': {'type': 'Z'}})
    r('NSTreeController', b'selectsInsertedObjects', {'retval': {'type': 'Z'}})
    r('NSTreeController', b'setAlwaysUsesMultipleValuesMarker:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTreeController', b'setAvoidsEmptySelection:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTreeController', b'setPreservesSelection:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTreeController', b'setSelectionIndexPath:', {'retval': {'type': 'Z'}})
    r('NSTreeController', b'setSelectionIndexPaths:', {'retval': {'type': 'Z'}})
    r('NSTreeController', b'setSelectsInsertedObjects:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTreeNode', b'isLeaf', {'retval': {'type': 'Z'}})
    r('NSTreeNode', b'sortWithSortDescriptors:recursively:', {'arguments': {3: {'type': 'Z'}}})
    r('NSTypesetter', b'bidiProcessingEnabled', {'retval': {'type': 'Z'}})
    r('NSTypesetter', b'boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'I', u'Q')}, 4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSTypesetter', b'characterRangeForGlyphRange:actualGlyphRange:', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type_modifier': b'o'}}})
    r('NSTypesetter', b'deleteGlyphsInRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTypesetter', b'endLineWithGlyphRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTypesetter', b'getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:', {'retval': {'type': sel32or64(u'I', u'Q')}, 'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type_modifier': b'o', 'c_array_length_in_arg': 2}, 4: {'type_modifier': b'o', 'c_array_length_in_arg': 2}, 5: {'type_modifier': b'o', 'c_array_length_in_arg': 2}, 6: {'type': '^Z', 'type_modifier': b'o', 'c_array_length_in_arg': 2}, 7: {'type': '^C', 'type_modifier': b'o', 'c_array_length_in_arg': 2}}})
    r('NSTypesetter', b'getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:', {'arguments': {2: {'type_modifier': b'o'}, 3: {'type_modifier': b'o'}, 4: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 5: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSTypesetter', b'getLineFragmentRect:usedRect:remainingRect:forStartingGlyphAtIndex:proposedRect:lineSpacing:paragraphSpacingBefore:paragraphSpacingAfter:', {'arguments': {2: {'type': sel32or64(u'^{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'N'}, 3: {'type': sel32or64(u'^{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'N'}, 4: {'type': sel32or64(u'^{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'N'}, 6: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSTypesetter', b'glyphRangeForCharacterRange:actualCharacterRange:', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type_modifier': b'o'}}})
    r('NSTypesetter', b'layoutCharactersInRange:forLayoutManager:maximumNumberOfLineFragments:', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTypesetter', b'layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:', {'arguments': {5: {'type_modifier': b'o'}}})
    r('NSTypesetter', b'layoutParagraphAtPoint:', {'arguments': {2: {'type_modifier': b'N'}}})
    r('NSTypesetter', b'lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:', {'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSTypesetter', b'paragraphCharacterRange', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSTypesetter', b'paragraphGlyphRange', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSTypesetter', b'paragraphSeparatorCharacterRange', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSTypesetter', b'paragraphSeparatorGlyphRange', {'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSTypesetter', b'paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:', {'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSTypesetter', b'paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:', {'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSTypesetter', b'printingAdjustmentInLayoutManager:forNominallySpacedGlyphRange:packedGlyphs:count:', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}, 'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 4: {'c_array_delimited_by_null': True, 'type': '^v', 'type_modifier': b'n', 'c_array_length_in_arg': 5}}})
    r('NSTypesetter', b'setAttachmentSize:forGlyphRange:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTypesetter', b'setBidiLevels:forGlyphRange:', {'arguments': {2: {'type': '^z', 'type_modifier': b'n', 'c_array_length_in_arg': 3}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTypesetter', b'setBidiProcessingEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTypesetter', b'setDrawsOutsideLineFragment:forGlyphRange:', {'arguments': {2: {'type': 'Z'}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTypesetter', b'setHardInvalidation:forGlyphRange:', {'arguments': {2: {'type': 'Z'}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTypesetter', b'setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSTypesetter', b'setLocation:withAdvancements:forStartOfGlyphRange:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 3: {'type_modifier': b'n', 'c_array_length_in_arg': 4}, 4: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTypesetter', b'setNotShownAttribute:forGlyphRange:', {'arguments': {2: {'type': 'Z'}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTypesetter', b'setParagraphGlyphRange:separatorGlyphRange:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSTypesetter', b'setUsesFontLeading:', {'arguments': {2: {'type': 'Z'}}})
    r('NSTypesetter', b'shouldBreakLineByHyphenatingBeforeCharacterAtIndex:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'I', u'Q')}}})
    r('NSTypesetter', b'shouldBreakLineByWordBeforeCharacterAtIndex:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'I', u'Q')}}})
    r('NSTypesetter', b'substituteGlyphsInRange:withGlyphs:', {'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type_modifier': b'n', 'c_array_length_in_arg': 2}}})
    r('NSTypesetter', b'usesFontLeading', {'retval': {'type': 'Z'}})
    r('NSTypesetter', b'willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:', {'arguments': {2: {'type': sel32or64(u'^{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'N'}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 4: {'type': sel32or64(u'^{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'N'}, 5: {'type': sel32or64(u'^f', u'^d'), 'type_modifier': b'N'}}})
    r('NSUndoManager', b'groupsByEvent', {'retval': {'type': 'Z'}})
    r('NSUndoManager', b'setGroupsByEvent:', {'arguments': {2: {'type': 'Z'}}})
    r('NSUserDefaultsController', b'appliesImmediately', {'retval': {'type': 'Z'}})
    r('NSUserDefaultsController', b'hasUnappliedChanges', {'retval': {'type': 'Z'}})
    r('NSUserDefaultsController', b'setAppliesImmediately:', {'arguments': {2: {'type': 'Z'}}})
    r('NSView', b'acceptsFirstMouse:', {'retval': {'type': 'Z'}})
    r('NSView', b'acceptsTouchEvents', {'retval': {'type': 'Z'}})
    r('NSView', b'addCursorRect:cursor:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'addToolTipRect:owner:userData:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 4: {'type': '^v'}}})
    r('NSView', b'addTrackingRect:owner:userData:assumeInside:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 4: {'type': '^v'}, 5: {'type': 'Z'}}})
    r('NSView', b'adjustPageHeightNew:top:bottom:limit:', {'arguments': {2: {'type_modifier': b'o'}}})
    r('NSView', b'adjustPageWidthNew:left:right:limit:', {'arguments': {2: {'type_modifier': b'o'}}})
    r('NSView', b'adjustScroll:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'alignmentRectInsets', {'retval': {'type': sel32or64(b'{_NSEdgeInsets=ffff}', b'{_NSEdgeInsets=dddd}')}})
    r('NSView', b'autoresizesSubviews', {'retval': {'type': 'Z'}})
    r('NSView', b'autoscroll:', {'retval': {'type': 'Z'}})
    r('NSView', b'beginPageInRect:atPlacement:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSView', b'bitmapImageRepForCachingDisplayInRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'bounds', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSView', b'cacheDisplayInRect:toBitmapImageRep:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'canBecomeKeyView', {'retval': {'type': 'Z'}})
    r('NSView', b'canDraw', {'retval': {'type': 'Z'}})
    r('NSView', b'canDrawConcurrently', {'retval': {'type': 'Z'}})
    r('NSView', b'centerScanRect:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'context:', {'arguments': {2: {'type': '^v'}}})
    r('NSView', b'convertPoint:fromView:', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSView', b'convertPoint:toView:', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSView', b'convertPointFromBase:', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSView', b'convertPointToBase:', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSView', b'convertRect:fromView:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'convertRect:toView:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'convertRectFromBase:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'convertRectToBase:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'convertSize:fromView:', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}, 'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSView', b'convertSize:toView:', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}, 'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSView', b'convertSizeFromBase:', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}, 'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSView', b'convertSizeToBase:', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}, 'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSView', b'dataWithEPSInsideRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'dataWithPDFInsideRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'displayIfNeededInRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'displayIfNeededInRectIgnoringOpacity:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'displayRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'displayRectIgnoringOpacity:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'displayRectIgnoringOpacity:inContext:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'dragFile:fromRect:slideBack:event:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 4: {'type': 'Z'}}})
    r('NSView', b'dragImage:at:offset:event:pasteboard:source:slideBack:', {'arguments': {3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 4: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}, 8: {'type': 'Z'}}})
    r('NSView', b'dragPromisedFilesOfTypes:fromRect:source:slideBack:event:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type': 'Z'}}})
    r('NSView', b'drawPageBorderWithSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSView', b'drawRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'drawSheetBorderWithSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSView', b'enterFullScreenMode:withOptions:', {'retval': {'type': 'Z'}})
    r('NSView', b'frame', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSView', b'getRectsBeingDrawn:count:', {'arguments': {2: {'type': sel32or64(u'^^{_NSRect}', u'^^{CGRect}')}, 3: {'type': sel32or64(u'^i', u'^q'), 'type_modifier': b'o'}}})
    r('NSView', b'getRectsExposedDuringLiveResize:count:', {'arguments': {2: {'c_array_of_fixed_length': 4, 'type': sel32or64(u'^{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'o'}, 3: {'type': sel32or64(u'^i', u'^q'), 'type_modifier': b'o'}}})
    r('NSView', b'hasAmbiguousLayout', {'retval': {'type': b'Z'}})
    r('NSView', b'hitTest:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSView', b'inLiveResize', {'retval': {'type': 'Z'}})
    r('NSView', b'isDescendantOf:', {'retval': {'type': 'Z'}})
    r('NSView', b'isDrawingFindIndicator', {'retval': {'type': b'Z'}})
    r('NSView', b'isFlipped', {'retval': {'type': 'Z'}})
    r('NSView', b'isHidden', {'retval': {'type': 'Z'}})
    r('NSView', b'isHiddenOrHasHiddenAncestor', {'retval': {'type': 'Z'}})
    r('NSView', b'isInFullScreenMode', {'retval': {'type': 'Z'}})
    r('NSView', b'isOpaque', {'retval': {'type': 'Z'}})
    r('NSView', b'isRotatedFromBase', {'retval': {'type': 'Z'}})
    r('NSView', b'isRotatedOrScaledFromBase', {'retval': {'type': 'Z'}})
    r('NSView', b'knowsPageRange:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type_modifier': b'o'}}})
    r('NSView', b'locationOfPrintRect:', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'lockFocusIfCanDraw', {'retval': {'type': 'Z'}})
    r('NSView', b'lockFocusIfCanDrawInContext:', {'retval': {'type': 'Z'}})
    r('NSView', b'mouse:inRect:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'mouseDownCanMoveWindow', {'retval': {'type': 'Z'}})
    r('NSView', b'needsDisplay', {'retval': {'type': 'Z'}})
    r('NSView', b'needsLayout', {'retval': {'type': b'Z'}})
    r('NSView', b'needsPanelToBecomeKey', {'retval': {'type': 'Z'}})
    r('NSView', b'needsToDrawRect:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'needsUpdateConstraints', {'retval': {'type': b'Z'}})
    r('NSView', b'performKeyEquivalent:', {'retval': {'type': 'Z'}})
    r('NSView', b'performMnemonic:', {'retval': {'type': 'Z'}})
    r('NSView', b'postsBoundsChangedNotifications', {'retval': {'type': 'Z'}})
    r('NSView', b'postsFrameChangedNotifications', {'retval': {'type': 'Z'}})
    r('NSView', b'preservesContentDuringLiveResize', {'retval': {'type': 'Z'}})
    r('NSView', b'rectForPage:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSView', b'rectPreservedDuringLiveResize', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSView', b'removeCursorRect:cursor:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'requiresConstraintBasedLayout', {'retval': {'type': b'Z'}})
    r('NSView', b'resizeSubviewsWithOldSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSView', b'resizeWithOldSuperviewSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSView', b'rulerView:shouldAddMarker:', {'retval': {'type': 'Z'}})
    r('NSView', b'rulerView:shouldMoveMarker:', {'retval': {'type': 'Z'}})
    r('NSView', b'rulerView:shouldRemoveMarker:', {'retval': {'type': 'Z'}})
    r('NSView', b'scaleUnitSquareToSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSView', b'scrollClipView:toPoint:', {'arguments': {3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSView', b'scrollPoint:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSView', b'scrollRect:by:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSView', b'scrollRectToVisible:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'setAcceptsTouchEvents:', {'arguments': {2: {'type': 'Z'}}})
    r('NSView', b'setAutoresizesSubviews:', {'arguments': {2: {'type': 'Z'}}})
    r('NSView', b'setBounds:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'setBoundsOrigin:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSView', b'setBoundsSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSView', b'setCanDrawConcurrently:', {'arguments': {2: {'type': 'Z'}}})
    r('NSView', b'setFrame:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'setFrameOrigin:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSView', b'setFrameSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSView', b'setHidden:', {'arguments': {2: {'type': 'Z'}}})
    r('NSView', b'setKeyboardFocusRingNeedsDisplayInRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'setNeedsDisplay:', {'arguments': {2: {'type': 'Z'}}})
    r('NSView', b'setNeedsDisplayInRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'setNeedsLayout:', {'arguments': {2: {'type': b'Z'}}})
    r('NSView', b'setNeedsUpdateConstraints:', {'arguments': {2: {'type': b'Z'}}})
    r('NSView', b'setPostsBoundsChangedNotifications:', {'arguments': {2: {'type': 'Z'}}})
    r('NSView', b'setPostsFrameChangedNotifications:', {'arguments': {2: {'type': 'Z'}}})
    r('NSView', b'setTranslatesAutoresizingMaskIntoConstraints:', {'arguments': {2: {'type': b'Z'}}})
    r('NSView', b'setWantsBestResolutionOpenGLSurface:', {'arguments': {2: {'type': b'Z'}}})
    r('NSView', b'setWantsLayer:', {'arguments': {2: {'type': 'Z'}}})
    r('NSView', b'setWantsRestingTouches:', {'arguments': {2: {'type': 'Z'}}})
    r('NSView', b'shouldDelayWindowOrderingForEvent:', {'retval': {'type': 'Z'}})
    r('NSView', b'shouldDrawColor', {'retval': {'type': 'Z'}})
    r('NSView', b'showDefinitionForAttributedString:atPoint:', {'arguments': {3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSView', b'showDefinitionForAttributedString:range:options:baselineOriginProvider:', {'arguments': {3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 5: {'callable': {'retval': {'type': sel32or64(b'{_NSPoint=ff}', b'{CGPoint=dd}')}, 'arguments': {0: {'type': b'^v'}, 1: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}}}}})
    r('NSView', b'sortSubviewsUsingFunction:context:', {'arguments': {2: {'callable': {'retval': {'type': b'i'}, 'arguments': {0: {'type': b'@'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}, 'type': '^?', 'callable_retained': False}, 3: {'type': '@'}}})
    r('NSView', b'translateOriginToPoint:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSView', b'translateRectsNeedingDisplayInRect:by:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSView', b'translatesAutoresizingMaskIntoConstraints', {'retval': {'type': b'Z'}})
    r('NSView', b'visibleRect', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSView', b'wantsBestResolutionOpenGLSurface', {'retval': {'type': b'Z'}})
    r('NSView', b'wantsDefaultClipping', {'retval': {'type': 'Z'}})
    r('NSView', b'wantsLayer', {'retval': {'type': 'Z'}})
    r('NSView', b'wantsRestingTouches', {'retval': {'type': 'Z'}})
    r('NSView', b'writeEPSInsideRect:toPasteboard:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSView', b'writePDFInsideRect:toPasteboard:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSViewController', b'commitEditing', {'retval': {'type': 'Z'}})
    r('NSViewController', b'commitEditingWithDelegate:didCommitSelector:contextInfo:', {'arguments': {3: {'type': ':', 'sel_of_type': b'v@:@Z^v'}, 4: {'type': '^v'}}})
    r('NSWindow', b'acceptsMouseMovedEvents', {'retval': {'type': 'Z'}})
    r('NSWindow', b'allowsConcurrentViewDrawing', {'retval': {'type': 'Z'}})
    r('NSWindow', b'allowsToolTipsWhenApplicationIsInactive', {'retval': {'type': 'Z'}})
    r('NSWindow', b'animationResizeTime:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSWindow', b'areCursorRectsEnabled', {'retval': {'type': 'Z'}})
    r('NSWindow', b'aspectRatio', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSWindow', b'autorecalculatesContentBorderThicknessForEdge:', {'retval': {'type': 'Z'}})
    r('NSWindow', b'autorecalculatesKeyViewLoop', {'retval': {'type': 'Z'}})
    r('NSWindow', b'cacheImageInRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSWindow', b'canBeVisibleOnAllSpaces', {'retval': {'type': 'Z'}})
    r('NSWindow', b'canBecomeKeyWindow', {'retval': {'type': 'Z'}})
    r('NSWindow', b'canBecomeMainWindow', {'retval': {'type': 'Z'}})
    r('NSWindow', b'canBecomeVisibleWithoutLogin', {'retval': {'type': 'Z'}})
    r('NSWindow', b'canHide', {'retval': {'type': 'Z'}})
    r('NSWindow', b'canStoreColor', {'retval': {'type': 'Z'}})
    r('NSWindow', b'cascadeTopLeftFromPoint:', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSWindow', b'contentAspectRatio', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSWindow', b'contentMaxSize', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSWindow', b'contentMinSize', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSWindow', b'contentRectForFrameRect:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSWindow', b'contentRectForFrameRect:styleMask:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': sel32or64(u'I', u'Q')}}})
    r('NSWindow', b'contentResizeIncrements', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSWindow', b'convertBaseToScreen:', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSWindow', b'convertScreenToBase:', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSWindow', b'dataWithEPSInsideRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSWindow', b'dataWithPDFInsideRect:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSWindow', b'displaysWhenScreenProfileChanges', {'retval': {'type': 'Z'}})
    r('NSWindow', b'dragImage:at:offset:event:pasteboard:source:slideBack:', {'arguments': {3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 4: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}, 8: {'type': 'Z'}}})
    r('NSWindow', b'fieldEditor:forObject:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'frame', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSWindow', b'frameRectForContentRect:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSWindow', b'frameRectForContentRect:styleMask:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': sel32or64(u'I', u'Q')}}})
    r('NSWindow', b'hasCloseBox', {'retval': {'type': 'Z'}})
    r('NSWindow', b'hasDynamicDepthLimit', {'retval': {'type': 'Z'}})
    r('NSWindow', b'hasShadow', {'retval': {'type': 'Z'}})
    r('NSWindow', b'hasTitleBar', {'retval': {'type': 'Z'}})
    r('NSWindow', b'hidesOnDeactivate', {'retval': {'type': 'Z'}})
    r('NSWindow', b'ignoresMouseEvents', {'retval': {'type': 'Z'}})
    r('NSWindow', b'inLiveResize', {'retval': {'type': 'Z'}})
    r('NSWindow', b'initWithContentRect:styleMask:backing:defer:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type': 'Z'}}})
    r('NSWindow', b'initWithContentRect:styleMask:backing:defer:screen:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type': 'Z'}}})
    r('NSWindow', b'initWithWindowRef:', {'arguments': {2: {'type': '^{OpaqueWindowPtr=}'}}})
    r('NSWindow', b'isAutodisplay', {'retval': {'type': 'Z'}})
    r('NSWindow', b'isDocumentEdited', {'retval': {'type': 'Z'}})
    r('NSWindow', b'isExcludedFromWindowsMenu', {'retval': {'type': 'Z'}})
    r('NSWindow', b'isFloatingPanel', {'retval': {'type': 'Z'}})
    r('NSWindow', b'isFlushWindowDisabled', {'retval': {'type': 'Z'}})
    r('NSWindow', b'isKeyWindow', {'retval': {'type': 'Z'}})
    r('NSWindow', b'isMainWindow', {'retval': {'type': 'Z'}})
    r('NSWindow', b'isMiniaturizable', {'retval': {'type': 'Z'}})
    r('NSWindow', b'isMiniaturized', {'retval': {'type': 'Z'}})
    r('NSWindow', b'isModalPanel', {'retval': {'type': 'Z'}})
    r('NSWindow', b'isMovable', {'retval': {'type': 'Z'}})
    r('NSWindow', b'isMovableByWindowBackground', {'retval': {'type': 'Z'}})
    r('NSWindow', b'isOnActiveSpace', {'retval': {'type': 'Z'}})
    r('NSWindow', b'isOneShot', {'retval': {'type': 'Z'}})
    r('NSWindow', b'isOpaque', {'retval': {'type': 'Z'}})
    r('NSWindow', b'isReleasedWhenClosed', {'retval': {'type': 'Z'}})
    r('NSWindow', b'isResizable', {'retval': {'type': 'Z'}})
    r('NSWindow', b'isRestorable', {'retval': {'type': b'Z'}})
    r('NSWindow', b'isSheet', {'retval': {'type': 'Z'}})
    r('NSWindow', b'isVisible', {'retval': {'type': 'Z'}})
    r('NSWindow', b'isZoomable', {'retval': {'type': 'Z'}})
    r('NSWindow', b'isZoomed', {'retval': {'type': 'Z'}})
    r('NSWindow', b'makeFirstResponder:', {'retval': {'type': 'Z'}})
    r('NSWindow', b'maxSize', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSWindow', b'minSize', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSWindow', b'mouseLocationOutsideOfEventStream', {'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}})
    r('NSWindow', b'nextEventMatchingMask:untilDate:inMode:dequeue:', {'arguments': {5: {'type': 'Z'}}})
    r('NSWindow', b'onstrainFrameRect:toScreen:', {'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSWindow', b'postEvent:atStart:', {'arguments': {3: {'type': 'Z'}}})
    r('NSWindow', b'preservesContentDuringLiveResize', {'retval': {'type': 'Z'}})
    r('NSWindow', b'preventsApplicationTerminationWhenModal', {'retval': {'type': 'Z'}})
    r('NSWindow', b'resizeIncrements', {'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSWindow', b'setAcceptsMouseMovedEvents:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setAllowsConcurrentViewDrawing:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setAllowsToolTipsWhenApplicationIsInactive:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setAspectRatio:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSWindow', b'setAutodisplay:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setAutorecalculatesContentBorderThickness:forEdge:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setAutorecalculatesKeyViewLoop:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setCanBeVisibleOnAllSpaces:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setCanBecomeVisibleWithoutLogin:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setCanHide:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setContentAspectRatio:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSWindow', b'setContentMaxSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSWindow', b'setContentMinSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSWindow', b'setContentResizeIncrements:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSWindow', b'setContentSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSWindow', b'setDisplaysWhenScreenProfileChanges:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setDocumentEdited:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setDynamicDepthLimit:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setExcludedFromWindowsMenu:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setFrame:display:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': 'Z'}}})
    r('NSWindow', b'setFrame:display:animate:', {'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': 'Z'}, 4: {'type': 'Z'}}})
    r('NSWindow', b'setFrameAutosaveName:', {'retval': {'type': 'Z'}})
    r('NSWindow', b'setFrameOrigin:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSWindow', b'setFrameTopLeftPoint:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSWindow', b'setFrameUsingName:', {'retval': {'type': 'Z'}})
    r('NSWindow', b'setFrameUsingName:force:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': 'Z'}}})
    r('NSWindow', b'setHasShadow:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setHidesOnDeactivate:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setIgnoresMouseEvents:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setIsMiniaturized:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setIsVisible:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setIsZoomed:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setMaxSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSWindow', b'setMinSize:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSWindow', b'setMovable:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setMovableByWindowBackground:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setOneShot:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setOpaque:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setPreservesContentDuringLiveResize:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setPreventsApplicationTerminationWhenModal:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setReleasedWhenClosed:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setResizeIncrements:', {'arguments': {2: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSWindow', b'setRestorable:', {'arguments': {2: {'type': b'Z'}}})
    r('NSWindow', b'setShowsResizeIndicator:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setShowsToolbarButton:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'setViewsNeedDisplay:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'showsResizeIndicator', {'retval': {'type': 'Z'}})
    r('NSWindow', b'showsToolbarButton', {'retval': {'type': 'Z'}})
    r('NSWindow', b'tryToPerform:with:', {'retval': {'type': 'Z'}, 'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSWindow', b'useOptimizedDrawing:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindow', b'viewsNeedDisplay', {'retval': {'type': 'Z'}})
    r('NSWindow', b'windowNumberAtPoint:belowWindowWithNumber:', {'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSWindow', b'windowRef', {'retval': {'type': '^{OpaqueWindowPtr=}'}})
    r('NSWindow', b'worksWhenModal', {'retval': {'type': 'Z'}})
    r('NSWindowController', b'isWindowLoaded', {'retval': {'type': 'Z'}})
    r('NSWindowController', b'setDocumentEdited:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindowController', b'setShouldCascadeWindows:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindowController', b'setShouldCloseDocument:', {'arguments': {2: {'type': 'Z'}}})
    r('NSWindowController', b'shouldCascadeWindows', {'retval': {'type': 'Z'}})
    r('NSWindowController', b'shouldCloseDocument', {'retval': {'type': 'Z'}})
    r('NSWorkspace', b'duplicateURLs:completionHandler:', {'arguments': {3: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r('NSWorkspace', b'fileSystemChanged', {'retval': {'type': 'Z'}})
    r('NSWorkspace', b'filenameExtension:isValidForType:', {'retval': {'type': 'Z'}})
    r('NSWorkspace', b'getFileSystemInfoForPath:isRemovable:isWritable:isUnmountable:description:type:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': '^Z', 'type_modifier': b'o'}, 4: {'type': '^Z', 'type_modifier': b'o'}, 5: {'type': '^Z', 'type_modifier': b'o'}, 6: {'type_modifier': b'o'}, 7: {'type_modifier': b'o'}}})
    r('NSWorkspace', b'getInfoForFile:application:type:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type_modifier': b'o'}, 4: {'type_modifier': b'o'}}})
    r('NSWorkspace', b'isFilePackageAtPath:', {'retval': {'type': 'Z'}})
    r('NSWorkspace', b'launchAppWithBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifier:', {'retval': {'type': 'Z'}, 'arguments': {5: {'type_modifier': b'o'}}})
    r('NSWorkspace', b'launchApplication:', {'retval': {'type': 'Z'}})
    r('NSWorkspace', b'launchApplication:showIcon:autolaunch:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type': 'Z'}, 4: {'type': 'Z'}}})
    r('NSWorkspace', b'launchApplicationAtURL:options:configuration:error:', {'arguments': {5: {'type_modifier': b'o'}}})
    r('NSWorkspace', b'openFile:', {'retval': {'type': 'Z'}})
    r('NSWorkspace', b'openFile:fromImage:at:inView:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSWorkspace', b'openFile:withApplication:', {'retval': {'type': 'Z'}})
    r('NSWorkspace', b'openFile:withApplication:andDeactivate:', {'retval': {'type': 'Z'}, 'arguments': {4: {'type': 'Z'}}})
    r('NSWorkspace', b'openTempFile:', {'retval': {'type': 'Z'}})
    r('NSWorkspace', b'openURL:', {'retval': {'type': 'Z'}})
    r('NSWorkspace', b'openURLs:withAppBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifiers:', {'retval': {'type': 'Z'}, 'arguments': {6: {'type_modifier': b'o'}}})
    r('NSWorkspace', b'performFileOperation:source:destination:files:tag:', {'retval': {'type': 'Z'}, 'arguments': {6: {'type_modifier': b'o'}}})
    r('NSWorkspace', b'recycleURLs:completionHandler:', {'arguments': {3: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r('NSWorkspace', b'selectFile:inFileViewerRootedAtPath:', {'retval': {'type': 'Z'}})
    r('NSWorkspace', b'setDesktopImageURL:forScreen:options:error:', {'retval': {'type': 'Z'}, 'arguments': {5: {'type_modifier': b'o'}}})
    r('NSWorkspace', b'setIcon:forFile:options:', {'retval': {'type': 'Z'}})
    r('NSWorkspace', b'showSearchResultsForQueryString:', {'retval': {'type': 'Z'}})
    r('NSWorkspace', b'slideImage:from:to:', {'retval': {'type': 'v'}, 'arguments': {3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 4: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSWorkspace', b'type:conformsToType:', {'retval': {'type': 'Z'}})
    r('NSWorkspace', b'typeOfFile:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSWorkspace', b'unmountAndEjectDeviceAtPath:', {'retval': {'type': 'Z'}})
    r('NSWorkspace', b'unmountAndEjectDeviceAtURL:error:', {'retval': {'type': 'Z'}, 'arguments': {3: {'type_modifier': b'o'}}})
    r('NSWorkspace', b'userDefaultsChanged', {'retval': {'type': 'Z'}})
finally:
    objc._updatingMetadata(False)
r = objc.registerMetaDataForSelector
objc._updatingMetadata(True)
try:
    r('NSObject', b'action', {'required': True, 'retval': {'type': ':'}})
    r('NSObject', b'activeConversationChanged:toNewConversation:', {'required': True, 'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'activeConversationWillChange:fromOldConversation:', {'required': True, 'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'alertShowHelp:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'allowsMultipleSelection', {'retval': {'type': b'Z'}})
    r('NSObject', b'alphaControlAddedOrRemoved:', {'required': True, 'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'animatesToDestination', {'retval': {'type': b'Z'}})
    r('NSObject', b'animation:didReachProgressMark:', {'required': False, 'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': 'f'}}})
    r('NSObject', b'animation:valueForProgress:', {'required': False, 'retval': {'type': 'f'}, 'arguments': {2: {'type': b'@'}, 3: {'type': 'f'}}})
    r('NSObject', b'animationDidEnd:', {'required': False, 'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'animationDidStop:', {'required': False, 'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'animationForKey:', {'required': True, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'animationShouldStart:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'animations', {'required': True, 'retval': {'type': b'@'}})
    r('NSObject', b'animator', {'required': True, 'retval': {'type': b'@'}})
    r('NSObject', b'application:didDecodeRestorableState:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'application:didFailToRegisterForRemoteNotificationsWithError:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'application:didReceiveRemoteNotification:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'application:didRegisterForRemoteNotificationsWithDeviceToken:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'application:openFile:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'application:openFileWithoutUI:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'application:openFiles:', {'required': False, 'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'application:openTempFile:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'application:printFile:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'application:printFiles:withSettings:showPrintPanels:', {'required': False, 'retval': {'type': 'I'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}, 5: {'type': 'Z'}}})
    r('NSObject', b'application:willEncodeRestorableState:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'application:willPresentError:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'applicationDidBecomeActive:', {'required': False, 'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'applicationDidChangeScreenParameters:', {'required': False, 'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'applicationDidFinishLaunching:', {'required': False, 'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'applicationDidHide:', {'required': False, 'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'applicationDidResignActive:', {'required': False, 'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'applicationDidUnhide:', {'required': False, 'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'applicationDidUpdate:', {'required': False, 'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'applicationDockMenu:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'applicationOpenUntitledFile:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'applicationShouldHandleReopen:hasVisibleWindows:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': 'Z'}}})
    r('NSObject', b'applicationShouldOpenUntitledFile:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'applicationShouldTerminate:', {'required': False, 'retval': {'type': 'I'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'applicationShouldTerminateAfterLastWindowClosed:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'applicationWillBecomeActive:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'applicationWillFinishLaunching:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'applicationWillHide:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'applicationWillResignActive:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'applicationWillTerminate:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'applicationWillUnhide:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'applicationWillUpdate:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'attachColorList:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'attachment', {'required': True, 'retval': {'type': b'@'}})
    r('NSObject', b'attributedString', {'required': False, 'retval': {'type': b'@'}})
    r('NSObject', b'attributedString', {'required': True, 'retval': {'type': b'@'}})
    r('NSObject', b'attributedSubstringForProposedRange:actualRange:', {'required': True, 'retval': {'type': b'@'}, 'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type': sel32or64(u'^{_NSRange=II}', u'^{_NSRange=QQ}'), 'type_modifier': b'o'}}})
    r('NSObject', b'attributedSubstringFromRange:', {'required': True, 'retval': {'type': b'@'}, 'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSObject', b'baselineDeltaForCharacterAtIndex:', {'required': False, 'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {2: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'browser:acceptDrop:atRow:column:dropOperation:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'i', u'q')}, 5: {'type': sel32or64(u'i', u'q')}, 6: {'type': 'I'}}})
    r('NSObject', b'browser:canDragRowsWithIndexes:inColumn:withEvent:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'i', u'q')}, 5: {'type': b'@'}}})
    r('NSObject', b'browser:child:ofItem:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(b'i', b'q')}, 4: {'type': b'@'}}})
    r('NSObject', b'browser:createRowsForColumn:inMatrix:', {'required': False, 'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}, 4: {'type': b'@'}}})
    r('NSObject', b'browser:didChangeLastColumn:toColumn:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(b'i', b'q')}, 4: {'type': sel32or64(b'i', b'q')}}})
    r('NSObject', b'browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:', {'required': False, 'retval': {'type': '@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'i', u'q')}, 5: {'type': b'@'}, 6: {'type': sel32or64(b'^{_NSPoint=ff}', b'^{CGPoint=dd}'), 'type_modifier': b'N'}}})
    r('NSObject', b'browser:headerViewControllerForItem:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'browser:heightOfRow:inColumn:', {'required': False, 'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:isColumnValid:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:isLeafItem:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}, 5: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:', {'required': False, 'retval': {'type': sel32or64(u'i', u'q')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}, 4: {'type': sel32or64(u'i', u'q')}, 5: {'type': sel32or64(u'i', u'q')}, 6: {'type': b'@'}}})
    r('NSObject', b'browser:numberOfChildrenOfItem:', {'required': False, 'retval': {'type': sel32or64(b'i', b'q')}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'browser:numberOfRowsInColumn:', {'required': False, 'retval': {'type': sel32or64(u'i', u'q')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:objectValueForItem:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'browser:previewViewControllerForLeafItem:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'browser:selectCellWithString:inColumn:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:selectRow:inColumn:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:selectionIndexesForProposedSelection:inColumn:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(b'i', b'q')}}})
    r('NSObject', b'browser:setObjectValue:forItem:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'browser:shouldEditItem:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'browser:shouldShowCellExpansionForRow:column:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:shouldSizeColumn:forUserResize:toWidth:', {'required': False, 'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}, 4: {'type': 'Z'}, 5: {'type': sel32or64(u'f', u'd')}}})
    r('NSObject', b'browser:shouldTypeSelectForEvent:withCurrentSearchString:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'browser:sizeToFitWidthOfColumn:', {'required': False, 'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:titleOfColumn:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:typeSelectStringForRow:inColumn:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:validateDrop:proposedRow:column:dropOperation:', {'required': False, 'retval': {'type': 'I'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(b'^i', b'^q'), 'type_modifier': b'N'}, 5: {'type': sel32or64(b'^i', b'^q'), 'type_modifier': b'N'}, 6: {'type': sel32or64(b'^I', b'^Q'), 'type_modifier': b'N'}}})
    r('NSObject', b'browser:willDisplayCell:atRow:column:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'i', u'q')}, 5: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'browser:writeRowsWithIndexes:inColumn:toPasteboard:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'i', u'q')}, 5: {'type': b'@'}}})
    r('NSObject', b'browserColumnConfigurationDidChange:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'browserDidScroll:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'browserWillScroll:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'buttonToolTip', {'required': True, 'retval': {'type': b'@'}})
    r('NSObject', b'canBeDisabled', {'required': True, 'retval': {'type': 'Z'}})
    r('NSObject', b'cellBaselineOffset', {'required': True, 'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}})
    r('NSObject', b'cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:', {'required': True, 'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 4: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 5: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'cellSize', {'required': True, 'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSObject', b'changeSpelling:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'characterIndexForPoint:', {'required': True, 'retval': {'type': sel32or64(u'I', u'Q')}, 'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSObject', b'characterIndexForPoint:', {'required': True, 'retval': {'type': sel32or64(u'I', u'Q')}, 'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSObject', b'collectionView:acceptDrop:index:dropOperation:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'i', u'q')}, 5: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'collectionView:canDragItemsAtIndexes:withEvent:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'collectionView:draggingImageForItemsAtIndexes:withEvent:offset:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}, 5: {'type': sel32or64(u'^{_NSPoint=ff}', u'^{CGPoint=dd}'), 'type_modifier': b'N'}}})
    r('NSObject', b'collectionView:draggingSession:endedAtPoint:dragOperation:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(b'{_NSPoint=ff}', b'{CGPoint=dd}')}, 5: {'type': sel32or64(b'I', b'Q')}}})
    r('NSObject', b'collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexes:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 5: {'type': b'@'}}})
    r('NSObject', b'collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexes:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'collectionView:pasteboardWriterForItemAtIndex:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'collectionView:updateDraggingItemsForDrag:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'collectionView:validateDrop:proposedIndex:dropOperation:', {'required': False, 'retval': {'type': sel32or64(u'i', u'q')}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'^i', u'^q'), 'type_modifier': b'N'}, 5: {'type': sel32or64(u'^i', u'^q'), 'type_modifier': b'N'}}})
    r('NSObject', b'collectionView:writeItemsAtIndexes:toPasteboard:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'comboBox:completedString:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'comboBox:indexOfItemWithStringValue:', {'required': False, 'retval': {'type': sel32or64(u'I', u'Q')}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'comboBox:objectValueForItemAtIndex:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'comboBoxCell:completedString:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'comboBoxCell:indexOfItemWithStringValue:', {'required': False, 'retval': {'type': sel32or64(u'I', u'Q')}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'comboBoxCell:objectValueForItemAtIndex:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'comboBoxSelectionDidChange:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'comboBoxSelectionIsChanging:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'comboBoxWillDismiss:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'comboBoxWillPopUp:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'concludeDragOperation:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'confinementRectForMenu:onScreen:', {'required': False, 'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'contentView', {'required': False, 'retval': {'type': b'@'}})
    r('NSObject', b'contentViewAtIndex:effectiveCharacterRange:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': sel32or64(b'I', b'Q')}, 3: {'type': sel32or64(b'^{_NSRange=II}', b'^{_NSRange=QQ}')}}})
    r('NSObject', b'control:didFailToFormatString:errorDescription:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'control:didFailToValidatePartialString:errorDescription:', {'required': False, 'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'control:isValidObject:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'control:textShouldBeginEditing:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'control:textShouldEndEditing:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'control:textView:completions:forPartialWordRange:indexOfSelectedItem:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}, 5: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 6: {'null_accepted': False, 'type': sel32or64(b'^i', b'^q'), 'type_modifier': b'N'}}})
    r('NSObject', b'control:textView:doCommandBySelector:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'sel_of_type': b'v@:@', 'type': ':'}}})
    r('NSObject', b'conversationIdentifier', {'required': True, 'retval': {'type': sel32or64(u'i', u'q')}})
    r('NSObject', b'currentMode', {'required': True, 'retval': {'type': 'i'}})
    r('NSObject', b'customWindowsToEnterFullScreenForWindow:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'customWindowsToExitFullScreenForWindow:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'datePickerCell:validateProposedDateValue:timeInterval:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': '^@', 'type_modifier': b'N'}, 4: {'type': sel32or64(u'^f', u'^d'), 'type_modifier': b'N'}}})
    r('NSObject', b'defaultAnimationForKey:', {'required': True, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'detachColorList:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'detachableWindowForPopover:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'didReplaceCharacters', {'required': False, 'retval': {'type': b'v'}})
    r('NSObject', b'doCommandBySelector:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'sel_of_type': b'v@:@', 'type': ':'}}})
    r('NSObject', b'doCommandBySelector:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'sel_of_type': b'v@:@', 'type': ':'}}})
    r('NSObject', b'doCommandBySelector:client:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'sel_of_type': b'v@:@', 'type': ':'}, 3: {'type': b'@'}}})
    r('NSObject', b'dockMenu', {'required': False, 'retval': {'type': b'@'}})
    r('NSObject', b'draggedImage', {'required': True, 'retval': {'type': b'@'}})
    r('NSObject', b'draggedImageLocation', {'required': True, 'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}})
    r('NSObject', b'draggingDestinationWindow', {'required': True, 'retval': {'type': b'@'}})
    r('NSObject', b'draggingEnded:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'draggingEntered:', {'required': False, 'retval': {'type': sel32or64(u'I', u'Q')}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'draggingExited:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'draggingFormation', {'retval': {'type': sel32or64(b'i', b'q')}})
    r('NSObject', b'draggingLocation', {'required': True, 'retval': {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}})
    r('NSObject', b'draggingPasteboard', {'required': True, 'retval': {'type': b'@'}})
    r('NSObject', b'draggingSequenceNumber', {'required': True, 'retval': {'type': sel32or64(u'i', u'q')}})
    r('NSObject', b'draggingSession:endedAtPoint:operation:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(b'{_NSPoint=ff}', b'{CGPoint=dd}')}, 4: {'type': sel32or64(b'I', b'Q')}}})
    r('NSObject', b'draggingSession:movedToPoint:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(b'{_NSPoint=ff}', b'{CGPoint=dd}')}}})
    r('NSObject', b'draggingSession:sourceOperationMaskForDraggingContext:', {'required': True, 'retval': {'type': sel32or64(b'I', b'Q')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(b'i', b'q')}}})
    r('NSObject', b'draggingSession:willBeginAtPoint:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(b'{_NSPoint=ff}', b'{CGPoint=dd}')}}})
    r('NSObject', b'draggingSource', {'required': True, 'retval': {'type': b'@'}})
    r('NSObject', b'draggingSourceOperationMask', {'required': True, 'retval': {'type': sel32or64(u'I', u'Q')}})
    r('NSObject', b'draggingUpdated:', {'required': False, 'retval': {'type': sel32or64(u'I', u'Q')}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'drawCharactersInRange:forContentView:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 3: {'type': b'@'}}})
    r('NSObject', b'drawWithFrame:inView:', {'required': True, 'retval': {'type': 'v'}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': b'@'}}})
    r('NSObject', b'drawWithFrame:inView:characterIndex:', {'required': True, 'retval': {'type': 'v'}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'drawWithFrame:inView:characterIndex:layoutManager:', {'required': True, 'retval': {'type': 'v'}, 'arguments': {2: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'I', u'Q')}, 5: {'type': b'@'}}})
    r('NSObject', b'drawerDidClose:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'drawerDidOpen:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'drawerShouldClose:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'drawerShouldOpen:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'drawerWillClose:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'drawerWillOpen:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'drawerWillResizeContents:toSize:', {'required': False, 'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSObject', b'drawsVerticallyForCharacterAtIndex:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'editable', {'retval': {'type': b'Z'}})
    r('NSObject', b'enumerateDraggingItemsWithOptions:forView:classes:searchOptions:usingBlock:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': sel32or64(b'I', b'Q')}, 3: {'type': b'@'}, 4: {'type': b'@'}, 5: {'type': b'@'}, 6: {'type': b'@?'}}})
    r('NSObject', b'findBarView', {'retval': {'type': b'@'}})
    r('NSObject', b'findBarViewDidChangeHeight', {'required': True, 'retval': {'type': b'v'}})
    r('NSObject', b'findBarVisible', {'retval': {'type': b'Z'}})
    r('NSObject', b'firstRectForCharacterRange:', {'required': True, 'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSObject', b'firstRectForCharacterRange:actualRange:', {'required': True, 'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type': sel32or64(u'^{_NSRange=II}', u'^{_NSRange=QQ}'), 'type_modifier': b'o'}}})
    r('NSObject', b'firstSelectedRange', {'retval': {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}})
    r('NSObject', b'fractionOfDistanceThroughGlyphForPoint:', {'required': False, 'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSObject', b'hasMarkedText', {'required': True, 'retval': {'type': 'Z'}})
    r('NSObject', b'hasMarkedText', {'required': True, 'retval': {'type': 'Z'}})
    r('NSObject', b'highlight:withFrame:inView:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': 'Z'}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 4: {'type': b'@'}}})
    r('NSObject', b'identifier', {'retval': {'type': b'@'}})
    r('NSObject', b'ignoreModifierKeysForDraggingSession:', {'required': False, 'retval': {'type': b'Z'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'ignoreSpelling:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'image:didLoadPartOfRepresentation:withValidRows:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'image:didLoadRepresentation:withStatus:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'image:didLoadRepresentationHeader:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'image:willLoadRepresentation:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'imageDidNotDraw:inRect:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSObject', b'initWithPasteboardPropertyList:ofType:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'initWithPickerMask:colorPanel:', {'required': True, 'retval': {'type': b'@'}, 'arguments': {2: {'type': sel32or64(u'I', u'Q')}, 3: {'type': b'@'}}})
    r('NSObject', b'inputClientBecomeActive:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'inputClientDisabled:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'inputClientEnabled:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'inputClientResignActive:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': '^I', 'type_modifier': b'n', 'c_array_length_in_arg': 3}, 3: {'type': sel32or64(u'I', u'Q')}, 4: {'type': sel32or64(u'I', u'Q')}, 5: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'insertNewButtonImage:in:', {'required': True, 'retval': {'type': 'v'}, 'arguments': {2: {'type': '@'}, 3: {'type': '@'}}})
    r('NSObject', b'insertText:', {'required': True, 'retval': {'type': 'v'}, 'arguments': {2: {'type': '@'}}})
    r('NSObject', b'insertText:client:', {'required': True, 'retval': {'type': 'v'}, 'arguments': {2: {'type': '@'}, 3: {'type': '@'}}})
    r('NSObject', b'insertText:replacementRange:', {'required': True, 'retval': {'type': 'v'}, 'arguments': {2: {'type': '@'}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSObject', b'keyPathsForValuesAffectingPreview', {'required': False, 'retval': {'type': b'@'}})
    r('NSObject', b'layoutManager:didCompleteLayoutForTextContainer:atEnd:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': 'Z'}}})
    r('NSObject', b'layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': 'Z'}, 5: {'type': sel32or64(u'I', u'Q')}, 6: {'type': sel32or64(u'^{_NSRange=II}', u'^{_NSRange=QQ}'), 'type_modifier': b'o'}}})
    r('NSObject', b'layoutManagerDidInvalidateLayout:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'layoutOptions', {'required': True, 'retval': {'type': sel32or64(b'I', b'Q')}})
    r('NSObject', b'layoutOrientation', {'required': True, 'retval': {'type': sel32or64(b'i', b'q')}})
    r('NSObject', b'localizedSummaryItems', {'required': True, 'retval': {'type': b'@'}})
    r('NSObject', b'localizedTitlesForItem:', {'required': True, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'markedRange', {'required': True, 'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSObject', b'markedRange', {'required': True, 'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSObject', b'markedTextAbandoned:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'markedTextSelectionChanged:client:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 3: {'type': b'@'}}})
    r('NSObject', b'menu:updateItem:atIndex:shouldCancel:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'i', u'q')}, 5: {'type': 'Z'}}})
    r('NSObject', b'menu:willHighlightItem:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'menuDidClose:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'menuHasKeyEquivalent:forEvent:target:action:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': '^@', 'type_modifier': b'o'}, 5: {'type': '^:', 'type_modifier': b'o'}}})
    r('NSObject', b'menuNeedsUpdate:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'menuWillOpen:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'minContentSize', {'required': True, 'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}})
    r('NSObject', b'mouseDownOnCharacterIndex:atCoordinate:withModifier:client:', {'required': True, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'I', u'Q')}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 4: {'type': sel32or64(u'I', u'Q')}, 5: {'type': b'@'}}})
    r('NSObject', b'mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:', {'required': True, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': sel32or64(u'I', u'Q')}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 4: {'type': sel32or64(u'I', u'Q')}, 5: {'type': b'@'}}})
    r('NSObject', b'mouseUpOnCharacterIndex:atCoordinate:withModifier:client:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': sel32or64(u'I', u'Q')}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 4: {'type': sel32or64(u'I', u'Q')}, 5: {'type': b'@'}}})
    r('NSObject', b'namesOfPromisedFilesDroppedAtDestination:', {'required': True, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'numberOfItemsInComboBox:', {'required': False, 'retval': {'type': sel32or64(u'i', u'q')}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'numberOfItemsInComboBoxCell:', {'required': False, 'retval': {'type': sel32or64(u'i', u'q')}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'numberOfItemsInMenu:', {'required': False, 'retval': {'type': sel32or64(u'i', u'q')}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'numberOfRowsInTableView:', {'required': False, 'retval': {'type': sel32or64(u'i', u'q')}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'numberOfValidItemsForDrop', {'retval': {'type': sel32or64(b'i', b'q')}})
    r('NSObject', b'outlineView:acceptDrop:item:childIndex:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}, 5: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'outlineView:child:ofItem:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}, 4: {'type': b'@'}}})
    r('NSObject', b'outlineView:dataCellForTableColumn:item:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'outlineView:didAddRowView:forRow:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(b'i', b'q')}}})
    r('NSObject', b'outlineView:didClickTableColumn:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'outlineView:didDragTableColumn:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'outlineView:didRemoveRowView:forRow:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(b'i', b'q')}}})
    r('NSObject', b'outlineView:draggingSession:endedAtPoint:operation:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(b'{_NSPoint=ff}', b'{CGPoint=dd}')}, 5: {'type': sel32or64(b'I', b'Q')}}})
    r('NSObject', b'outlineView:draggingSession:willBeginAtPoint:forItems:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(b'{_NSPoint=ff}', b'{CGPoint=dd}')}, 5: {'type': b'@'}}})
    r('NSObject', b'outlineView:heightOfRowByItem:', {'required': False, 'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'outlineView:isGroupItem:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'outlineView:isItemExpandable:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'outlineView:itemForPersistentObject:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'outlineView:mouseDownInHeaderOfTableColumn:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'outlineView:nextTypeSelectMatchFromItem:toItem:forString:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}, 5: {'type': b'@'}}})
    r('NSObject', b'outlineView:numberOfChildrenOfItem:', {'required': False, 'retval': {'type': sel32or64(u'i', u'q')}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'outlineView:objectValueForTableColumn:byItem:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'outlineView:pasteboardWriterForItem:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'outlineView:persistentObjectForItem:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'outlineView:rowViewForItem:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'outlineView:selectionIndexesForProposedSelection:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'outlineView:setObjectValue:forTableColumn:byItem:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}, 5: {'type': b'@'}}})
    r('NSObject', b'outlineView:shouldCollapseItem:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'outlineView:shouldEditTableColumn:item:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'outlineView:shouldExpandItem:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'outlineView:shouldReorderColumn:toColumn:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'outlineView:shouldSelectItem:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'outlineView:shouldSelectTableColumn:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'outlineView:shouldShowCellExpansionForTableColumn:item:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'outlineView:shouldShowOutlineCellForItem:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'outlineView:shouldTrackCell:forTableColumn:item:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}, 5: {'type': b'@'}}})
    r('NSObject', b'outlineView:shouldTypeSelectForEvent:withCurrentSearchString:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'outlineView:sizeToFitWidthOfColumn:', {'required': False, 'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'outlineView:sortDescriptorsDidChange:', {'required': False, 'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'^{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'N'}, 5: {'type': b'@'}, 6: {'type': b'@'}, 7: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSObject', b'outlineView:typeSelectStringForTableColumn:item:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'outlineView:updateDraggingItemsForDrag:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'outlineView:validateDrop:proposedItem:proposedChildIndex:', {'required': False, 'retval': {'type': sel32or64(u'I', u'Q')}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}, 5: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'outlineView:viewForTableColumn:item:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'outlineView:willDisplayCell:forTableColumn:item:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}, 5: {'type': b'@'}}})
    r('NSObject', b'outlineView:willDisplayOutlineCell:forTableColumn:item:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}, 5: {'type': b'@'}}})
    r('NSObject', b'outlineView:writeItems:toPasteboard:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'outlineViewColumnDidMove:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'outlineViewColumnDidResize:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'outlineViewItemDidCollapse:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'outlineViewItemDidExpand:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'outlineViewItemWillCollapse:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'outlineViewItemWillExpand:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'outlineViewSelectionDidChange:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'outlineViewSelectionIsChanging:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'panel:didChangeToDirectoryURL:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'panel:shouldEnableURL:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'panel:userEnteredFilename:confirmed:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': 'Z'}}})
    r('NSObject', b'panel:validateURL:error:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': '^@', 'type_modifier': b'o'}}})
    r('NSObject', b'panel:willExpand:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': 'Z'}}})
    r('NSObject', b'panelSelectionDidChange:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'pasteboard:item:provideDataForType:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'pasteboardFinishedWithDataProvider:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'pasteboardPropertyListForType:', {'required': True, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'pathCell:willDisplayOpenPanel:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'pathCell:willPopUpMenu:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'pathControl:acceptDrop:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'pathControl:shouldDragPathComponentCell:withPasteboard:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'pathControl:validateDrop:', {'required': False, 'retval': {'type': sel32or64(u'I', u'Q')}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'pathControl:willDisplayOpenPanel:', {'required': False, 'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'pathControl:willPopUpMenu:', {'required': False, 'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'performActionForItem:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'performDragOperation:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'popoverDidClose:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'popoverDidShow:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'popoverShouldClose:', {'required': False, 'retval': {'type': b'Z'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'popoverWillClose:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'popoverWillShow:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'prepareForDragOperation:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'provideNewButtonImage', {'required': True, 'retval': {'type': b'@'}})
    r('NSObject', b'provideNewView:', {'required': True, 'retval': {'type': b'@'}, 'arguments': {2: {'type': 'Z'}}})
    r('NSObject', b'readableTypesForPasteboard:', {'required': True, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'readingOptionsForType:pasteboard:', {'required': False, 'retval': {'type': sel32or64(b'I', b'Q')}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'rectsForCharacterRange:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSObject', b'replaceCharactersInRange:withString:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 3: {'type': b'@'}}})
    r('NSObject', b'restoreWindowWithIdentifier:state:completionHandler:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@?'}}})
    r('NSObject', b'rootItemForBrowser:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'ruleEditor:child:forCriterion:withRowType:', {'required': True, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}, 4: {'type': b'@'}, 5: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'ruleEditor:displayValueForCriterion:inRow:', {'required': True, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'ruleEditor:numberOfChildrenForCriterion:withRowType:', {'required': True, 'retval': {'type': sel32or64(u'i', u'q')}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}, 5: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'ruleEditorRowsDidChange:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'scrollRangeToVisible:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSObject', b'searchForItemsWithSearchString:resultLimit:matchedItemHandler:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}, 4: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': b'^v'}, 1: {'type': b'@'}}}, 'type': '@?'}}})
    r('NSObject', b'selectable', {'retval': {'type': b'Z'}})
    r('NSObject', b'selectedRange', {'required': True, 'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSObject', b'selectedRange', {'required': True, 'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}})
    r('NSObject', b'selectedRanges', {'retval': {'type': b'@'}})
    r('NSObject', b'selectionShouldChangeInOutlineView:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'selectionShouldChangeInTableView:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'setAllowsMultipleSelection:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'Z'}}})
    r('NSObject', b'setAnimatesToDestination:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'Z'}}})
    r('NSObject', b'setAnimations:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'setAttachment:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'setColor:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'setDockTile:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'setDraggingFormation:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': sel32or64(b'i', b'q')}}})
    r('NSObject', b'setEditable:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'Z'}}})
    r('NSObject', b'setFindBarView:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'setFindBarVisible:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'Z'}}})
    r('NSObject', b'setFirstSelectedRange:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSObject', b'setIdentifier:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'setIntAttribute:value:forGlyphAtIndex:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': sel32or64(u'i', u'q')}, 3: {'type': sel32or64(u'i', u'q')}, 4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'setMarkedText:selectedRange:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSObject', b'setMarkedText:selectedRange:replacementRange:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 4: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSObject', b'setMode:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': 'i'}}})
    r('NSObject', b'setNumberOfValidItemsForDrop:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': sel32or64(b'i', b'q')}}})
    r('NSObject', b'setSelectable:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'Z'}}})
    r('NSObject', b'setSelectedRanges:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'setString:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'setVisibleCharacterRanges:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'shouldReplaceCharactersInRanges:withStrings:', {'required': False, 'retval': {'type': b'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'showAllHelpTopicsForSearchString:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'slideDraggedImageTo:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSObject', b'sound:didFinishPlaying:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': 'Z'}}})
    r('NSObject', b'speechRecognizer:didRecognizeCommand:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'speechSynthesizer:didEncounterErrorAtIndex:ofString:message:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'I', u'Q')}, 4: {'type': b'@'}, 5: {'type': b'@'}}})
    r('NSObject', b'speechSynthesizer:didEncounterSyncMessage:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'speechSynthesizer:didFinishSpeaking:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': 'Z'}}})
    r('NSObject', b'speechSynthesizer:willSpeakPhoneme:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': 's'}}})
    r('NSObject', b'speechSynthesizer:willSpeakWord:ofString:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 4: {'type': b'@'}}})
    r('NSObject', b'splitView:additionalEffectiveRectOfDividerAtIndex:', {'required': False, 'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'splitView:canCollapseSubview:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'splitView:constrainMaxCoordinate:ofSubviewAt:', {'required': False, 'retval': {'type': sel32or64(b'f', b'd')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(b'f', b'd')}, 4: {'type': sel32or64(b'i', b'q')}}})
    r('NSObject', b'splitView:constrainMinCoordinate:ofSubviewAt:', {'required': False, 'retval': {'type': sel32or64(b'f', b'd')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(b'f', b'd')}, 4: {'type': sel32or64(b'i', b'q')}}})
    r('NSObject', b'splitView:constrainSplitPosition:ofSubviewAt:', {'required': False, 'retval': {'type': sel32or64(b'f', b'd')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(b'f', b'd')}, 4: {'type': sel32or64(b'i', b'q')}}})
    r('NSObject', b'splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:', {'required': False, 'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'splitView:resizeSubviewsWithOldSize:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSObject', b'splitView:shouldAdjustSizeOfSubview:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'splitView:shouldHideDividerAtIndex:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'splitViewDidResizeSubviews:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'splitViewWillResizeSubviews:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'string', {'retval': {'type': b'@'}})
    r('NSObject', b'stringAtIndex:effectiveRange:endsWithSearchBoundary:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': sel32or64(b'I', b'Q')}, 3: {'type': sel32or64(b'^{_NSRange=II}', b'^{_NSRange=QQ}')}, 4: {'type': b'^Z'}}})
    r('NSObject', b'stringLength', {'required': False, 'retval': {'type': sel32or64(b'I', b'Q')}})
    r('NSObject', b'supportsMode:', {'required': True, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': 'i'}}})
    r('NSObject', b'tabView:didSelectTabViewItem:', {'required': False, 'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tabView:shouldSelectTabViewItem:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tabView:willSelectTabViewItem:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tabViewDidChangeNumberOfTabViewItems:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'tableView:acceptDrop:row:dropOperation:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'i', u'q')}, 5: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'tableView:dataCellForTableColumn:row:', {'required': False, 'retval': {'type': '@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:didAddRowView:forRow:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(b'i', b'q')}}})
    r('NSObject', b'tableView:didClickTableColumn:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tableView:didDragTableColumn:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tableView:didRemoveRowView:forRow:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(b'i', b'q')}}})
    r('NSObject', b'tableView:draggingSession:endedAtPoint:operation:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(b'{_NSPoint=ff}', b'{CGPoint=dd}')}, 5: {'type': sel32or64(b'I', b'Q')}}})
    r('NSObject', b'tableView:draggingSession:willBeginAtPoint:forRowIndexes:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(b'{_NSPoint=ff}', b'{CGPoint=dd}')}, 5: {'type': b'@'}}})
    r('NSObject', b'tableView:heightOfRow:', {'required': False, 'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:isGroupRow:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:mouseDownInHeaderOfTableColumn:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'tableView:nextTypeSelectMatchFromRow:toRow:forString:', {'required': False, 'retval': {'type': sel32or64(u'i', u'q')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}, 4: {'type': sel32or64(u'i', u'q')}, 5: {'type': b'@'}}})
    r('NSObject', b'tableView:objectValueForTableColumn:row:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:pasteboardWriterForRow:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(b'i', b'q')}}})
    r('NSObject', b'tableView:rowViewForRow:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(b'i', b'q')}}})
    r('NSObject', b'tableView:selectionIndexesForProposedSelection:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tableView:setObjectValue:forTableColumn:row:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}, 5: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:shouldEditTableColumn:row:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:shouldReorderColumn:toColumn:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:shouldSelectRow:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:shouldSelectTableColumn:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tableView:shouldShowCellExpansionForTableColumn:row:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:shouldTrackCell:forTableColumn:row:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}, 5: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:shouldTypeSelectForEvent:withCurrentSearchString:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'tableView:sizeToFitWidthOfColumn:', {'required': False, 'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:sortDescriptorsDidChange:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(b'^{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'N'}, 5: {'type': b'@'}, 6: {'type': sel32or64(u'i', u'q')}, 7: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSObject', b'tableView:typeSelectStringForTableColumn:row:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:updateDraggingItemsForDrag:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tableView:validateDrop:proposedRow:proposedDropOperation:', {'required': False, 'retval': {'type': sel32or64(u'I', u'Q')}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'i', u'q')}, 5: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'tableView:viewForTableColumn:row:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(b'i', b'q')}}})
    r('NSObject', b'tableView:willDisplayCell:forTableColumn:row:', {'required': False, 'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}, 5: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'tableView:writeRowsWithIndexes:toPasteboard:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'tableViewColumnDidMove:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'tableViewColumnDidResize:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'tableViewSelectionDidChange:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'tableViewSelectionIsChanging:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'tag', {'required': True, 'retval': {'type': sel32or64(u'i', u'q')}})
    r('NSObject', b'terminate:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'textDidBeginEditing:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'textDidChange:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'textDidEndEditing:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'textShouldBeginEditing:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'textShouldEndEditing:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'textStorageDidProcessEditing:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'textStorageWillProcessEditing:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'textView:URLForContentsOfTextAttachment:atIndex:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(b'I', b'Q')}}})
    r('NSObject', b'textView:clickedOnCell:inRect:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSObject', b'textView:clickedOnCell:inRect:atIndex:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'textView:clickedOnLink:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'textView:clickedOnLink:atIndex:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'textView:completions:forPartialWordRange:indexOfSelectedItem:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 5: {'type': sel32or64(u'^i', u'^q'), 'type_modifier': b'N'}}})
    r('NSObject', b'textView:didCheckTextInRange:types:options:results:orthography:wordCount:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 4: {'type': sel32or64(u'i', u'q')}, 5: {'type': b'@'}, 6: {'type': b'@'}, 7: {'type': b'@'}, 8: {'type': sel32or64(u'i', u'q')}}})
    r('NSObject', b'textView:doCommandBySelector:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'sel_of_type': b'v@:@', 'type': ':'}}})
    r('NSObject', b'textView:doubleClickedOnCell:inRect:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(b'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSObject', b'textView:doubleClickedOnCell:inRect:atIndex:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'textView:draggedCell:inRect:event:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type': b'@'}}})
    r('NSObject', b'textView:draggedCell:inRect:event:atIndex:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 5: {'type': b'@'}, 6: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'textView:menu:forEvent:atIndex:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}, 5: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'textView:shouldChangeTextInRange:replacementString:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 4: {'type': b'@'}}})
    r('NSObject', b'textView:shouldChangeTextInRanges:replacementStrings:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'textView:shouldChangeTypingAttributes:toAttributes:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'textView:shouldSetSpellingState:range:', {'required': False, 'retval': {'type': sel32or64(u'i', u'q')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'i', u'q')}, 4: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSObject', b'textView:willChangeSelectionFromCharacterRange:toCharacterRange:', {'required': False, 'retval': {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 4: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}}})
    r('NSObject', b'textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'textView:willCheckTextInRange:options:types:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSRange=II}', u'{_NSRange=QQ}')}, 4: {'type': b'@'}, 5: {'type': sel32or64(u'^i', u'^q'), 'type_modifier': b'N'}}})
    r('NSObject', b'textView:willDisplayToolTip:forCharacterAtIndex:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'textView:writablePasteboardTypesForCell:atIndex:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'textView:writeCell:atIndex:toPasteboard:type:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'I', u'Q')}, 5: {'type': b'@'}, 6: {'type': b'@'}}})
    r('NSObject', b'textViewDidChangeSelection:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'textViewDidChangeTypingAttributes:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'i', u'q')}, 5: {'type': sel32or64(u'^i', u'^q'), 'type_modifier': b'o'}}})
    r('NSObject', b'tokenField:displayStringForRepresentedObject:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tokenField:editingStringForRepresentedObject:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tokenField:hasMenuForRepresentedObject:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tokenField:menuForRepresentedObject:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tokenField:readFromPasteboard:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tokenField:representedObjectForEditingString:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tokenField:shouldAddObjects:atIndex:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'tokenField:styleForRepresentedObject:', {'required': False, 'retval': {'type': sel32or64(u'I', u'Q')}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tokenField:writeRepresentedObjects:toPasteboard:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'i', u'q')}, 5: {'type': sel32or64(u'^i', u'^q'), 'type_modifier': b'o'}}})
    r('NSObject', b'tokenFieldCell:displayStringForRepresentedObject:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tokenFieldCell:editingStringForRepresentedObject:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tokenFieldCell:hasMenuForRepresentedObject:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tokenFieldCell:menuForRepresentedObject:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tokenFieldCell:readFromPasteboard:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tokenFieldCell:representedObjectForEditingString:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tokenFieldCell:shouldAddObjects:atIndex:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'tokenFieldCell:styleForRepresentedObject:', {'required': False, 'retval': {'type': sel32or64(u'I', u'Q')}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'tokenFieldCell:writeRepresentedObjects:toPasteboard:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': 'Z'}}})
    r('NSObject', b'toolbarAllowedItemIdentifiers:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'toolbarDefaultItemIdentifiers:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'toolbarDidRemoveItem:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'toolbarSelectableItemIdentifiers:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'toolbarWillAddItem:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:', {'required': True, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 4: {'type': b'@'}, 5: {'type': sel32or64(u'I', u'Q')}, 6: {'type': 'Z'}}})
    r('NSObject', b'trackMouse:inRect:ofView:untilMouseUp:', {'required': True, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 4: {'type': b'@'}, 5: {'type': 'Z'}}})
    r('NSObject', b'undoManagerForTextView:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'unmarkText', {'required': True, 'retval': {'type': b'v'}})
    r('NSObject', b'unmarkText', {'required': True, 'retval': {'type': b'v'}})
    r('NSObject', b'updateDraggingItemsForDrag:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'validAttributesForMarkedText', {'required': True, 'retval': {'type': b'@'}})
    r('NSObject', b'validAttributesForMarkedText', {'required': True, 'retval': {'type': b'@'}})
    r('NSObject', b'validateUserInterfaceItem:', {'required': True, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'viewSizeChanged:', {'required': True, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'visibleCharacterRanges', {'retval': {'type': b'@'}})
    r('NSObject', b'wantsPeriodicDraggingUpdates', {'required': False, 'retval': {'type': 'Z'}})
    r('NSObject', b'wantsToDelayTextChangeNotifications', {'required': True, 'retval': {'type': 'Z'}})
    r('NSObject', b'wantsToHandleMouseEvents', {'required': True, 'retval': {'type': 'Z'}})
    r('NSObject', b'wantsToInterpretAllKeystrokes', {'required': True, 'retval': {'type': 'Z'}})
    r('NSObject', b'wantsToTrackMouse', {'required': True, 'retval': {'type': 'Z'}})
    r('NSObject', b'wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:', {'required': True, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 4: {'type': b'@'}, 5: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'window:didDecodeRestorableState:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'window:shouldDragDocumentWithEvent:from:withPasteboard:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 5: {'type': b'@'}}})
    r('NSObject', b'window:shouldPopUpDocumentPathMenu:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'window:startCustomAnimationToEnterFullScreenWithDuration:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'd'}}})
    r('NSObject', b'window:startCustomAnimationToExitFullScreenWithDuration:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'd'}}})
    r('NSObject', b'window:willEncodeRestorableState:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'window:willPositionSheet:usingRect:', {'required': False, 'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSObject', b'window:willResizeForVersionBrowserWithMaxPreferredSize:maxAllowedSize:', {'required': False, 'retval': {'type': sel32or64(b'{_NSSize=ff}', b'{CGSize=dd}')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(b'{_NSSize=ff}', b'{CGSize=dd}')}, 4: {'type': sel32or64(b'{_NSSize=ff}', b'{CGSize=dd}')}}})
    r('NSObject', b'window:willUseFullScreenContentSize:', {'required': False, 'retval': {'type': sel32or64(b'{_NSSize=ff}', b'{CGSize=dd}')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(b'{_NSSize=ff}', b'{CGSize=dd}')}}})
    r('NSObject', b'window:willUseFullScreenPresentationOptions:', {'required': False, 'retval': {'type': sel32or64(b'I', b'Q')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(b'I', b'Q')}}})
    r('NSObject', b'windowDidBecomeKey:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowDidBecomeMain:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowDidChangeScreen:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowDidChangeScreenProfile:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowDidDeminiaturize:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowDidEndLiveResize:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowDidEndSheet:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowDidEnterFullScreen:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowDidEnterVersionBrowser:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowDidExitFullScreen:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowDidExitVersionBrowser:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowDidExpose:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowDidFailToEnterFullScreen:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowDidFailToExitFullScreen:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowDidMiniaturize:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowDidMove:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowDidResignKey:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowDidResignMain:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowDidResize:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowDidUpdate:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowLevel', {'required': False, 'retval': {'type': sel32or64(u'i', u'q')}})
    r('NSObject', b'windowShouldClose:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowShouldZoom:toFrame:', {'required': False, 'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSObject', b'windowWillBeginSheet:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowWillClose:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowWillEnterFullScreen:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowWillEnterVersionBrowser:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowWillExitFullScreen:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowWillExitVersionBrowser:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowWillMiniaturize:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowWillMove:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowWillResize:toSize:', {'required': False, 'retval': {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSSize=ff}', u'{CGSize=dd}')}}})
    r('NSObject', b'windowWillReturnFieldEditor:toObject:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'windowWillReturnUndoManager:', {'required': False, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowWillStartLiveResize:', {'required': False, 'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'windowWillUseStandardFrame:defaultFrame:', {'required': False, 'retval': {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', u'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSObject', b'writableTypesForPasteboard:', {'required': True, 'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'writingOptionsForType:pasteboard:', {'required': False, 'retval': {'type': sel32or64(b'I', b'Q')}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
finally:
    objc._updatingMetadata(False)
r = objc.registerMetaDataForSelector
objc._updatingMetadata(True)
try:
    r('NSObject', b'accessibilityActionDescription:', {'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'accessibilityActionNames', {'retval': {'type': b'@'}})
    r('NSObject', b'accessibilityArrayAttributeCount:', {'retval': {'type': sel32or64(b'I', b'Q')}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'accessibilityArrayAttributeValues:index:maxCount:', {'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(b'I', b'Q')}, 4: {'type': sel32or64(b'I', b'Q')}}})
    r('NSObject', b'accessibilityAttributeNames', {'retval': {'type': b'@'}})
    r('NSObject', b'accessibilityAttributeValue:', {'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'accessibilityAttributeValue:forParameter:', {'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'accessibilityFocusedUIElement', {'retval': {'type': b'@'}})
    r('NSObject', b'accessibilityHitTest:', {'retval': {'type': b'@'}, 'arguments': {2: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSObject', b'accessibilityIndexOfChild:', {'retval': {'type': sel32or64(b'I', b'Q')}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'accessibilityIsAttributeSettable:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'accessibilityIsIgnored', {'retval': {'type': 'Z'}})
    r('NSObject', b'accessibilityParameterizedAttributeNames', {'retval': {'type': b'@'}})
    r('NSObject', b'accessibilityPerformAction:', {'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'accessibilitySetOverrideValue:forAttribute:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'accessibilitySetValue:forAttribute:', {'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'application:delegateHandlesKey:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'awakeFromNib', {'retval': {'type': b'v'}})
    r('NSObject', b'bind:toObject:withKeyPath:options:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}, 5: {'type': b'@'}}})
    r('NSObject', b'changeColor:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'changeFont:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'commitEditing', {'retval': {'type': 'Z'}})
    r('NSObject', b'commitEditingAndReturnError:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type': b'^@'}}})
    r('NSObject', b'commitEditingWithDelegate:didCommitSelector:contextInfo:', {'retval': {'type': 'v'}, 'arguments': {2: {'type': b'@'}, 3: {'sel_of_type': b'v@:@Z^v', 'type': ':'}, 4: {'type': '^v'}}})
    r('NSObject', b'concludeDragOperation:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'controlTextDidBeginEditing:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'controlTextDidChange:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'controlTextDidEndEditing:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'defaultPlaceholderForMarker:withBinding:', {'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'discardEditing', {'retval': {'type': b'v'}})
    r('NSObject', b'draggedImage:beganAt:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSObject', b'draggedImage:beganAt:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSObject', b'draggedImage:endedAt:deposited:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 4: {'type': 'Z'}}})
    r('NSObject', b'draggedImage:endedAt:operation:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'draggedImage:endedAt:operation:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 4: {'type': sel32or64(u'I', u'Q')}}})
    r('NSObject', b'draggedImage:movedTo:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSObject', b'draggedImage:movedTo:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}}})
    r('NSObject', b'draggingEnded:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'draggingEntered:', {'retval': {'type': sel32or64(u'I', u'Q')}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'draggingExited:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'draggingSourceOperationMaskForLocal:', {'retval': {'type': sel32or64(u'I', u'Q')}, 'arguments': {2: {'type': 'Z'}}})
    r('NSObject', b'draggingSourceOperationMaskForLocal:', {'retval': {'type': sel32or64(u'I', u'Q')}, 'arguments': {2: {'type': 'Z'}}})
    r('NSObject', b'draggingUpdated:', {'retval': {'type': sel32or64(u'I', u'Q')}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'exposeBinding:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'exposedBindings', {'retval': {'type': b'@'}})
    r('NSObject', b'fontManager:willIncludeFont:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'ignoreModifierKeysWhileDragging', {'retval': {'type': 'Z'}})
    r('NSObject', b'ignoreModifierKeysWhileDragging', {'retval': {'type': 'Z'}})
    r('NSObject', b'infoForBinding:', {'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'isExplicitlyIncluded', {'retval': {'type': 'Z'}})
    r('NSObject', b'key', {'retval': {'type': b'@'}})
    r('NSObject', b'localizedKey', {'retval': {'type': b'@'}})
    r('NSObject', b'namesOfPromisedFilesDroppedAtDestination:', {'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'namesOfPromisedFilesDroppedAtDestination:', {'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'objectDidBeginEditing:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'objectDidEndEditing:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'optionDescriptionsForBinding:', {'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'outlineViewColumnDidMove:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'outlineViewColumnDidResize:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'outlineViewItemDidCollapse:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'outlineViewItemDidExpand:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'outlineViewItemWillCollapse:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'outlineViewItemWillExpand:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'outlineViewSelectionDidChange:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'outlineViewSelectionIsChanging:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'panel:compareFilename:with:caseSensitive:', {'retval': {'type': sel32or64(u'i', u'q')}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}, 5: {'type': 'Z'}}})
    r('NSObject', b'panel:directoryDidChange:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'panel:isValidFilename:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'panel:shouldShowFilename:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'pasteboard:provideDataForType:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'pasteboardChangedOwner:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'performDragOperation:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'prepareForDragOperation:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'readSelectionFromPasteboard:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'rulerView:didAddMarker:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'rulerView:didMoveMarker:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'rulerView:didRemoveMarker:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'rulerView:handleMouseDown:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'rulerView:locationForPoint:', {'retval': {'type': sel32or64(b'f', b'd')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(b'{_NSPoint=ff}', b'{CGPoint=dd}')}}})
    r('NSObject', b'rulerView:pointForLocation:', {'retval': {'type': sel32or64(b'{_NSPoint=ff}', b'{CGPoint=dd}')}, 'arguments': {2: {'type': b'@'}, 3: {'type': sel32or64(b'f', b'd')}}})
    r('NSObject', b'rulerView:shouldAddMarker:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'rulerView:shouldMoveMarker:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'rulerView:shouldRemoveMarker:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'rulerView:willAddMarker:atLocation:', {'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'f', u'd')}}})
    r('NSObject', b'rulerView:willMoveMarker:toLocation:', {'retval': {'type': sel32or64(u'f', u'd')}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(u'f', u'd')}}})
    r('NSObject', b'rulerView:willSetClientView:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
    r('NSObject', b'setDefaultPlaceholder:forMarker:withBinding:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'setKey:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'setLocalizedKey:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'setValue:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'tableView:writeRows:toPasteboard:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': b'@'}}})
    r('NSObject', b'unbind:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'validModesForFontPanel:', {'retval': {'type': sel32or64(u'I', u'Q')}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'validateMenuItem:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'validateToolbarItem:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'value', {'retval': {'type': b'@'}})
    r('NSObject', b'valueClassForBinding:', {'retval': {'type': '#'}, 'arguments': {2: {'type': b'@'}}})
    r('NSObject', b'view:stringForToolTip:point:userData:', {'retval': {'type': b'@'}, 'arguments': {2: {'type': b'@'}, 3: {'type': 'i'}, 4: {'type': sel32or64(u'{_NSPoint=ff}', u'{CGPoint=dd}')}, 5: {'type': '^v'}}})
    r('NSObject', b'wantsPeriodicDraggingUpdates', {'retval': {'type': 'Z'}})
    r('NSObject', b'writeSelectionToPasteboard:types:', {'retval': {'type': 'Z'}, 'arguments': {2: {'type': b'@'}, 3: {'type': b'@'}}})
finally:
    objc._updatingMetadata(False)
protocols={'NSSavePanelDelegateDeprecated': objc.informal_protocol('NSSavePanelDelegateDeprecated', [objc.selector(None, 'panel:compareFilename:with:caseSensitive:', sel32or64(b'i@:@@@Z', b'q@:@@@Z'), isRequired=False), objc.selector(None, 'panel:directoryDidChange:', b'v@:@@', isRequired=False), objc.selector(None, 'panel:shouldShowFilename:', b'Z@:@@', isRequired=False), objc.selector(None, 'panel:isValidFilename:', b'Z@:@@', isRequired=False)]), 'NSAccessibilityAdditions': objc.informal_protocol('NSAccessibilityAdditions', [objc.selector(None, 'accessibilitySetOverrideValue:forAttribute:', b'Z@:@@', isRequired=False)]), 'NSApplicationScriptingDelegation': objc.informal_protocol('NSApplicationScriptingDelegation', [objc.selector(None, 'application:delegateHandlesKey:', b'Z@:@@', isRequired=False)]), 'NSNibAwaking': objc.informal_protocol('NSNibAwaking', [objc.selector(None, 'awakeFromNib', b'v@:', isRequired=False)]), 'NSToolTipOwner': objc.informal_protocol('NSToolTipOwner', [objc.selector(None, 'view:stringForToolTip:point:userData:', sel32or64(b'@@:@i{_NSPoint=ff}^v', b'@@:@q{CGPoint=dd}^v'), isRequired=False)]), 'NSDraggingDestination': objc.informal_protocol('NSDraggingDestination', [objc.selector(None, 'wantsPeriodicDraggingUpdates', b'Z@:', isRequired=False), objc.selector(None, 'draggingExited:', b'v@:@', isRequired=False), objc.selector(None, 'draggingEnded:', b'v@:@', isRequired=False), objc.selector(None, 'concludeDragOperation:', b'v@:@', isRequired=False), objc.selector(None, 'performDragOperation:', b'Z@:@', isRequired=False), objc.selector(None, 'draggingEntered:', sel32or64(b'I@:@', b'Q@:@'), isRequired=False), objc.selector(None, 'prepareForDragOperation:', b'Z@:@', isRequired=False), objc.selector(None, 'draggingUpdated:', sel32or64(b'I@:@', b'Q@:@'), isRequired=False)]), 'NSOutlineViewNotifications': objc.informal_protocol('NSOutlineViewNotifications', [objc.selector(None, 'outlineViewItemWillExpand:', b'v@:@', isRequired=False), objc.selector(None, 'outlineViewSelectionDidChange:', b'v@:@', isRequired=False), objc.selector(None, 'outlineViewSelectionIsChanging:', b'v@:@', isRequired=False), objc.selector(None, 'outlineViewColumnDidResize:', b'v@:@', isRequired=False), objc.selector(None, 'outlineViewItemWillCollapse:', b'v@:@', isRequired=False), objc.selector(None, 'outlineViewItemDidExpand:', b'v@:@', isRequired=False), objc.selector(None, 'outlineViewColumnDidMove:', b'v@:@', isRequired=False), objc.selector(None, 'outlineViewItemDidCollapse:', b'v@:@', isRequired=False)]), 'NSDraggingSource': objc.informal_protocol('NSDraggingSource', [objc.selector(None, 'namesOfPromisedFilesDroppedAtDestination:', b'@@:@', isRequired=False), objc.selector(None, 'draggedImage:endedAt:operation:', sel32or64(b'v@:@{_NSPoint=ff}I', b'v@:@{CGPoint=dd}Q'), isRequired=False), objc.selector(None, 'draggedImage:beganAt:', sel32or64(b'v@:@{_NSPoint=ff}', b'v@:@{CGPoint=dd}'), isRequired=False), objc.selector(None, 'draggingSourceOperationMaskForLocal:', sel32or64(b'I@:Z', b'Q@:Z'), isRequired=False), objc.selector(None, 'draggedImage:movedTo:', sel32or64(b'v@:@{_NSPoint=ff}', b'v@:@{CGPoint=dd}'), isRequired=False), objc.selector(None, 'ignoreModifierKeysWhileDragging', b'Z@:', isRequired=False)]), 'NSPasteboardOwner': objc.informal_protocol('NSPasteboardOwner', [objc.selector(None, 'pasteboard:provideDataForType:', b'v@:@@', isRequired=False), objc.selector(None, 'pasteboardChangedOwner:', b'v@:@', isRequired=False)]), 'NSAccessibility': objc.informal_protocol('NSAccessibility', [objc.selector(None, 'accessibilityAttributeValue:', b'@@:@', isRequired=False), objc.selector(None, 'accessibilityParameterizedAttributeNames', b'@@:', isRequired=False), objc.selector(None, 'accessibilityArrayAttributeCount:', sel32or64(b'I@:@', b'Q@:@'), isRequired=False), objc.selector(None, 'accessibilityIsAttributeSettable:', b'Z@:@', isRequired=False), objc.selector(None, 'accessibilityAttributeValue:forParameter:', b'@@:@@', isRequired=False), objc.selector(None, 'accessibilityArrayAttributeValues:index:maxCount:', sel32or64(b'@@:@II', b'@@:@QQ'), isRequired=False), objc.selector(None, 'accessibilityActionNames', b'@@:', isRequired=False), objc.selector(None, 'accessibilityAttributeNames', b'@@:', isRequired=False), objc.selector(None, 'accessibilityIndexOfChild:', sel32or64(b'I@:@', b'Q@:@'), isRequired=False), objc.selector(None, 'accessibilityPerformAction:', b'v@:@', isRequired=False), objc.selector(None, 'accessibilityIsIgnored', b'Z@:', isRequired=False), objc.selector(None, 'accessibilityActionDescription:', b'@@:@', isRequired=False), objc.selector(None, 'accessibilityHitTest:', sel32or64(b'@@:{_NSPoint=ff}', b'@@:{CGPoint=dd}'), isRequired=False), objc.selector(None, 'accessibilitySetValue:forAttribute:', b'v@:@@', isRequired=False), objc.selector(None, 'accessibilityFocusedUIElement', b'@@:', isRequired=False)]), 'NSRulerMarkerClientViewDelegation': objc.informal_protocol('NSRulerMarkerClientViewDelegation', [objc.selector(None, 'rulerView:didRemoveMarker:', b'v@:@@', isRequired=False), objc.selector(None, 'rulerView:shouldRemoveMarker:', b'Z@:@@', isRequired=False), objc.selector(None, 'rulerView:shouldMoveMarker:', b'Z@:@@', isRequired=False), objc.selector(None, 'rulerView:locationForPoint:', sel32or64(b'f@:@{_NSPoint=ff}', b'd@:@{CGPoint=dd}'), isRequired=False), objc.selector(None, 'rulerView:willAddMarker:atLocation:', sel32or64(b'f@:@@f', b'd@:@@d'), isRequired=False), objc.selector(None, 'rulerView:didMoveMarker:', b'v@:@@', isRequired=False), objc.selector(None, 'rulerView:pointForLocation:', sel32or64(b'{_NSPoint=ff}@:@f', b'{CGPoint=dd}@:@d'), isRequired=False), objc.selector(None, 'rulerView:handleMouseDown:', b'v@:@@', isRequired=False), objc.selector(None, 'rulerView:willMoveMarker:toLocation:', sel32or64(b'f@:@@f', b'd@:@@d'), isRequired=False), objc.selector(None, 'rulerView:didAddMarker:', b'v@:@@', isRequired=False), objc.selector(None, 'rulerView:shouldAddMarker:', b'Z@:@@', isRequired=False), objc.selector(None, 'rulerView:willSetClientView:', b'v@:@@', isRequired=False)]), 'NSFontPanelValidationAdditions': objc.informal_protocol('NSFontPanelValidationAdditions', [objc.selector(None, 'validModesForFontPanel:', sel32or64(b'I@:@', b'Q@:@'), isRequired=False)]), 'NSToolbarItemValidation': objc.informal_protocol('NSToolbarItemValidation', [objc.selector(None, 'validateToolbarItem:', b'Z@:@', isRequired=False)]), 'NSKeyValueBindingCreation': objc.informal_protocol('NSKeyValueBindingCreation', [objc.selector(None, 'bind:toObject:withKeyPath:options:', b'v@:@@@@', isRequired=False), objc.selector(None, 'exposeBinding:', b'v@:@', isRequired=False), objc.selector(None, 'valueClassForBinding:', b'^{objc_class=}@:@', isRequired=False), objc.selector(None, 'unbind:', b'v@:@', isRequired=False), objc.selector(None, 'infoForBinding:', b'@@:@', isRequired=False), objc.selector(None, 'exposedBindings', b'@@:', isRequired=False), objc.selector(None, 'optionDescriptionsForBinding:', b'@@:@', isRequired=False)]), 'NSDictionaryControllerKeyValuePair': objc.informal_protocol('NSDictionaryControllerKeyValuePair', [objc.selector(None, 'setKey:', b'v@:@', isRequired=False), objc.selector(None, 'setLocalizedKey:', b'v@:@', isRequired=False), objc.selector(None, 'value', b'@@:', isRequired=False), objc.selector(None, 'isExplicitlyIncluded', b'Z@:', isRequired=False), objc.selector(None, 'setValue:', b'v@:@', isRequired=False), objc.selector(None, 'key', b'@@:', isRequired=False), objc.selector(None, 'localizedKey', b'@@:', isRequired=False)]), 'NSEditor': objc.informal_protocol('NSEditor', [objc.selector(None, 'discardEditing', b'v@:', isRequired=False), objc.selector(None, 'commitEditing', b'Z@:', isRequired=False), objc.selector(None, 'commitEditingWithDelegate:didCommitSelector:contextInfo:', b'v@:@:^v', isRequired=False), objc.selector(None, 'commitEditingAndReturnError:', b'Z@:^@', isRequired=False)]), 'NSFontManagerDelegate': objc.informal_protocol('NSFontManagerDelegate', [objc.selector(None, 'fontManager:willIncludeFont:', b'Z@:@@', isRequired=False)]), 'NSControlSubclassNotifications': objc.informal_protocol('NSControlSubclassNotifications', [objc.selector(None, 'controlTextDidChange:', b'v@:@', isRequired=False), objc.selector(None, 'controlTextDidBeginEditing:', b'v@:@', isRequired=False), objc.selector(None, 'controlTextDidEndEditing:', b'v@:@', isRequired=False)]), 'NSServicesRequests': objc.informal_protocol('NSServicesRequests', [objc.selector(None, 'readSelectionFromPasteboard:', b'Z@:@', isRequired=False), objc.selector(None, 'writeSelectionToPasteboard:types:', b'Z@:@@', isRequired=False)]), 'NSTableViewDataSourceDeprecated': objc.informal_protocol('NSTableViewDataSourceDeprecated', [objc.selector(None, 'tableView:writeRows:toPasteboard:', b'Z@:@@@', isRequired=False)]), 'NSPlaceholders': objc.informal_protocol('NSPlaceholders', [objc.selector(None, 'setDefaultPlaceholder:forMarker:withBinding:', b'v@:@@@', isRequired=False), objc.selector(None, 'defaultPlaceholderForMarker:withBinding:', b'@@:@@', isRequired=False)]), 'NSDraggingSourceDeprecated': objc.informal_protocol('NSDraggingSourceDeprecated', [objc.selector(None, 'namesOfPromisedFilesDroppedAtDestination:', b'@@:@', isRequired=False), objc.selector(None, 'draggedImage:endedAt:operation:', sel32or64(b'v@:@{_NSPoint=ff}I', b'v@:@{CGPoint=dd}Q'), isRequired=False), objc.selector(None, 'draggedImage:beganAt:', sel32or64(b'v@:@{_NSPoint=ff}', b'v@:@{CGPoint=dd}'), isRequired=False), objc.selector(None, 'draggedImage:endedAt:deposited:', sel32or64(b'v@:@{_NSPoint=ff}Z', b'v@:@{CGPoint=dd}Z'), isRequired=False), objc.selector(None, 'draggingSourceOperationMaskForLocal:', sel32or64(b'I@:Z', b'Q@:Z'), isRequired=False), objc.selector(None, 'draggedImage:movedTo:', sel32or64(b'v@:@{_NSPoint=ff}', b'v@:@{CGPoint=dd}'), isRequired=False), objc.selector(None, 'ignoreModifierKeysWhileDragging', b'Z@:', isRequired=False)]), 'NSColorPanelResponderMethod': objc.informal_protocol('NSColorPanelResponderMethod', [objc.selector(None, 'changeColor:', b'v@:@', isRequired=False)]), 'NSMenuValidation': objc.informal_protocol('NSMenuValidation', [objc.selector(None, 'validateMenuItem:', b'Z@:@', isRequired=False)]), 'NSEditorRegistration': objc.informal_protocol('NSEditorRegistration', [objc.selector(None, 'objectDidEndEditing:', b'v@:@', isRequired=False), objc.selector(None, 'objectDidBeginEditing:', b'v@:@', isRequired=False)]), 'NSFontManagerResponderMethod': objc.informal_protocol('NSFontManagerResponderMethod', [objc.selector(None, 'changeFont:', b'v@:@', isRequired=False)])}
expressions = {}

# END OF FILE
