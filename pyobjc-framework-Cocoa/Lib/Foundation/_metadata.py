# Generated file, don't edit
# Source: BridgeSupport/Foundation.bridgesupport
# Last update: Tue Dec 27 10:24:57 2011

import objc, sys

if sys.maxint > 2 ** 32:
    def sel32or64(a, b): return b
else:
    def sel32or64(a, b): return a
if sys.byteorder == 'little':
    def littleOrBig(a, b): return a
else:
    def littleOrBig(a, b): return b

misc = {
    "NSAppleEventManagerSuspensionID": objc.createOpaquePointerType('NSAppleEventManagerSuspensionID', b'^{__NSAppleEventManagerSuspension=}'),
    "NSZone*": objc.createOpaquePointerType('NSZone*', b'^{_NSZone=}'),
    "NSAffineTransformStruct": objc.createStructType('NSAffineTransformStruct', sel32or64(b'{_NSAffineTransformStruct="m11"f"m12"f"m21"f"m22"f"tX"f"tY"f}', b'{_NSAffineTransformStruct="m11"d"m12"d"m21"d"m22"d"tX"d"tY"d}'), None),
    "NSDecimal": objc.createStructType('NSDecimal', b'{_NSDecimal="_exponent"b8"_length"b4"_isNegative"b1"_isCompact"b1"_reserved"b18"_mantissa"[8S]}', None),
    "NSPoint": objc.createStructType('NSPoint', sel32or64(b'{_NSPoint="x"f"y"f}', b'{CGPoint="x"d"y"d}'), None),
    "NSRange": objc.createStructType('NSRange', sel32or64(b'{_NSRange="location"I"length"I}', b'{_NSRange="location"Q"length"Q}'), None),
    "NSRect": objc.createStructType('NSRect', sel32or64(b'{_NSRect="origin"{_NSPoint="x"f"y"f}"size"{_NSSize="width"f"height"f}}', b'{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}'), None),
    "NSSize": objc.createStructType('NSSize', sel32or64(b'{_NSSize="width"f"height"f}', b'{CGSize="width"d"height"d}'), None),
    "NSSwappedDouble": objc.createStructType('NSSwappedDouble', b'{_NSSwappedDouble="v"Q}', None),
    "NSSwappedFloat": objc.createStructType('NSSwappedFloat', b'{_NSSwappedFloat="v"I}', None),
}
constants = '''$NSUbiquitousKeyValueStoreDidChangeExternallyNotification$NSUbiquitousKeyValueStoreChangeReasonKey$NSUbiquitousKeyValueStoreChangedKeysKey$NSURLFileResourceIdentifierKey$NSURLVolumeIdentifierKey$NSURLPreferredIOBlockSizeKey$NSURLIsReadableKey$NSURLIsWritableKey$NSURLIsExecutableKey$NSURLIsMountTriggerKey$NSURLFileSecurityKey$NSURLFileResourceTypeKey$NSURLFileResourceTypeNamedPipe$NSURLFileResourceTypeCharacterSpecial$NSURLFileResourceTypeDirectory$NSURLFileResourceTypeBlockSpecial$NSURLFileResourceTypeRegular$NSURLFileResourceTypeSymbolicLink$NSURLFileResourceTypeSocket$NSURLFileResourceTypeUnknown$NSURLTotalFileSizeKey$NSURLTotalFileAllocatedSizeKey$NSURLVolumeSupportsRootDirectoryDatesKey$NSURLVolumeSupportsVolumeSizesKey$NSURLVolumeSupportsRenamingKey$NSURLVolumeSupportsAdvisoryFileLockingKey$NSURLVolumeSupportsExtendedSecurityKey$NSURLVolumeIsBrowsableKey $NSURLVolumeMaximumFileSizeKey $NSURLVolumeIsEjectableKey$NSURLVolumeIsRemovableKey$NSURLVolumeIsInternalKey$NSURLVolumeIsAutomountedKey$NSURLVolumeIsLocalKey$NSURLVolumeIsReadOnlyKey$NSURLVolumeCreationDateKey$NSURLVolumeURLForRemountingKey$NSURLVolumeUUIDStringKey$NSURLVolumeNameKey$NSURLVolumeLocalizedNameKey$NSURLIsUbiquitousItemKey$NSURLUbiquitousItemHasUnresolvedConflictsKey$NSURLUbiquitousItemIsDownloadedKey$NSURLUbiquitousItemIsDownloadingKey$NSURLUbiquitousItemIsUploadedKey$NSURLUbiquitousItemIsUploadingKey$NSURLUbiquitousItemPercentDownloadedKeyNSURLUbiquitousItemPercentUploadedKey$NSStreamNetworkServiceType$NSStreamNetworkServiceTypeVoIP$NSStreamNetworkServiceTypeVideo$NSStreamNetworkServiceTypeBackground$NSStreamNetworkServiceTypeVoice$NSMetadataQueryLocalDocumentsScope$NSMetadataQueryUbiquitousDocumentsScope$NSMetadataQueryUbiquitousDataScope$NSMetadataItemFSNameKey$NSMetadataItemDisplayNameKey$NSMetadataItemURLKey$NSMetadataItemPathKey$NSMetadataItemFSSizeKey$NSMetadataItemFSCreationDateKey$NSMetadataItemFSContentChangeDateKey$NSMetadataItemIsUbiquitousKey$NSMetadataUbiquitousItemHasUnresolvedConflictsKey$NSMetadataUbiquitousItemIsDownloadedKey$NSMetadataUbiquitousItemIsDownloadingKey$NSMetadataUbiquitousItemIsUploadedKey$NSMetadataUbiquitousItemIsUploadingKey$NSMetadataUbiquitousItemPercentDownloadedKey$NSMetadataUbiquitousItemPercentUploadedKey$NSLinguisticTagSchemeTokenType$NSLinguisticTagSchemeLexicalClass$NSLinguisticTagSchemeNameType$NSLinguisticTagSchemeNameTypeOrLexicalClass$NSLinguisticTagSchemeLemma$NSLinguisticTagSchemeLanguage$NSLinguisticTagSchemeScriptNSLinguisticTagWord$NSLinguisticTagPunctuation$NSLinguisticTagWhitespace$NSLinguisticTagOther$NSLinguisticTagNoun$NSLinguisticTagVerb$NSLinguisticTagAdjective$NSLinguisticTagAdverb$NSLinguisticTagPronoun$NSLinguisticTagDeterminer$NSLinguisticTagParticle$NSLinguisticTagPreposition$NSLinguisticTagNumber$NSLinguisticTagConjunction$NSLinguisticTagInterjection$NSLinguisticTagClassifier$NSLinguisticTagIdiom$NSLinguisticTagOtherWord$NSLinguisticTagSentenceTerminator$NSLinguisticTagOpenQuote$NSLinguisticTagCloseQuote$NSLinguisticTagOpenParenthesis$NSLinguisticTagCloseParenthesis$NSLinguisticTagWordJoiner$NSLinguisticTagDash$NSLinguisticTagOtherPunctuation$NSLinguisticTagParagraphBreak$NSLinguisticTagOtherWhitespace$NSLinguisticTagPersonalName$NSLinguisticTagPlaceName$NSLinguisticTagOrganizationName$NSURLAuthenticationMethodClientCertificate$NSURLAuthenticationMethodServerTrust$NSURLErrorFailingURLErrorKey$NSURLErrorFailingURLStringErrorKey$NSURLErrorFailingURLPeerTrustErrorKey$NSURLNameKey$NSURLLocalizedNameKey$NSURLIsRegularFileKey$NSURLIsDirectoryKey$NSURLIsSymbolicLinkKey$NSURLIsVolumeKey$NSURLIsPackageKey$NSURLIsSystemImmutableKey$NSURLIsUserImmutableKey$NSURLIsHiddenKey$NSURLHasHiddenExtensionKey$NSURLCreationDateKey$NSURLContentAccessDateKey$NSAssertionHandlerKey$NSURLContentModificationDateKey$NSURLAttributeModificationDateKey$NSURLLinkCountKey$NSURLParentDirectoryURLKey$NSURLVolumeURLKey$NSURLTypeIdentifierKey$NSURLLocalizedTypeDescriptionKey$NSURLLabelNumberKey$NSURLLabelColorKey$NSURLLocalizedLabelKey$NSURLEffectiveIconKey$NSURLCustomIconKey$NSURLFileSizeKey$NSURLFileAllocatedSizeKey$NSURLIsAliasFileKey$NSURLVolumeLocalizedFormatDescriptionKey$NSURLVolumeTotalCapacityKey$NSURLVolumeAvailableCapacityKey$NSURLVolumeResourceCountKey$NSURLVolumeSupportsPersistentIDsKey$NSURLVolumeSupportsSymbolicLinksKey$NSURLVolumeSupportsHardLinksKey$NSURLVolumeSupportsJournalingKey$NSURLVolumeIsJournalingKey$NSURLVolumeSupportsSparseFilesKey$NSURLVolumeSupportsZeroRunsKey$NSURLVolumeSupportsCaseSensitiveNamesKey$NSURLVolumeSupportsCasePreservedNamesKey$NSAMPMDesignation$NSSystemClockDidChangeNotification$NSAppleEventManagerWillProcessFirstEventNotification$NSAppleEventTimeOutDefault@d$NSAppleEventTimeOutNone@d$NSAppleScriptErrorAppName$NSAppleScriptErrorBriefMessage$NSAppleScriptErrorMessage$NSAppleScriptErrorNumber$NSAppleScriptErrorRange$NSArgumentDomain$NSAverageKeyValueOperator$NSBuddhistCalendar$NSBundleDidLoadNotification$NSCharacterConversionException$NSChineseCalendar$NSClassDescriptionNeededForClassNotification$NSCocoaErrorDomain$NSConnectionDidDieNotification$NSConnectionDidInitializeNotification$NSConnectionReplyMode$NSCountKeyValueOperator$NSCurrencySymbol$NSCurrentLocaleDidChangeNotification$NSDateFormatString$NSDateTimeOrdering$NSDecimalDigits$NSDecimalNumberDivideByZeroException$NSDecimalNumberExactnessException$NSDecimalNumberOverflowException$NSDecimalNumberUnderflowException$NSDecimalSeparator$NSDefaultRunLoopMode$NSDestinationInvalidException$NSDidBecomeSingleThreadedNotification$NSDistinctUnionOfArraysKeyValueOperator$NSDistinctUnionOfObjectsKeyValueOperator$NSDistinctUnionOfSetsKeyValueOperator$NSEarlierTimeDesignations$NSErrorFailingURLStringKey$NSFTPPropertyActiveTransferModeKey$NSFTPPropertyFTPProxy$NSFTPPropertyFileOffsetKey$NSFTPPropertyUserLoginKey$NSFTPPropertyUserPasswordKey$NSFailedAuthenticationException$NSFileAppendOnly$NSFileBusy$NSFileCreationDate$NSFileDeviceIdentifier$NSFileExtensionHidden$NSFileGroupOwnerAccountID$NSFileGroupOwnerAccountName$NSFileHFSCreatorCode$NSFileHFSTypeCode$NSFileHandleConnectionAcceptedNotification$NSFileHandleDataAvailableNotification$NSFileHandleNotificationDataItem$NSFileHandleNotificationFileHandleItem$NSFileHandleNotificationMonitorModes$NSFileHandleOperationException$NSFileHandleReadCompletionNotification$NSFileHandleReadToEndOfFileCompletionNotification$NSFileImmutable$NSFileModificationDate$NSFileOwnerAccountID$NSFileOwnerAccountName$NSFilePathErrorKey$NSFilePosixPermissions$NSFileReferenceCount$NSFileSize$NSFileSystemFileNumber$NSFileSystemFreeNodes$NSFileSystemFreeSize$NSFileSystemNodes$NSFileSystemNumber$NSFileSystemSize$NSFileType$NSFileTypeBlockSpecial$NSFileTypeCharacterSpecial$NSFileTypeDirectory$NSFileTypeRegular$NSFileTypeSocket$NSFileTypeSymbolicLink$NSFileTypeUnknown$NSFoundationVersionNumber@d$NSGenericException$NSGlobalDomain$NSGrammarCorrections$NSGrammarRange$NSGrammarUserDescription$NSGregorianCalendar$NSHTTPCookieComment$NSHTTPCookieCommentURL$NSHTTPCookieDiscard$NSHTTPCookieDomain$NSHTTPCookieExpires$NSHTTPCookieManagerAcceptPolicyChangedNotification$NSHTTPCookieManagerCookiesChangedNotification$NSHTTPCookieMaximumAge$NSHTTPCookieName$NSHTTPCookieOriginURL$NSHTTPCookiePath$NSHTTPCookiePort$NSHTTPCookieSecure$NSHTTPCookieValue$NSHTTPCookieVersion$NSHTTPPropertyErrorPageDataKey$NSHTTPPropertyHTTPProxy$NSHTTPPropertyRedirectionHeadersKey$NSHTTPPropertyServerHTTPVersionKey$NSHTTPPropertyStatusCodeKey$NSHTTPPropertyStatusReasonKey$NSHebrewCalendar$NSHourNameDesignations$NSInconsistentArchiveException$NSInternalInconsistencyException$NSInternationalCurrencyString$NSInvalidArchiveOperationException$NSInvalidArgumentException$NSInvalidReceivePortException$NSInvalidSendPortException$NSInvalidUnarchiveOperationException$NSInvocationOperationCancelledException$NSInvocationOperationVoidResultException$NSIsNilTransformerName$NSIsNotNilTransformerName$NSIslamicCalendar$NSIslamicCivilCalendar$NSJapaneseCalendar$NSJavaClasses$NSJavaDidCreateVirtualMachineNotification$NSJavaDidSetupVirtualMachineNotification$NSJavaLibraryPath$NSJavaOwnVirtualMachine$NSJavaPath$NSJavaPathSeparator$NSJavaRoot$NSJavaUserPath$NSJavaWillCreateVirtualMachineNotification$NSJavaWillSetupVirtualMachineNotification$NSKeyValueChangeIndexesKey$NSKeyValueChangeKindKey$NSKeyValueChangeNewKey$NSKeyValueChangeNotificationIsPriorKey$NSKeyValueChangeOldKey$NSKeyedUnarchiveFromDataTransformerName$NSLaterTimeDesignations$NSLoadedClasses$NSLocalNotificationCenterType$NSLocaleCalendar$NSLocaleCollationIdentifier$NSLocaleCountryCode$NSLocaleCurrencyCode$NSLocaleCurrencySymbol$NSLocaleDecimalSeparator$NSLocaleExemplarCharacterSet$NSLocaleGroupingSeparator$NSLocaleIdentifier$NSLocaleLanguageCode$NSLocaleMeasurementSystem$NSLocaleScriptCode$NSLocaleUsesMetricSystem$NSLocaleVariantCode$NSLocalizedDescriptionKey$NSLocalizedFailureReasonErrorKey$NSLocalizedRecoveryOptionsErrorKey$NSLocalizedRecoverySuggestionErrorKey$NSMachErrorDomain$NSMallocException$NSMaximumKeyValueOperator$NSMetadataQueryDidFinishGatheringNotification$NSMetadataQueryDidStartGatheringNotification$NSMetadataQueryDidUpdateNotification$NSMetadataQueryGatheringProgressNotification$NSMetadataQueryLocalComputerScope$NSMetadataQueryNetworkScope$NSMetadataQueryResultContentRelevanceAttribute$NSMetadataQueryUserHomeScope$NSMinimumKeyValueOperator$NSMonthNameArray$NSNegateBooleanTransformerName$NSNegativeCurrencyFormatString$NSNetServicesErrorCode$NSNetServicesErrorDomain$NSNextDayDesignations$NSNextNextDayDesignations$NSOSStatusErrorDomain$NSObjectInaccessibleException$NSObjectNotAvailableException$NSOldStyleException$NSOperationNotSupportedForKeyException$NSPOSIXErrorDomain$NSParseErrorException$NSPortDidBecomeInvalidNotification$NSPortReceiveException$NSPortSendException$NSPortTimeoutException$NSPositiveCurrencyFormatString$NSPriorDayDesignations$NSRangeException$NSRecoveryAttempterErrorKey$NSRegistrationDomain$NSRunLoopCommonModes$NSShortDateFormatString$NSShortMonthNameArray$NSShortTimeDateFormatString$NSShortWeekDayNameArray$NSStreamDataWrittenToMemoryStreamKey$NSStreamFileCurrentOffsetKey$NSStreamSOCKSErrorDomain$NSStreamSOCKSProxyConfigurationKey$NSStreamSOCKSProxyHostKey$NSStreamSOCKSProxyPasswordKey$NSStreamSOCKSProxyPortKey$NSStreamSOCKSProxyUserKey$NSStreamSOCKSProxyVersion4$NSStreamSOCKSProxyVersion5$NSStreamSOCKSProxyVersionKey$NSStreamSocketSSLErrorDomain$NSStreamSocketSecurityLevelKey$NSStreamSocketSecurityLevelNegotiatedSSL$NSStreamSocketSecurityLevelNone$NSStreamSocketSecurityLevelSSLv2$NSStreamSocketSecurityLevelSSLv3$NSStreamSocketSecurityLevelTLSv1$NSStringEncodingErrorKey$NSSumKeyValueOperator$NSSystemTimeZoneDidChangeNotification$NSTaskDidTerminateNotification$NSThisDayDesignations$NSThousandsSeparator$NSThreadWillExitNotification$NSTimeDateFormatString$NSTimeFormatString$NSURLAuthenticationMethodDefault$NSURLAuthenticationMethodHTMLForm$NSURLAuthenticationMethodHTTPBasic$NSURLAuthenticationMethodHTTPDigest$NSURLCredentialStorageChangedNotification$NSURLErrorDomain$NSURLErrorKey$NSURLFileScheme$NSURLKeysOfUnsetValuesKey$NSURLAuthenticationMethodServerTrust$NSURLProtectionSpaceFTP$NSURLProtectionSpaceHTTPS$NSURLProtectionSpaceHTTP$NSURLAuthenticationMethodNTLM$NSURLAuthenticationMethodNegotiate$NSURLProtectionSpaceFTPProxy$NSURLProtectionSpaceHTTPProxy$NSURLProtectionSpaceHTTPSProxy$NSURLProtectionSpaceSOCKSProxy$NSUnarchiveFromDataTransformerName$NSUndefinedKeyException$NSUnderlyingErrorKey$NSUndoManagerCheckpointNotification$NSUndoManagerDidOpenUndoGroupNotification$NSUndoManagerDidRedoChangeNotification$NSUndoManagerDidUndoChangeNotification$NSUndoManagerWillCloseUndoGroupNotification$NSUndoManagerWillRedoChangeNotification$NSUndoManagerWillUndoChangeNotification$NSUnionOfArraysKeyValueOperator$NSUnionOfObjectsKeyValueOperator$NSUnionOfSetsKeyValueOperator$NSUserDefaultsDidChangeNotification$NSWeekDayNameArray$NSWillBecomeMultiThreadedNotification$NSXMLParserErrorDomain$NSHelpAnchorErrorKey$NSYearMonthWeekDesignations$NSLocaleCollatorIdentifier$NSLocaleQuotationBeginDelimiterKey$NSLocaleQuotationEndDelimiterKey$NSLocaleAlternateQuotationBeginDelimiterKey$NSLocaleAlternateQuotationEndDelimiterKey$NSRepublicOfChinaCalendar$NSPersianCalendar$NSIndianCalendar$NSISO8601Calendar$NSTextCheckingNameKey$NSTextCheckingJobTitleKey$NSTextCheckingOrganizationKey$NSTextCheckingStreetKey$NSTextCheckingCityKey$NSTextCheckingStateKey$NSTextCheckingZIPKey$NSTextCheckingCountryKey$NSTextCheckingPhoneKey$NSTextCheckingFlightKey$NSTextCheckingAirlineKey$NSUndoManagerGroupIsDiscardableKey$NSUndoManagerDidCloseUndoGroupNotification$'''
constants_dict = {'NSZeroPoint': sel32or64('{_NSPoint=ff}', '{CGPoint=dd}'), 'NSZeroSize': sel32or64('{_NSSize=ff}', '{CGSize=dd}'), 'NSZeroRect': sel32or64('{_NSRect={_NSPoint=ff}{_NSSize=ff}}', '{CGRect={CGPoint=dd}{CGSize=dd}}')}
enums = '''$NSUbiquitousKeyValueStoreServerChange@0$NSUbiquitousKeyValueStoreInitialSyncChange@1$NSUbiquitousKeyValueStoreQuotaViolationChange@2$NSURLNetworkServiceTypeDefault@0$NSURLNetworkServiceTypeVoIP@1$NSURLNetworkServiceTypeVideo@2$NSURLNetworkServiceTypeBackground@3$NSURLNetworkServiceTypeVoice@4$NSFileCoordinatorReadingWithoutChanges@1$NSFileCoordinatorReadingResolvesSymbolicLink@2$NSFileCoordinatorWritingForDeleting@1$NSFileCoordinatorWritingForMoving@2$NSFileCoordinatorWritingForMerging@4$NSFileCoordinatorWritingForReplacing@8$NSTextCheckingTypeRegularExpression@1024$NSTextCheckingTypePhoneNumber@2048$NSTextCheckingTypeTransitInformation@4096$NSRegularExpressionSearch@1024$NSRegularExpressionCaseInsensitive@1$NSRegularExpressionAllowCommentsAndWhitespace@2$NSRegularExpressionIgnoreMetacharacters@4$NSRegularExpressionDotMatchesLineSeparators@8$NSRegularExpressionAnchorsMatchLines@16$NSRegularExpressionUseUnixLineSeparators@32$NSRegularExpressionUseUnicodeWordBoundaries@64$NSMatchingReportProgress@1$NSMatchingReportCompletion@2$NSMatchingAnchored@4$NSMatchingWithTransparentBounds@8$NSMatchingWithoutAnchoringBounds@16$NSMatchingProgress@1$NSMatchingCompleted@2$NSMatchingHitEnd@4$NSMatchingRequiredEnd@8$NSMatchingInternalError@16$NSLinguisticTaggerOmitWords@1$NSLinguisticTaggerOmitPunctuation@2$NSLinguisticTaggerOmitWhitespace@4$NSLinguisticTaggerOmitOther@8$NSLinguisticTaggerJoinNames@16$NSJSONReadingMutableContainers@1$NSJSONReadingMutableLeaves@2$NSJSONReadingAllowFragments@4$NSJSONWritingPrettyPrinted@1$NSAlignMinXInward@1$NSAlignMinYInward@2$NSAlignMaxXInward@4$NSAlignMaxYInward@8$NSAlignWidthInward@16$NSAlignHeightInward@32$NSAlignMinXOutward@256$NSAlignMinYOutward@512$NSAlignMaxXOutward@1024$NSAlignMaxYOutward@2048$NSAlignWidthOutward@4096$NSAlignHeightOutward@8192$NSAlignMinXNearest@65536$NSAlignMinYNearest@131072$NSAlignMaxXNearest@262144$NSAlignMaxYNearest@524288$NSAlignWidthNearest@1048576$NSAlignHeightNearest@2097152$NSAlignRectFlipped@9223372036854775808$NSAlignAllEdgesInward@15$NSAlignAllEdgesOutward@3840$NSAlignAllEdgesNearest@983040$NSFileVersionAddingByMoving@1$NSFileVersionReplacingByMoving@1$NSFileWriteVolumeReadOnlyError@642$NSTextCheckingTypeOrthography@1$NSTextCheckingTypeSpelling@2$NSTextCheckingTypeGrammar@4$NSTextCheckingTypeDate@8$NSTextCheckingTypeAddress@16$NSTextCheckingTypeLink@32$NSTextCheckingTypeQuote@64$NSTextCheckingTypeDash@128$NSTextCheckingTypeReplacement@256$NSTextCheckingTypeCorrection@512$NSTextCheckingAllSystemTypes@4294967295$NSTextCheckingAllCustomTypes@18446744069414584320$NSTextCheckingAllTypes@18446744073709551615$NSTaskTerminationReasonExit@1$NSTaskTerminationReasonUncaughtSignal@2$NSStringEnumerationByLines@0$NSStringEnumerationByParagraphs@1$NSStringEnumerationByComposedCharacterSequences@2$NSStringEnumerationByWords@3$NSStringEnumerationBySentences@4$NSStringEnumerationReverse@256$NSStringEnumerationSubstringNotRequired@512$NSStringEnumerationLocalized@1024$NSPropertyListReadCorruptError@3840$NSPropertyListReadUnknownVersionError@3841$NSPropertyListReadStreamError@3842$NSPropertyListWriteStreamError@3851$NSPropertyListErrorMinimum@3840$NSPropertyListErrorMaximum@4095$NSProprietaryStringEncoding@65536$NSASCIIStringEncoding@1$NSAdminApplicationDirectory@4$NSAggregateExpressionType@14$NSBlockExpressionType@19$NSAllApplicationsDirectory@100$NSAllDomainsMask@65535$NSAllLibrariesDirectory@101$NSAllPredicateModifier@1$NSAnchoredSearch@8$NSAndPredicateType@1$NSAnyPredicateModifier@2$NSApplicationDirectory@1$NSApplicationSupportDirectory@14$NSArgumentEvaluationScriptError@3$NSArgumentsWrongScriptError@6$NSAtomicWrite@1$NSDataSearchBackwards@1$NSDataSearchAnchored@2$NSBackwardsSearch@4$NSBeginsWithComparison@5$NSBeginsWithPredicateOperatorType@8$NSBetweenPredicateOperatorType@100$NSBundleExecutableArchitectureI386@7$NSBundleExecutableArchitecturePPC@18$NSBundleExecutableArchitecturePPC64@16777234$NSBundleExecutableArchitectureX86_64@16777223$NSCachesDirectory@13$NSCalculationDivideByZero@4$NSCalculationLossOfPrecision@1$NSCalculationNoError@0$NSCalculationOverflow@3$NSCalculationUnderflow@2$NSCannotCreateScriptCommandError@10$NSCaseInsensitivePredicateOption@1$NSCaseInsensitiveSearch@1$NSCollectorDisabledOption@2$NSConstantValueExpressionType@0$NSContainerSpecifierError@2$NSContainsComparison@7$NSContainsPredicateOperatorType@99$NSCoreServiceDirectory@10$NSAutosavedInformationDirectory@11$NSCustomSelectorPredicateOperatorType@11$NSDateFormatterBehavior10_0@1000$NSDateFormatterBehavior10_4@1040$NSDateFormatterBehaviorDefault@0$NSDateFormatterFullStyle@4$NSDateFormatterLongStyle@3$NSDateFormatterMediumStyle@2$NSDateFormatterNoStyle@0$NSDateFormatterShortStyle@1$NSDayCalendarUnit@16$NSDecimalMaxSize@8$NSDemoApplicationDirectory@2$NSDesktopDirectory@12$NSDeveloperApplicationDirectory@3$NSDeveloperDirectory@6$NSDiacriticInsensitivePredicateOption@2$NSNormalizedPredicateOption@4$NSDiacriticInsensitiveSearch@128$NSDirectPredicateModifier@0$NSDocumentDirectory@9$NSDocumentationDirectory@8$NSDownloadsDirectory@15$NSInputMethodsDirectory@16$NSMoviesDirectory@17$NSMusicDirectory@18$NSPicturesDirectory@19$NSPrinterDescriptionDirectory@20$NSSharedPublicDirectory@21$NSPreferencePanesDirectory@22$NSItemReplacementDirectory@99$NSEndsWithComparison@6$NSEndsWithPredicateOperatorType@9$NSEqualToComparison@0$NSEqualToPredicateOperatorType@4$NSEraCalendarUnit@2$NSEvaluatedObjectExpressionType@1$NSEverySubelement@1$NSExecutableArchitectureMismatchError@3585$NSExecutableErrorMaximum@3839$NSExecutableErrorMinimum@3584$NSExecutableLinkError@3588$NSExecutableLoadError@3587$NSExecutableNotLoadableError@3584$NSExecutableRuntimeMismatchError@3586$NSFileErrorMaximum@1023$NSFileErrorMinimum@0$NSFileLockingError@255$NSFileNoSuchFileError@4$NSFileReadCorruptFileError@259$NSFileReadInapplicableStringEncodingError@261$NSFileReadInvalidFileNameError@258$NSFileReadNoPermissionError@257$NSFileReadNoSuchFileError@260$NSFileReadTooLargeError@263$NSFileReadUnknownError@256$NSFileReadUnknownStringEncodingError@264$NSFileReadUnsupportedSchemeError@262$NSFileWriteInapplicableStringEncodingError@517$NSFileWriteInvalidFileNameError@514$NSFileWriteNoPermissionError@513$NSFileWriteOutOfSpaceError@640$NSFileWriteUnknownError@512$NSFileWriteUnsupportedSchemeError@518$NSForcedOrderingSearch@512$NSFormattingError@2048$NSFormattingErrorMaximum@2559$NSFormattingErrorMinimum@2048$NSFoundationVersionNumber10_0@397.39999999999998$NSFoundationVersionNumber10_1@425.0$NSFoundationVersionNumber10_1_1@425.0$NSFoundationVersionNumber10_1_2@425.0$NSFoundationVersionNumber10_1_3@425.0$NSFoundationVersionNumber10_1_4@425.0$NSFoundationVersionNumber10_2@462.0$NSFoundationVersionNumber10_2_1@462.0$NSFoundationVersionNumber10_2_2@462.0$NSFoundationVersionNumber10_2_3@462.0$NSFoundationVersionNumber10_2_4@462.0$NSFoundationVersionNumber10_2_5@462.0$NSFoundationVersionNumber10_2_6@462.0$NSFoundationVersionNumber10_2_7@462.69999999999999$NSFoundationVersionNumber10_2_8@462.69999999999999$NSFoundationVersionNumber10_3@500.0$NSFoundationVersionNumber10_3_1@500.0$NSFoundationVersionNumber10_3_2@500.30000000000001$NSFoundationVersionNumber10_3_3@500.54000000000002$NSFoundationVersionNumber10_3_4@500.56$NSFoundationVersionNumber10_3_5@500.56$NSFoundationVersionNumber10_3_6@500.56$NSFoundationVersionNumber10_3_7@500.56$NSFoundationVersionNumber10_3_8@500.56$NSFoundationVersionNumber10_3_9@500.57999999999998$NSFoundationVersionNumber10_4@567.0$NSFoundationVersionNumber10_4_1@567.0$NSFoundationVersionNumber10_4_10@567.28999999999996$NSFoundationVersionNumber10_4_11@567.36000000000001$NSFoundationVersionNumber10_4_2@567.12$NSFoundationVersionNumber10_4_3@567.21000000000004$NSFoundationVersionNumber10_4_4_Intel@567.23000000000002$NSFoundationVersionNumber10_4_4_PowerPC@567.21000000000004$NSFoundationVersionNumber10_4_5@567.25$NSFoundationVersionNumber10_4_6@567.25999999999999$NSFoundationVersionNumber10_4_7@567.26999999999998$NSFoundationVersionNumber10_4_8@567.27999999999997$NSFoundationVersionNumber10_4_9@567.28999999999996$NSFoundationVersionNumber10_5@677.00$NSFoundationVersionNumber10_5_1@677.10$NSFoundationVersionNumber10_5_2@677.15$NSFoundationVersionNumber10_5_3@677.19$NSFoundationVersionNumber10_5_4@677.19$NSFoundationVersionNumber10_5_5@677.21$NSFoundationVersionNumber10_5_6@677.22$NSFoundationVersionNumber10_5_7@677.24$NSFoundationVersionNumber10_5_8@677.26$NSFoundationVersionNumber10_6@751.00$NSFoundationVersionNumber10_6_1@751.00$NSFoundationVersionNumber10_6_2@751.14$NSFoundationVersionNumber10_6_3@751.21$NSFoundationVersionNumber10_6_4@751.29$NSFoundationVersionNumber10_6_5@751.42$NSFoundationVersionWithFileManagerResourceForkSupport@412$NSFunctionExpressionType@4$NSEnumerationConcurrent@1$NSEnumerationReverse@2$NSSortConcurrent@1$NSSortStable@16$NSGEOMETRY_TYPES_SAME_AS_CGGEOMETRY_TYPES@1$NSGreaterThanComparison@4$NSGreaterThanOrEqualToComparison@3$NSGreaterThanOrEqualToPredicateOperatorType@3$NSGreaterThanPredicateOperatorType@2$NSHPUXOperatingSystem@4$NSHTTPCookieAcceptPolicyAlways@0$NSHTTPCookieAcceptPolicyNever@1$NSHTTPCookieAcceptPolicyOnlyFromMainDocumentDomain@2$NSHashTableCopyIn@65536$NSHashTableObjectPointerPersonality@512$NSHashTableStrongMemory@0$NSHashTableZeroingWeakMemory@1$NSHourCalendarUnit@32$NSINTEGER_DEFINED@1$NSISO2022JPStringEncoding@21$NSISOLatin1StringEncoding@5$NSISOLatin2StringEncoding@9$NSInPredicateOperatorType@10$NSIndexSubelement@0$NSInternalScriptError@8$NSInternalSpecifierError@5$NSIntersectSetExpressionType@6$NSInvalidIndexSpecifierError@4$NSJapaneseEUCStringEncoding@3$NSKeyPathExpressionType@3$NSKeySpecifierEvaluationScriptError@2$NSKeyValueChangeInsertion@2$NSKeyValueChangeRemoval@3$NSKeyValueChangeReplacement@4$NSKeyValueChangeSetting@1$NSKeyValueIntersectSetMutation@3$NSKeyValueMinusSetMutation@2$NSKeyValueObservingOptionInitial@4$NSKeyValueObservingOptionNew@1$NSKeyValueObservingOptionOld@2$NSKeyValueObservingOptionPrior@8$NSKeyValueSetSetMutation@4$NSKeyValueUnionSetMutation@1$NSKeyValueValidationError@1024$NSLessThanComparison@2$NSLessThanOrEqualToComparison@1$NSLessThanOrEqualToPredicateOperatorType@1$NSLessThanPredicateOperatorType@0$NSLibraryDirectory@5$NSLikePredicateOperatorType@7$NSLiteralSearch@2$NSLocalDomainMask@2$NSMACHOperatingSystem@5$NSMacOSRomanStringEncoding@30$NSMachPortDeallocateNone@0$NSMachPortDeallocateReceiveRight@2$NSMachPortDeallocateSendRight@1$NSMapTableCopyIn@65536$NSMapTableObjectPointerPersonality@512$NSMapTableStrongMemory@0$NSMapTableZeroingWeakMemory@1$NSMappedRead@1$NSMatchesPredicateOperatorType@6$NSMaxXEdge@2$NSMaxXEdge@2$NSMaxYEdge@3$NSMaxYEdge@3$NSMiddleSubelement@2$NSMinXEdge@0$NSMinXEdge@0$NSMinYEdge@1$NSMinYEdge@1$NSMinusSetExpressionType@7$NSMinuteCalendarUnit@64$NSMonthCalendarUnit@8$NSNEXTSTEPStringEncoding@2$NSNetServiceNoAutoRename@1$NSNetServicesActivityInProgress@-72003$NSNetServicesBadArgumentError@-72004$NSNetServicesCancelledError@-72005$NSNetServicesCollisionError@-72001$NSNetServicesInvalidError@-72006$NSNetServicesNotFoundError@-72002$NSNetServicesTimeoutError@-72007$NSNetServicesUnknownError@-72000$NSNetworkDomainMask@4$NSNoScriptError@0$NSNoSpecifierError@0$NSNoSubelement@4$NSNoTopLevelContainersSpecifierError@1$NSNonLossyASCIIStringEncoding@7$NSNotEqualToPredicateOperatorType@5$NSNotPredicateType@0$NSNotificationCoalescingOnName@1$NSNotificationCoalescingOnSender@2$NSNotificationDeliverImmediately@1$NSNotificationNoCoalescing@0$NSNotificationPostToAllSessions@2$NSNotificationSuspensionBehaviorCoalesce@2$NSNotificationSuspensionBehaviorDeliverImmediately@4$NSNotificationSuspensionBehaviorDrop@1$NSNotificationSuspensionBehaviorHold@3$NSNumberFormatterBehavior10_0@1000$NSNumberFormatterBehavior10_4@1040$NSNumberFormatterBehaviorDefault@0$NSNumberFormatterCurrencyStyle@2$NSNumberFormatterDecimalStyle@1$NSNumberFormatterNoStyle@0$NSNumberFormatterPadAfterPrefix@1$NSNumberFormatterPadAfterSuffix@3$NSNumberFormatterPadBeforePrefix@0$NSNumberFormatterPadBeforeSuffix@2$NSNumberFormatterPercentStyle@3$NSNumberFormatterRoundCeiling@0$NSNumberFormatterRoundDown@2$NSNumberFormatterRoundFloor@1$NSNumberFormatterRoundHalfDown@5$NSNumberFormatterRoundHalfEven@4$NSNumberFormatterRoundHalfUp@6$NSNumberFormatterRoundUp@3$NSNumberFormatterScientificStyle@4$NSNumberFormatterSpellOutStyle@5$NSNumericSearch@64$NSOSF1OperatingSystem@7$NSDecimalNoScale@32767$NSObjectAutoreleasedEvent@3$NSObjectExtraRefDecrementedEvent@5$NSObjectExtraRefIncrementedEvent@4$NSObjectInternalRefDecrementedEvent@7$NSObjectInternalRefIncrementedEvent@6$NSOpenStepUnicodeReservedBase@62464$NSOperationNotSupportedForKeyScriptError@9$NSOperationNotSupportedForKeySpecifierError@6$NSOperationQueueDefaultMaxConcurrentOperationCount@-1$NSOperationQueuePriorityHigh@4$NSOperationQueuePriorityLow@-4$NSOperationQueuePriorityNormal@0$NSOperationQueuePriorityVeryHigh@8$NSOperationQueuePriorityVeryLow@-8$NSOrPredicateType@2$NSOrderedAscending@-1$NSOrderedDescending@1$NSOrderedSame@0$NSPointerFunctionsCStringPersonality@768$NSPointerFunctionsCopyIn@65536$NSPointerFunctionsIntegerPersonality@1280$NSPointerFunctionsMachVirtualMemory@4$NSPointerFunctionsMallocMemory@3$NSPointerFunctionsObjectPersonality@0$NSPointerFunctionsObjectPointerPersonality@512$NSPointerFunctionsOpaqueMemory@2$NSPointerFunctionsOpaquePersonality@256$NSPointerFunctionsStrongMemory@0$NSPointerFunctionsStructPersonality@1024$NSPointerFunctionsZeroingWeakMemory@1$NSPositionAfter@0$NSPositionBefore@1$NSPositionBeginning@2$NSPositionEnd@3$NSPositionReplace@4$NSPostASAP@2$NSPostNow@3$NSPostWhenIdle@1$NSPropertyListBinaryFormat_v1_0@200$NSPropertyListImmutable@0$NSPropertyListMutableContainers@1$NSPropertyListMutableContainersAndLeaves@2$NSPropertyListOpenStepFormat@1$NSPropertyListXMLFormat_v1_0@100$NSRandomSubelement@3$NSReceiverEvaluationScriptError@1$NSReceiversCantHandleCommandScriptError@4$NSRelativeAfter@0$NSRelativeBefore@1$NSRequiredArgumentsMissingScriptError@5$NSRoundBankers@3$NSRoundDown@1$NSRoundPlain@0$NSRoundUp@2$NSSaveOptionsAsk@2$NSSaveOptionsNo@1$NSSaveOptionsYes@0$NSScannedOption@1$NSSecondCalendarUnit@128$NSShiftJISStringEncoding@8$NSSolarisOperatingSystem@3$NSStreamEventEndEncountered@16$NSStreamEventErrorOccurred@8$NSStreamEventHasBytesAvailable@2$NSStreamEventHasSpaceAvailable@4$NSStreamEventNone@0$NSStreamEventOpenCompleted@1$NSStreamStatusAtEnd@5$NSStreamStatusClosed@6$NSStreamStatusError@7$NSStreamStatusNotOpen@0$NSStreamStatusOpen@2$NSStreamStatusOpening@1$NSStreamStatusReading@3$NSStreamStatusWriting@4$NSStringEncodingConversionAllowLossy@1$NSStringEncodingConversionExternalRepresentation@2$NSSubqueryExpressionType@13$NSSunOSOperatingSystem@6$NSSymbolStringEncoding@6$NSSystemDomainMask@8$NSTimeIntervalSince1970@978307200.0$NSTimeZoneNameStyleGeneric@4$NSTimeZoneNameStyleShortGeneric@5$NSURLBookmarkCreationPreferFileIDResolution@256$NSURLBookmarkCreationMinimalBookmark@512$NSURLBookmarkCreationSuitableForBookmarkFile@1024$NSURLBookmarkResolutionWithoutUI@256$NSURLBookmarkResolutionWithoutMounting@512$NSTimeZoneNameStyleDaylightSaving@2$NSTimeZoneNameStyleShortDaylightSaving@3$NSTimeZoneNameStyleShortStandard@1$NSTimeZoneNameStyleStandard@0$NSURLCacheStorageAllowed@0$NSURLCacheStorageAllowedInMemoryOnly@1$NSURLCacheStorageNotAllowed@2$NSURLCredentialPersistenceForSession@1$NSURLCredentialPersistenceNone@0$NSURLCredentialPersistencePermanent@2$NSURLErrorBadServerResponse@-1011$NSURLErrorBadURL@-1000$NSURLErrorCancelled@-999$NSURLErrorCannotCloseFile@-3002$NSURLErrorCannotConnectToHost@-1004$NSURLErrorCannotCreateFile@-3000$NSURLErrorCannotDecodeContentData@-1016$NSURLErrorCannotDecodeRawData@-1015$NSURLErrorCannotFindHost@-1003$NSURLErrorCannotLoadFromNetwork@-2000$NSURLErrorCannotMoveFile@-3005$NSURLErrorCannotOpenFile@-3001$NSURLErrorCannotParseResponse@-1017$NSURLErrorCannotRemoveFile@-3004$NSURLErrorCannotWriteToFile@-3003$NSURLErrorClientCertificateRejected@-1205$NSURLErrorClientCertificateRequired@-1206$NSURLErrorDNSLookupFailed@-1006$NSURLErrorDataLengthExceedsMaximum@-1103$NSURLErrorDownloadDecodingFailedMidStream@-3006$NSURLErrorDownloadDecodingFailedToComplete@-3007$NSURLErrorFileDoesNotExist@-1100$NSURLErrorFileIsDirectory@-1101$NSURLErrorHTTPTooManyRedirects@-1007$NSURLErrorNetworkConnectionLost@-1005$NSURLErrorNoPermissionsToReadFile@-1102$NSURLErrorNotConnectedToInternet@-1009$NSURLErrorRedirectToNonExistentLocation@-1010$NSURLErrorResourceUnavailable@-1008$NSURLErrorSecureConnectionFailed@-1200$NSURLErrorServerCertificateHasBadDate@-1201$NSURLErrorServerCertificateHasUnknownRoot@-1203$NSURLErrorServerCertificateNotYetValid@-1204$NSURLErrorServerCertificateUntrusted@-1202$NSURLErrorTimedOut@-1001$NSURLErrorUnknown@-1$NSURLErrorUnsupportedURL@-1002$NSURLErrorUserAuthenticationRequired@-1013$NSURLErrorUserCancelledAuthentication@-1012$NSURLErrorZeroByteResource@-1014$NSURLHandleLoadFailed@3$NSURLHandleLoadInProgress@2$NSURLHandleLoadSucceeded@1$NSURLHandleNotLoaded@0$NSURLRequestReloadIgnoringCacheData@1$NSURLRequestReloadIgnoringLocalAndRemoteCacheData@4$NSURLRequestReloadIgnoringLocalCacheData@1$NSURLRequestReloadRevalidatingCacheData@5$NSURLRequestReturnCacheDataDontLoad@3$NSURLRequestReturnCacheDataElseLoad@2$NSURLRequestUseProtocolCachePolicy@0$NSURLResponseUnknownLength@-1$NSUTF16BigEndianStringEncoding@-1879047936$NSUTF16LittleEndianStringEncoding@-1811939072$NSUTF16StringEncoding@10$NSUTF32BigEndianStringEncoding@-1744830208$NSUTF32LittleEndianStringEncoding@-1677721344$NSUTF32StringEncoding@-1946156800$NSUTF8StringEncoding@4$NSUncachedRead@2$NSDataReadingMapped@1$NSDataReadingUncached@2$NSDataReadingMappedAlways@4$NSDataWritingAtomic@1$NSUndoCloseGroupingRunLoopOrdering@350000$NSUnicodeStringEncoding@10$NSUnionSetExpressionType@5$NSUnknownKeyScriptError@7$NSUnknownKeySpecifierError@3$NSUserCancelledError@3072$NSUserDirectory@7$NSUserDomainMask@1$NSValidationErrorMaximum@2047$NSValidationErrorMinimum@1024$NSVariableExpressionType@2$NSWeekCalendarUnit@256$NSWeekdayCalendarUnit@512$NSWeekdayOrdinalCalendarUnit@1024$NSQuarterCalendarUnit@2048$NSWeekOfMonthCalendarUnit@4096$NSWeekOfYearCalendarUnit@8192$NSYearForWeekOfYearCalendarUnit@16384$NSCalendarCalendarUnit@1048576$NSTimeZoneCalendarUnit@2097152$NSWidthInsensitiveSearch@256$NSWindows95OperatingSystem@2$NSWindowsCP1250StringEncoding@15$NSWindowsCP1251StringEncoding@11$NSWindowsCP1252StringEncoding@12$NSWindowsCP1253StringEncoding@13$NSWindowsCP1254StringEncoding@14$NSWindowsNTOperatingSystem@1$NSWrapCalendarComponents@1$NSXMLAttributeCDATAKind@6$NSXMLAttributeDeclarationKind@10$NSXMLAttributeEntitiesKind@11$NSXMLAttributeEntityKind@10$NSXMLAttributeEnumerationKind@14$NSXMLAttributeIDKind@7$NSXMLAttributeIDRefKind@8$NSXMLAttributeIDRefsKind@9$NSXMLAttributeKind@3$NSXMLAttributeNMTokenKind@12$NSXMLAttributeNMTokensKind@13$NSXMLAttributeNotationKind@15$NSXMLCommentKind@6$NSXMLDTDKind@8$NSXMLDocumentHTMLKind@2$NSXMLDocumentIncludeContentTypeDeclaration@262144$NSXMLDocumentKind@1$NSXMLDocumentTextKind@3$NSXMLDocumentTidyHTML@512$NSXMLDocumentTidyXML@1024$NSXMLDocumentValidate@8192$NSXMLNodeLoadExternalEntitiesAlways@16384$NSXMLNodeLoadExternalEntitiesSameOriginOnly@32768$NSXMLNodeLoadExternalEntitiesNever@524288$NSXMLDocumentXHTMLKind@1$NSXMLDocumentXInclude@65536$NSXMLDocumentXMLKind@0$NSXMLElementDeclarationAnyKind@18$NSXMLElementDeclarationElementKind@20$NSXMLElementDeclarationEmptyKind@17$NSXMLElementDeclarationKind@11$NSXMLElementDeclarationMixedKind@19$NSXMLElementDeclarationUndefinedKind@16$NSXMLElementKind@2$NSXMLEntityDeclarationKind@9$NSXMLEntityGeneralKind@1$NSXMLEntityParameterKind@4$NSXMLEntityParsedKind@2$NSXMLEntityPredefined@5$NSXMLEntityUnparsedKind@3$NSXMLInvalidKind@0$NSXMLNamespaceKind@4$NSXMLNodeCompactEmptyElement@4$NSXMLNodeExpandEmptyElement@2$NSXMLNodeIsCDATA@1$NSXMLNodeOptionsNone@0$NSXMLNodePreserveAll@-1048546$NSXMLNodePreserveAttributeOrder@2097152$NSXMLNodePreserveCDATA@16777216$NSXMLNodePreserveCharacterReferences@134217728$NSXMLNodePreserveDTD@67108864$NSXMLNodePreserveEmptyElements@6$NSXMLNodePreserveEntities@4194304$NSXMLNodePreserveNamespaceOrder@1048576$NSXMLNodePreservePrefixes@8388608$NSXMLNodePreserveQuotes@24$NSXMLNodePreserveWhitespace@33554432$NSXMLNodePrettyPrint@131072$NSXMLNodeUseDoubleQuotes@16$NSXMLNodeUseSingleQuotes@8$NSXMLNotationDeclarationKind@12$NSXMLParserAttributeHasNoValueError@41$NSXMLParserAttributeListNotFinishedError@51$NSXMLParserAttributeListNotStartedError@50$NSXMLParserAttributeNotFinishedError@40$NSXMLParserAttributeNotStartedError@39$NSXMLParserAttributeRedefinedError@42$NSXMLParserCDATANotFinishedError@63$NSXMLParserCharacterRefAtEOFError@10$NSXMLParserCharacterRefInDTDError@13$NSXMLParserCharacterRefInEpilogError@12$NSXMLParserCharacterRefInPrologError@11$NSXMLParserCommentContainsDoubleHyphenError@80$NSXMLParserCommentNotFinishedError@45$NSXMLParserConditionalSectionNotFinishedError@59$NSXMLParserConditionalSectionNotStartedError@58$NSXMLParserDOCTYPEDeclNotFinishedError@61$NSXMLParserDelegateAbortedParseError@512$NSXMLParserDocumentStartError@3$NSXMLParserElementContentDeclNotFinishedError@55$NSXMLParserElementContentDeclNotStartedError@54$NSXMLParserEmptyDocumentError@4$NSXMLParserEncodingNotSupportedError@32$NSXMLParserEntityBoundaryError@90$NSXMLParserEntityIsExternalError@29$NSXMLParserEntityIsParameterError@30$NSXMLParserEntityNotFinishedError@37$NSXMLParserEntityNotStartedError@36$NSXMLParserEntityRefAtEOFError@14$NSXMLParserEntityRefInDTDError@17$NSXMLParserEntityRefInEpilogError@16$NSXMLParserEntityRefInPrologError@15$NSXMLParserEntityRefLoopError@89$NSXMLParserEntityReferenceMissingSemiError@23$NSXMLParserEntityReferenceWithoutNameError@22$NSXMLParserEntityValueRequiredError@84$NSXMLParserEqualExpectedError@75$NSXMLParserExternalStandaloneEntityError@82$NSXMLParserExternalSubsetNotFinishedError@60$NSXMLParserExtraContentError@86$NSXMLParserGTRequiredError@73$NSXMLParserInternalError@1$NSXMLParserInvalidCharacterError@9$NSXMLParserInvalidCharacterInEntityError@87$NSXMLParserInvalidCharacterRefError@8$NSXMLParserInvalidConditionalSectionError@83$NSXMLParserInvalidDecimalCharacterRefError@7$NSXMLParserInvalidEncodingError@81$NSXMLParserInvalidEncodingNameError@79$NSXMLParserInvalidHexCharacterRefError@6$NSXMLParserInvalidURIError@91$NSXMLParserLTRequiredError@72$NSXMLParserLTSlashRequiredError@74$NSXMLParserLessThanSymbolInAttributeError@38$NSXMLParserLiteralNotFinishedError@44$NSXMLParserLiteralNotStartedError@43$NSXMLParserMisplacedCDATAEndStringError@62$NSXMLParserMisplacedXMLDeclarationError@64$NSXMLParserMixedContentDeclNotFinishedError@53$NSXMLParserMixedContentDeclNotStartedError@52$NSXMLParserNAMERequiredError@68$NSXMLParserNMTOKENRequiredError@67$NSXMLParserNamespaceDeclarationError@35$NSXMLParserNoDTDError@94$NSXMLParserNotWellBalancedError@85$NSXMLParserNotationNotFinishedError@49$NSXMLParserNotationNotStartedError@48$NSXMLParserOutOfMemoryError@2$NSXMLParserPCDATARequiredError@69$NSXMLParserParsedEntityRefAtEOFError@18$NSXMLParserParsedEntityRefInEpilogError@20$NSXMLParserParsedEntityRefInInternalError@88$NSXMLParserParsedEntityRefInInternalSubsetError@21$NSXMLParserParsedEntityRefInPrologError@19$NSXMLParserParsedEntityRefMissingSemiError@25$NSXMLParserParsedEntityRefNoNameError@24$NSXMLParserPrematureDocumentEndError@5$NSXMLParserProcessingInstructionNotFinishedError@47$NSXMLParserProcessingInstructionNotStartedError@46$NSXMLParserPublicIdentifierRequiredError@71$NSXMLParserSeparatorRequiredError@66$NSXMLParserSpaceRequiredError@65$NSXMLParserStandaloneValueError@78$NSXMLParserStringNotClosedError@34$NSXMLParserStringNotStartedError@33$NSXMLParserTagNameMismatchError@76$NSXMLParserURIFragmentError@92$NSXMLParserURIRequiredError@70$NSXMLParserUndeclaredEntityError@26$NSXMLParserUnfinishedTagError@77$NSXMLParserUnknownEncodingError@31$NSXMLParserUnparsedEntityError@28$NSXMLParserXMLDeclNotFinishedError@57$NSXMLParserXMLDeclNotStartedError@56$NSXMLProcessingInstructionKind@5$NSXMLTextKind@7$NSYearCalendarUnit@4$NS_BigEndian@2$NS_LittleEndian@1$NS_UNICHAR_IS_EIGHT_BIT@0$NS_UnknownByteOrder@0$NSBinarySearchingFirstEqual@256$NSBinarySearchingLastEqual@512$NSBinarySearchingInsertionIndex@1024$NSAttributedStringEnumerationReverse@2$NSAttributedStringEnumerationLongestEffectiveRangeNotRequired@1048576$NSVolumeEnumerationSkipHiddenVolumes@2$NSVolumeEnumerationProduceFileReferenceURLs@4$NSDirectoryEnumerationSkipsSubdirectoryDescendants@1$NSDirectoryEnumerationSkipsPackageDescendants@2$NSDirectoryEnumerationSkipsHiddenFiles@4$NSFileManagerItemReplacementUsingNewMetadataOnly@1$NSFileManagerItemReplacementWithoutDeletingBackupItem@2$NSLocaleLanguageDirectionUnknown@0$NSLocaleLanguageDirectionLeftToRight@1$NSLocaleLanguageDirectionRightToLeft@2$NSLocaleLanguageDirectionTopToBottom@3$NSLocaleLanguageDirectionBottomToTop@4$'''
misc.update({'NSUndefinedDateComponent': sel32or64(2147483647, 9223372036854775807), 'NSNotFound': sel32or64(2147483647, 9223372036854775807), 'NSIntegerMin': sel32or64(-2147483648, -9223372036854775808), 'NSIntegerMax': sel32or64(2147483647, 9223372036854775807), 'NSUIntegerMax': sel32or64(4294967295, 18446744073709551615L)})
misc.update({})
functions = {'NSSwapShort': ('SS',), 'NSJavaClassesForBundle': ('@@Z^@', '', {'arguments': {0: {'type': b'@'}, 1: {'type': b'Z'}, 2: {'type': b'^@', 'type_modifier': b'o'}}}), 'NSDecimalIsNotANumber': ('Z^{_NSDecimal=}',), 'NSSwapHostIntToBig': ('II',), 'NSDecimalDivide': (sel32or64('I^{_NSDecimal=}^{_NSDecimal=}^{_NSDecimal=}I', 'Q^{_NSDecimal=}^{_NSDecimal=}^{_NSDecimal=}Q'),), 'NSEqualRects': (sel32or64('Z{_NSRect={_NSPoint=ff}{_NSSize=ff}}{_NSRect={_NSPoint=ff}{_NSSize=ff}}', 'Z{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSIntegralRect': (sel32or64('{_NSRect={_NSPoint=ff}{_NSSize=ff}}{_NSRect={_NSPoint=ff}{_NSSize=ff}}', '{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSEqualSizes': (sel32or64('Z{_NSSize=ff}{_NSSize=ff}', 'Z{CGSize=dd}{CGSize=dd}'),), 'NSSwapHostLongToLittle': (sel32or64('LL', 'QQ'),), 'NSSwapLittleDoubleToHost': ('d{_NSSwappedDouble=Q}',), 'NSSizeFromCGSize': (sel32or64('{_NSSize=ff}{CGSize=ff}', '{CGSize=dd}{CGSize=dd}'),), 'NSDecimalCompact': ('v^{_NSDecimal=}',), 'NSCreateHashTable': (sel32or64('@{NSHashTableCallBacks=^?^?^?^?^?}I', '@{NSHashTableCallBacks=^?^?^?^?^?}Q'), '', {'retval': {'type': b'@', 'already_cfretained': True}}), 'NSOpenStepRootDirectory': ('@',), 'NSRoundDownToMultipleOfPageSize': (sel32or64('II', 'QQ'),), 'NSJavaNeedsToLoadClasses': ('Z@',), 'NSOffsetRect': (sel32or64('{_NSRect={_NSPoint=ff}{_NSSize=ff}}{_NSRect={_NSPoint=ff}{_NSSize=ff}}ff', '{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}dd'),), 'NSEqualRanges': (sel32or64('Z{_NSRange=II}{_NSRange=II}', 'Z{_NSRange=QQ}{_NSRange=QQ}'),), 'NSDecimalNormalize': (sel32or64('I^{_NSDecimal=}^{_NSDecimal=}I', 'Q^{_NSDecimal=}^{_NSDecimal=}Q'),), 'NSFreeHashTable': ('v@',), 'NSJavaBundleCleanup': ('v@@',), 'NSStringFromMapTable': ('@@',), 'NSJavaNeedsVirtualMachine': ('Z@',), 'NSPointFromString': (sel32or64('{_NSPoint=ff}@', '{CGPoint=dd}@'),), 'NSEnumerateMapTable': (sel32or64('{NSMapEnumerator=II^v}@', '{NSMapEnumerator=QQ^v}@'),), 'NSIsEmptyRect': (sel32or64('Z{_NSRect={_NSPoint=ff}{_NSSize=ff}}', 'Z{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSHeight': (sel32or64('f{_NSRect={_NSPoint=ff}{_NSSize=ff}}', 'd{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSIntegralRectWithOptions': (sel32or64('{_NSRect={_NSPoint=ff}{_NSSize=ff}}{_NSRect={_NSPoint=ff}{_NSSize=ff}}Q', '{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}Q'),), 'NSResetMapTable': ('v@',), 'NSMinY': (sel32or64('f{_NSRect={_NSPoint=ff}{_NSSize=ff}}', 'd{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSPageSize': (sel32or64('I', 'Q'),), 'NSMinX': (sel32or64('f{_NSRect={_NSPoint=ff}{_NSSize=ff}}', 'd{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSDeallocateObject': ('v@',), 'NSDefaultMallocZone': ('^{_NSZone=}',), 'NSRecordAllocationEvent': ('vi@',), 'NSDecimalPower': (sel32or64('I^{_NSDecimal=}^{_NSDecimal=}II', 'Q^{_NSDecimal=}^{_NSDecimal=}QQ'),), 'NSMaxRange': (sel32or64('I{_NSRange=II}', 'Q{_NSRange=QQ}'),), 'NSUserName': ('@',), 'NSLogPageSize': (sel32or64('I', 'Q'),), 'NSSwapDouble': ('{_NSSwappedDouble=Q}{_NSSwappedDouble=Q}',), 'NSMouseInRect': (sel32or64('Z{_NSPoint=ff}{_NSRect={_NSPoint=ff}{_NSSize=ff}}Z', 'Z{CGPoint=dd}{CGRect={CGPoint=dd}{CGSize=dd}}Z'),), 'NSHostByteOrder': (sel32or64('l', 'q'),), 'NSDecimalCompare': ('i^{_NSDecimal=}^{_NSDecimal=}',), 'NSAllMapTableValues': ('@@',), 'NSProtocolFromString': ('@@',), 'NSPointInRect': (sel32or64('Z{_NSPoint=ff}{_NSRect={_NSPoint=ff}{_NSSize=ff}}', 'Z{CGPoint=dd}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSSetZoneName': ('v^{_NSZone=}@',), 'NSCopyObject': (sel32or64('@@I^{_NSZone=}', '@@Q^{_NSZone=}'), '', {'retval': {'type': b'@', 'already_cfretained': True}}), 'NSMidY': (sel32or64('f{_NSRect={_NSPoint=ff}{_NSSize=ff}}', 'd{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSSwapLongLong': ('QQ',), 'NSDecrementExtraRefCountWasZero': ('Z@',), 'NSSwapBigLongToHost': (sel32or64('LL', 'QQ'),), 'NSDecimalMultiply': (sel32or64('I^{_NSDecimal=}^{_NSDecimal=}^{_NSDecimal=}I', 'Q^{_NSDecimal=}^{_NSDecimal=}^{_NSDecimal=}Q'),), 'NSSwapBigLongLongToHost': ('QQ',), 'NSShouldRetainWithZone': ('Z@^{_NSZone=}',), 'NSStringFromRange': (sel32or64('@{_NSRange=II}', '@{_NSRange=QQ}'),), 'NSStringFromClass': ('@#',), 'NSPointToCGPoint': (sel32or64('{CGPoint=ff}{_NSPoint=ff}', '{CGPoint=dd}{CGPoint=dd}'),), 'NSUnionRect': (sel32or64('{_NSRect={_NSPoint=ff}{_NSSize=ff}}{_NSRect={_NSPoint=ff}{_NSSize=ff}}{_NSRect={_NSPoint=ff}{_NSSize=ff}}', '{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSRectToCGRect': (sel32or64('{CGRect={CGPoint=ff}{CGSize=ff}}{_NSRect={_NSPoint=ff}{_NSSize=ff}}', '{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSCopyHashTableWithZone': ('@@^{_NSZone=}', '', {'retval': {'type': b'@', 'already_cfretained': True}}), 'NSSwapBigShortToHost': ('SS',), 'NSSwapHostShortToBig': ('SS',), 'NSStringFromPoint': (sel32or64('@{_NSPoint=ff}', '@{CGPoint=dd}'),), 'NSWidth': (sel32or64('f{_NSRect={_NSPoint=ff}{_NSSize=ff}}', 'd{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSRealMemoryAvailable': (sel32or64('I', 'Q'),), 'NSAllHashTableObjects': ('@@',), 'NSPointFromCGPoint': (sel32or64('{_NSPoint=ff}{CGPoint=ff}', '{CGPoint=dd}{CGPoint=dd}'),), 'NSSizeToCGSize': (sel32or64('{CGSize=ff}{_NSSize=ff}', '{CGSize=dd}{CGSize=dd}'),), 'NSSwapHostLongLongToLittle': ('QQ',), 'NSClassFromString': ('#@',), 'NSSwapLittleLongToHost': (sel32or64('LL', 'QQ'),), 'NSMakePoint': (sel32or64('{_NSPoint=ff}ff', '{CGPoint=dd}dd'),), 'NSSizeFromString': (sel32or64('{_NSSize=ff}@', '{CGSize=dd}@'),), 'NSStringFromRect': (sel32or64('@{_NSRect={_NSPoint=ff}{_NSSize=ff}}', '@{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSIntersectsRect': (sel32or64('Z{_NSRect={_NSPoint=ff}{_NSSize=ff}}{_NSRect={_NSPoint=ff}{_NSSize=ff}}', 'Z{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSIntersectionRect': (sel32or64('{_NSRect={_NSPoint=ff}{_NSSize=ff}}{_NSRect={_NSPoint=ff}{_NSSize=ff}}{_NSRect={_NSPoint=ff}{_NSSize=ff}}', '{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSDecimalAdd': (sel32or64('I^{_NSDecimal=}^{_NSDecimal=}^{_NSDecimal=}I', 'Q^{_NSDecimal=}^{_NSDecimal=}^{_NSDecimal=}Q'),), 'NSCreateHashTableWithZone': (sel32or64('@{NSHashTableCallBacks=^?^?^?^?^?}I^{_NSZone=}', '@{NSHashTableCallBacks=^?^?^?^?^?}Q^{_NSZone=}'), '', {'retval': {'type': b'@', 'already_cfretained': True}}), 'NSSwapFloat': ('{_NSSwappedFloat=I}{_NSSwappedFloat=I}',), 'NSDecimalSubtract': (sel32or64('I^{_NSDecimal=}^{_NSDecimal=}^{_NSDecimal=}I', 'Q^{_NSDecimal=}^{_NSDecimal=}^{_NSDecimal=}Q'),), 'NSFreeMapTable': ('v@',), 'NSLocationInRange': (sel32or64('ZI{_NSRange=II}', 'ZQ{_NSRange=QQ}'),), 'NSFullUserName': ('@',), 'NSSwapLittleShortToHost': ('SS',), 'NSSwapLong': (sel32or64('LL', 'QQ'),), 'NSJavaSetupVirtualMachine': ('@',), 'NSResetHashTable': ('v@',), 'NSConvertHostFloatToSwapped': ('{_NSSwappedFloat=I}f',), 'NSSwapLittleLongLongToHost': ('QQ',), 'NSSwapLittleFloatToHost': ('f{_NSSwappedFloat=I}',), 'NSFileTypeForHFSTypeCode': (sel32or64('@L', '@Q'),), 'NSCountMapTable': (sel32or64('I@', 'Q@'),), 'NSHFSTypeOfFile': ('@@',), 'NSSwapBigIntToHost': ('II',), 'NSRecycleZone': ('v^{_NSZone=}',), 'NSDivideRect': (sel32or64('v{_NSRect={_NSPoint=ff}{_NSSize=ff}}^{_NSRect={_NSPoint=ff}{_NSSize=ff}}^{_NSRect={_NSPoint=ff}{_NSSize=ff}}fI', 'v{CGRect={CGPoint=dd}{CGSize=dd}}^{CGRect={CGPoint=dd}{CGSize=dd}}^{CGRect={CGPoint=dd}{CGSize=dd}}dI'), '', {'arguments': {0: {'type': sel32or64(b'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 1: {'null_accepted': False, 'type': sel32or64(b'^{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'o'}, 2: {'null_accepted': False, 'type': sel32or64(b'^{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'^{CGRect={CGPoint=dd}{CGSize=dd}}'), 'type_modifier': b'o'}, 3: {'type': sel32or64(b'f', b'd')}, 4: {'type': b'I'}}}), 'NSRangeFromString': (sel32or64('{_NSRange=II}@', '{_NSRange=QQ}@'),), 'NSSwapHostIntToLittle': ('II',), 'NSZoneName': ('@^{_NSZone=}',), 'NSSwapHostFloatToBig': ('{_NSSwappedFloat=I}f',), 'NSTemporaryDirectory': ('@',), 'NSDecimalMultiplyByPowerOf10': (sel32or64('I^{_NSDecimal=}^{_NSDecimal=}sI', 'Q^{_NSDecimal=}^{_NSDecimal=}sQ'),), 'NSCompareHashTables': ('Z@@',), 'NSMakeRect': (sel32or64('{_NSRect={_NSPoint=ff}{_NSSize=ff}}ffff', '{CGRect={CGPoint=dd}{CGSize=dd}}dddd'),), 'NSMakeCollectable': ('@@',), 'NSGetSizeAndAlignment': (sel32or64('^t^t^I^I', '^t^t^Q^Q'), '', {'retval': {'c_array_delimited_by_null': True, 'type': b'^t'}, 'arguments': {0: {'c_array_delimited_by_null': True, 'type': b'^t', 'type_modifier': b'n'}, 1: {'type': sel32or64(b'^I', b'^Q'), 'type_modifier': b'o'}, 2: {'type': sel32or64(b'^I', b'^Q'), 'type_modifier': b'o'}}}), 'NSDecimalRound': (sel32or64('v^{_NSDecimal=}^{_NSDecimal=}II', 'v^{_NSDecimal=}^{_NSDecimal=}QQ'),), 'NSInsetRect': (sel32or64('{_NSRect={_NSPoint=ff}{_NSSize=ff}}{_NSRect={_NSPoint=ff}{_NSSize=ff}}ff', '{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}dd'),), 'NSAllocateObject': (sel32or64('@#I^{_NSZone=}', '@#Q^{_NSZone=}'),), 'NSSwapInt': ('II',), 'NSSelectorFromString': (':@',), 'NSStringFromHashTable': ('@@',), 'NSHFSTypeCodeFromFileType': (sel32or64('L@', 'Q@'),), 'NSSwapBigDoubleToHost': ('d{_NSSwappedDouble=Q}',), 'NSLog': ('v@', '', {'arguments': {0: {'printf_format': True, 'type': b'@'}}, 'variadic': 'true'}), 'NSMakeSize': (sel32or64('{_NSSize=ff}ff', '{CGSize=dd}dd'),), 'NSSwapHostDoubleToLittle': ('{_NSSwappedDouble=Q}d',), 'NSRectFromString': (sel32or64('{_NSRect={_NSPoint=ff}{_NSSize=ff}}@', '{CGRect={CGPoint=dd}{CGSize=dd}}@'),), 'NSDecimalString': ('@^{_NSDecimal=}@',), 'NSCreateZone': (sel32or64('^{_NSZone=}IIZ', '^{_NSZone=}QQZ'),), 'NSAllMapTableKeys': ('@@',), 'NSIncrementExtraRefCount': ('v@',), 'NSStringFromSelector': ('@:',), 'NSMakeRange': (sel32or64('{_NSRange=II}II', '{_NSRange=QQ}QQ'),), 'NSConvertSwappedFloatToHost': ('f{_NSSwappedFloat=I}',), 'NSRoundUpToMultipleOfPageSize': (sel32or64('II', 'QQ'),), 'NSContainsRect': (sel32or64('Z{_NSRect={_NSPoint=ff}{_NSSize=ff}}{_NSRect={_NSPoint=ff}{_NSSize=ff}}', 'Z{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSUnionRange': (sel32or64('{_NSRange=II}{_NSRange=II}{_NSRange=II}', '{_NSRange=QQ}{_NSRange=QQ}{_NSRange=QQ}'),), 'NSIntersectionRange': (sel32or64('{_NSRange=II}{_NSRange=II}{_NSRange=II}', '{_NSRange=QQ}{_NSRange=QQ}{_NSRange=QQ}'),), 'NSSwapHostDoubleToBig': ('{_NSSwappedDouble=Q}d',), 'NSJavaSetup': ('@@',), 'NSConvertHostDoubleToSwapped': ('{_NSSwappedDouble=Q}d',), 'NSSwapHostLongToBig': (sel32or64('LL', 'QQ'),), 'NSJavaClassesFromPath': ('@@@Z^@', '', {'arguments': {0: {'type': b'@'}, 1: {'type': b'@'}, 2: {'type': b'Z'}, 3: {'type': b'^@', 'type_modifier': b'o'}}}), 'NSMaxY': (sel32or64('f{_NSRect={_NSPoint=ff}{_NSSize=ff}}', 'd{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSMaxX': (sel32or64('f{_NSRect={_NSPoint=ff}{_NSSize=ff}}', 'd{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSCreateMapTableWithZone': (sel32or64('@{NSMapTableKeyCallBacks=^?^?^?^?^?^v}{NSMapTableValueCallBacks=^?^?^?}I^{_NSZone=}', '@{NSMapTableKeyCallBacks=^?^?^?^?^?^v}{NSMapTableValueCallBacks=^?^?^?}Q^{_NSZone=}'), '', {'retval': {'type': b'@', 'already_cfretained': True}}), 'NSExtraRefCount': (sel32or64('I@', 'Q@'),), 'NSRectFromCGRect': (sel32or64('{_NSRect={_NSPoint=ff}{_NSSize=ff}}{CGRect={CGPoint=ff}{CGSize=ff}}', '{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSHomeDirectory': ('@',), 'NSStringFromSize': (sel32or64('@{_NSSize=ff}', '@{CGSize=dd}'),), 'NSJavaProvidesClasses': ('Z@',), 'NSHomeDirectoryForUser': ('@@',), 'NSIsFreedObject': ('Z@',), 'NSSwapBigFloatToHost': ('f{_NSSwappedFloat=I}',), 'NSConvertSwappedDoubleToHost': ('d{_NSSwappedDouble=Q}',), 'NSMidX': (sel32or64('f{_NSRect={_NSPoint=ff}{_NSSize=ff}}', 'd{CGRect={CGPoint=dd}{CGSize=dd}}'),), 'NSEqualPoints': (sel32or64('Z{_NSPoint=ff}{_NSPoint=ff}', 'Z{CGPoint=dd}{CGPoint=dd}'),), 'NSSwapHostLongLongToBig': ('QQ',), 'NSCompareMapTables': ('Z@@',), 'NSJavaBundleSetup': ('@@@',), 'NSDecimalCopy': ('v^{_NSDecimal=}^{_NSDecimal=}',), 'NSSwapLittleIntToHost': ('II',), 'NSCountHashTable': (sel32or64('I@', 'Q@'),), 'NSJavaObjectNamedInPath': ('@@@',), 'NSStringFromProtocol': ('@@',), 'NSCreateMapTable': (sel32or64('@{NSMapTableKeyCallBacks=^?^?^?^?^?^v}{NSMapTableValueCallBacks=^?^?^?}I', '@{NSMapTableKeyCallBacks=^?^?^?^?^?^v}{NSMapTableValueCallBacks=^?^?^?}Q'), '', {'retval': {'type': b'@', 'already_cfretained': True}}), 'NSSwapHostFloatToLittle': ('{_NSSwappedFloat=I}f',), 'NSEnumerateHashTable': (sel32or64('{NSHashEnumerator=II^v}@', '{NSHashEnumerator=QQ^v}@'),), 'NXReadNSObjectFromCoder': ('@@',), 'NSCopyMapTableWithZone': ('@@^{_NSZone=}', '', {'retval': {'type': b'@', 'already_cfretained': True}}), 'NSSwapHostShortToLittle': ('SS',), 'NSSearchPathForDirectoriesInDomains': ('@IIZ',)}
cftypes = []
r = objc.registerMetaDataForSelector
objc._updatingMetadata(True)
try:
    pass
    r('NSTextCheckingResult', b'regularExpressionCheckingResultWithRanges:count:regularExpression:', {'arguments': {2: {'type': sel32or64(b'^{_NSRange=II}', b'^{_NSRange=QQ}'), 'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSTextCheckingResult', b'transitInformationCheckingResultWithRange:components:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSTextCheckingResult', b'phoneNumberCheckingResultWithRange:phoneNumber:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSTextCheckingResult', b'orthographyCheckingResultWithRange:orthography:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSTextCheckingResult', b'spellCheckingResultWithRange:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSTextCheckingResult', b'grammarCheckingResultWithRange:details:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSTextCheckingResult', b'dateCheckingResultWithRange:date:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSTextCheckingResult', b'dateCheckingResultWithRange:date:timeZone:duration:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSTextCheckingResult', b'addressCheckingResultWithRange:components:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSTextCheckingResult', b'linkCheckingResultWithRange:URL:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSTextCheckingResult', b'quoteCheckingResultWithRange:replacementString:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSTextCheckingResult', b'dashCheckingResultWithRange:replacementString:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSTextCheckingResult', b'replacementCheckingResultWithRange:replacementString:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSTextCheckingResult', b'correctionCheckingResultWithRange:replacementString:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSCache', b'evictsObjectsWithDiscardedContent', {'retval': {'type': b'Z'}})
    r('NSCache', b'setEvictsObjectsWithDiscardedContent:', {'arguments': {2: {'type': b'Z'}}})
    r('NSAffineTransform', b'setTransformStruct:', {'arguments': {2: {'type': sel32or64(b'{_NSAffineTransformStruct=ffffff}', b'{_NSAffineTransformStruct=dddddd}')}}})
    r('NSAffineTransform', b'transformPoint:', {'retval': {'type': sel32or64(b'{_NSPoint=ff}', b'{CGPoint=dd}')}, 'arguments': {2: {'type': sel32or64(b'{_NSPoint=ff}', b'{CGPoint=dd}')}}})
    r('NSAffineTransform', b'transformSize:', {'retval': {'type': sel32or64(b'{_NSSize=ff}', b'{CGSize=dd}')}, 'arguments': {2: {'type': sel32or64(b'{_NSSize=ff}', b'{CGSize=dd}')}}})
    r('NSAffineTransform', b'transformStruct', {'retval': {'type': sel32or64(b'{_NSAffineTransformStruct=ffffff}', b'{_NSAffineTransformStruct=dddddd}')}})
    r('NSAppleEventDescriptor', b'booleanValue', {'retval': {'type': b'Z'}})
    r('NSAppleEventDescriptor', b'descriptorWithBoolean:', {'arguments': {2: {'type': b'Z'}}})
    r('NSAppleEventDescriptor', b'descriptorWithDescriptorType:bytes:length:', {'arguments': {3: {'type_modifier': b'n', 'c_array_length_in_arg': 4}}})
    r('NSAppleEventDescriptor', b'initWithAEDescNoCopy:', {'arguments': {2: {'type_modifier': b'n'}}})
    r('NSAppleEventDescriptor', b'initWithDescriptorType:bytes:length:', {'arguments': {3: {'type_modifier': b'n', 'c_array_length_in_arg': 4}}})
    r('NSAppleEventDescriptor', b'dispatchRawAppleEvent:withRawReply:handlerRefCon:', {'retval': {'type': b's'}, 'arguments': {4: {'type': b'l'}}})
    r('NSAppleEventDescriptor', b'setEventHandler:andSelector:forEventClass:andEventID:', {'arguments': {3: {'sel_of_type': b'v@:@@'}}})
    r('NSAppleScript', b'compileAndReturnError:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type_modifier': b'o'}}})
    r('NSAppleScript', b'executeAndReturnError:', {'arguments': {2: {'type_modifier': b'o'}}})
    r('NSAppleScript', b'executeAppleEvent:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSAppleScript', b'initWithContentsOfURL:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSAppleScript', b'isCompiled', {'retval': {'type': b'Z'}})
    r('NSArchiver', b'archiveRootObject:toFile:', {'retval': {'type': b'Z'}})
    r('NSArray', b'enumerateObjectsUsingBlock:', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': sel32or64(b'I', b'Q')}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSArray', b'enumerateObjectsWithOptions:usingBlock:', {'arguments': {3: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': sel32or64(b'I', b'Q')}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSArray', b'enumerateObjectsAtIndexes:options:usingBlock:', {'arguments': {4: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': sel32or64(b'I', b'Q')}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSArray', b'indexOfObjectPassingTest:', {'arguments': {2: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': sel32or64(b'I', b'Q')}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSArray', b'indexOfObjectWithOptions:passingTest:', {'arguments': {3: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': sel32or64(b'I', b'Q')}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSArray', b'indexOfObjectAtIndexes:options:passingTest:', {'arguments': {4: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': sel32or64(b'I', b'Q')}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSArray', b'indexesOfObjectsPassingTest:', {'arguments': {2: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': sel32or64(b'I', b'Q')}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSArray', b'indexesOfObjectsWithOptions:passingTest:', {'arguments': {3: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': sel32or64(b'I', b'Q')}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSArray', b'indexesOfObjectsAtIndexes:options:passingTest:', {'arguments': {4: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': sel32or64(b'I', b'Q')}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSArray', b'sortedArrayUsingComparator:', {'arguments': {2: {'callable': {'retval': {'type': b'l'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r('NSArray', b'sortedArrayWithOptions:usingComparator:', {'arguments': {3: {'callable': {'retval': {'type': b'l'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r('NSArray', b'indexOfObject:inSortedRange:options:usingComparator:', {'arguments': {5: {'callable': {'retval': {'type': b'l'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r('NSArray', b'sortedArrayUsingFunction:context:', {'arguments': {2: {'callable': {'retval': {'type': b'l'}, 'arguments': {0: {'type': b'@'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}, 'callable_retained': False}, 3: {'type': b'@'}}})
    r('NSArray', b'sortedArrayUsingFunction:context:hint:', {'arguments': {2: {'callable': {'retval': {'type': b'l'}, 'arguments': {0: {'type': b'@'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}, 'callable_retained': False}, 3: {'type': b'@'}}})
    r('NSArray', b'arrayWithObjects:', {'c_array_delimited_by_null': True, 'variadic': 'true'})
    r('NSArray', b'initWithObjects:', {'c_array_delimited_by_null': True, 'variadic': 'true'})
    r('NSArray', b'arrayWithObjects:count:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSArray', b'containsObject:', {'retval': {'type': b'Z'}})
    r('NSArray', b'getObjects:', {})
    r('NSArray', b'getObjects:range:', {'retval': {'type': b'v'}, 'arguments': {2: {'type_modifier': b'o', 'c_array_length_in_arg': 3}, 3: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSArray', b'indexOfObject:inRange:', {'arguments': {3: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSArray', b'indexOfObjectIdenticalTo:inRange:', {'arguments': {3: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSArray', b'initWithArray:copyItems:', {'arguments': {3: {'type': b'Z'}}})
    r('NSArray', b'initWithObjects:count:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSArray', b'isEqualToArray:', {'retval': {'type': b'Z'}})
    r('NSArray', b'makeObjectsPerformSelector:', {'arguments': {2: {'sel_of_type': b'v@:'}}})
    r('NSArray', b'makeObjectsPerformSelector:withObject:', {'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSArray', b'sortedArrayUsingSelector:', {'arguments': {2: {'sel_of_type': b'i@:@'}}})
    r('NSArray', b'subarrayWithRange:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSArray', b'writeToFile:atomically:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type': b'Z'}}})
    r('NSArray', b'writeToURL:atomically:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type': b'Z'}}})
    r('NSAssertionHandler', b'handleFailureInFunction:file:lineNumber:description:', {'arguments': {5: {'printf_format': True, 'type': b'@'}}, 'variadic': 'true'})
    r('NSAssertionHandler', b'handleFailureInMethod:object:file:lineNumber:description:', {'arguments': {6: {'printf_format': True, 'type': b'@'}}, 'variadic': 'true'})
    r('NSAttributedString', b'enumerateAttributesInRange:options:usingBlock:', {'arguments': {4: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSAttributedString', b'enumerateAttribute:inRange:options:usingBlock:', {'arguments': {5: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSAttributedString', b'attribute:atIndex:effectiveRange:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSAttributedString', b'attribute:atIndex:longestEffectiveRange:inRange:', {'arguments': {4: {'type_modifier': b'o'}, 5: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSAttributedString', b'attributedSubstringFromRange:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSAttributedString', b'attributesAtIndex:effectiveRange:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSAttributedString', b'attributesAtIndex:longestEffectiveRange:inRange:', {'arguments': {3: {'type_modifier': b'o'}, 4: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSAttributedString', b'isEqualToAttributedString:', {'retval': {'type': b'Z'}})
    r('NSAutoreleasePool', b'enableFreedObjectCheck:', {'arguments': {2: {'type': b'Z'}}})
    r('NSAutoreleasePool', b'enableRelease:', {'arguments': {2: {'type': b'Z'}}})
    r('NSBundle', b'isLoaded', {'retval': {'type': b'Z'}})
    r('NSBundle', b'load', {'retval': {'type': b'Z'}})
    r('NSBundle', b'loadAndReturnError:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type_modifier': b'o'}}})
    r('NSBundle', b'preflightAndReturnError:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type_modifier': b'o'}}})
    r('NSBundle', b'unload', {'retval': {'type': b'Z'}})
    r('NSCalendar', b'maximumRangeOfUnit:', {'retval': {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}})
    r('NSCalendar', b'minimumRangeOfUnit:', {'retval': {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}})
    r('NSCalendar', b'rangeOfUnit:inUnit:forDate:', {'retval': {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}})
    r('NSCalendar', b'rangeOfUnit:startDate:interval:forDate:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type_modifier': b'o'}, 4: {'type_modifier': b'o'}}})
    r('NSCalendarDate', b'years:months:days:hours:minutes:seconds:sinceDate:', {'retval': {'type': b'v'}, 'arguments': {2: {'type_modifier': b'o'}, 3: {'type_modifier': b'o'}, 4: {'type_modifier': b'o'}, 5: {'type_modifier': b'o'}, 6: {'type_modifier': b'o'}, 7: {'type_modifier': b'o'}, 8: {'type': b'@'}}})
    r('NSCharacterSet', b'characterIsMember:', {'retval': {'type': b'Z'}})
    r('NSCharacterSet', b'characterSetWithRange:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSCharacterSet', b'hasMemberInPlane:', {'retval': {'type': b'Z'}})
    r('NSCharacterSet', b'isSupersetOfSet:', {'retval': {'type': b'Z'}})
    r('NSCharacterSet', b'longCharacterIsMember:', {'retval': {'type': b'Z'}})
    r('NSCoder', b'allowsKeyedCoding', {'retval': {'type': b'Z'}})
    r('NSCoder', b'containsValueForKey:', {'retval': {'type': b'Z'}})
    r('NSCoder', b'decodeBoolForKey:', {'retval': {'type': b'Z'}})
    r('NSCoder', b'decodeBytesForKey:returnedLength:', {'retval': {'type': b'^v', 'c_array_length_in_arg': 3}, 'arguments': {3: {'type_modifier': b'o'}}})
    r('NSCoder', b'decodeBytesWithReturnedLength:', {'retval': {'c_array_length_in_arg': 2}, 'arguments': {2: {'type_modifier': b'o'}}})
    r('NSCoder', b'decodePoint', {'retval': {'type': sel32or64(b'{_NSPoint=ff}', b'{CGPoint=dd}')}})
    r('NSCoder', b'decodePointForKey:', {'retval': {'type': sel32or64(b'{_NSPoint=ff}', b'{CGPoint=dd}')}, 'arguments': {2: {'type': b'@'}}})
    r('NSCoder', b'decodeRect', {'retval': {'type': sel32or64(b'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSCoder', b'decodeRectForKey:', {'retval': {'type': sel32or64(b'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'{CGRect={CGPoint=dd}{CGSize=dd}}')}, 'arguments': {2: {'type': b'@'}}})
    r('NSCoder', b'decodeSize', {'retval': {'type': sel32or64(b'{_NSSize=ff}', b'{CGSize=dd}')}})
    r('NSCoder', b'decodeSizeForKey:', {'retval': {'type': sel32or64(b'{_NSSize=ff}', b'{CGSize=dd}')}, 'arguments': {2: {'type': b'@'}}})
    r('NSCoder', b'decodeValueOfObjCType:at:', {'arguments': {2: {'c_array_delimited_by_null': True, 'type': b'^t', 'type_modifier': b'n'}, 3: {'type': b'^v'}}})
    r('NSCoder', b'decodeValuesOfObjCTypes:', {'arguments': {2: {'c_array_delimited_by_null': True, 'type': b'^t', 'type_modifier': b'n'}}, 'variadic': 'true'})
    r('NSCoder', b'encodeArrayOfObjCType:count:at:', {'arguments': {2: {'c_array_delimited_by_null': True, 'type': b'^t', 'type_modifier': b'n'}, 4: {'type': b'^v'}}})
    r('NSCoder', b'encodeBool:forKey:', {'arguments': {2: {'type': b'Z'}}})
    r('NSCoder', b'encodeBytes:length:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSCoder', b'encodeBytes:length:forKey:', {'arguments': {2: {'type': b'^v', 'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSCoder', b'encodePoint:', {'arguments': {2: {'type': sel32or64(b'{_NSPoint=ff}', b'{CGPoint=dd}')}}})
    r('NSCoder', b'encodePoint:forKey:', {'arguments': {2: {'type': sel32or64(b'{_NSPoint=ff}', b'{CGPoint=dd}')}}})
    r('NSCoder', b'encodeRect:', {'arguments': {2: {'type': sel32or64(b'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSCoder', b'encodeRect:forKey:', {'arguments': {2: {'type': sel32or64(b'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSCoder', b'encodeSize:', {'arguments': {2: {'type': sel32or64(b'{_NSSize=ff}', b'{CGSize=dd}')}}})
    r('NSCoder', b'encodeSize:forKey:', {'arguments': {2: {'type': sel32or64(b'{_NSSize=ff}', b'{CGSize=dd}')}}})
    r('NSCoder', b'encodeValueOfObjCType:at:', {'arguments': {2: {'c_array_delimited_by_null': True, 'type': b'^t', 'type_modifier': b'n'}, 3: {'type': b'^v'}}})
    r('NSCoder', b'encodeValuesOfObjCTypes:', {'arguments': {2: {'c_array_delimited_by_null': True, 'type': b'^t', 'type_modifier': b'n'}}, 'variadic': 'true'})
    r('NSComparisonPredicate', b'initWithLeftExpression:rightExpression:customSelector:', {'arguments': {4: {'sel_of_type': b'Z@:@'}}})
    r('NSComparisonPredicate', b'predicateWithLeftExpression:rightExpression:customSelector:', {'arguments': {4: {'sel_of_type': b'Z@:@'}}})
    r('NSCondition', b'waitUntilDate:', {'retval': {'type': b'Z'}})
    r('NSConditionLock', b'lockBeforeDate:', {'retval': {'type': b'Z'}})
    r('NSConditionLock', b'lockWhenCondition:beforeDate:', {'retval': {'type': b'Z'}})
    r('NSConditionLock', b'tryLock', {'retval': {'type': b'Z'}})
    r('NSConditionLock', b'tryLockWhenCondition:', {'retval': {'type': b'Z'}})
    r('NSConnection', b'independentConversationQueueing', {'retval': {'type': b'Z'}})
    r('NSConnection', b'isValid', {'retval': {'type': b'Z'}})
    r('NSConnection', b'multipleThreadsEnabled', {'retval': {'type': b'Z'}})
    r('NSConnection', b'registerName:', {'retval': {'type': b'Z'}})
    r('NSConnection', b'registerName:withNameServer:', {'retval': {'type': b'Z'}})
    r('NSConnection', b'setIndependentConversationQueueing:', {'arguments': {2: {'type': b'Z'}}})
    r('NSData', b'rangeOfData:options:range:', {'retval': {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}})
    r('NSData', b'dataWithBytes:length:', {'arguments': {2: {'type': b'^v', 'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSData', b'dataWithBytesNoCopy:length:', {'arguments': {2: {'type': b'^v', 'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSData', b'dataWithBytesNoCopy:length:freeWhenDone:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 3}, 4: {'type': b'Z'}}})
    r('NSData', b'dataWithContentsOfFile:options:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSData', b'dataWithContentsOfURL:options:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSData', b'getBytes:', {})
    r('NSData', b'getBytes:length:', {'arguments': {2: {'type_modifier': b'o', 'c_array_length_in_arg': 3}}})
    r('NSData', b'getBytes:range:', {'arguments': {2: {'type_modifier': b'o', 'c_array_length_in_arg': 3}, 3: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSData', b'initWithBytes:length:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSData', b'initWithBytesNoCopy:length:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSData', b'initWithBytesNoCopy:length:freeWhenDone:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 3}, 4: {'type': b'Z'}}})
    r('NSData', b'initWithContentsOfFile:options:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSData', b'initWithContentsOfURL:options:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSData', b'isEqualToData:', {'retval': {'type': b'Z'}})
    r('NSData', b'subdataWithRange:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSData', b'writeToFile:atomically:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type': b'Z'}}})
    r('NSData', b'writeToFile:options:error:', {'retval': {'type': b'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSData', b'writeToURL:atomically:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type': b'Z'}}})
    r('NSData', b'writeToURL:options:error:', {'retval': {'type': b'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSDate', b'isEqualToDate:', {'retval': {'type': b'Z'}})
    r('NSDateFormatter', b'doesRelativeDateFormatting', {'retval': {'type': b'Z'}})
    r('NSDateFormatter', b'setDoesRelativeDateFormatting:', {'arguments': {2: {'type': b'Z'}}})
    r('NSDateFormatter', b'allowsNaturalLanguage', {'retval': {'type': b'Z'}})
    r('NSDateFormatter', b'generatesCalendarDates', {'retval': {'type': b'Z'}})
    r('NSDateFormatter', b'getObjectValue:forString:range:error:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type_modifier': b'o'}, 4: {'type': sel32or64(b'^{_NSRange=II}', b'^{_NSRange=QQ}'), 'type_modifier': b'N'}, 5: {'type_modifier': b'o'}}})
    r('NSDateFormatter', b'initWithDateFormat:allowNaturalLanguage:', {'arguments': {3: {'type': b'Z'}}})
    r('NSDateFormatter', b'isLenient', {'retval': {'type': b'Z'}})
    r('NSDateFormatter', b'setGeneratesCalendarDates:', {'arguments': {2: {'type': b'Z'}}})
    r('NSDateFormatter', b'setLenient:', {'arguments': {2: {'type': b'Z'}}})
    r('NSDecimalNumber', b'decimalNumberWithDecimal:', {'arguments': {2: {'type': b'{NSDecimal=b8b4b1b1b18[8S]}'}}})
    r('NSDecimalNumber', b'decimalNumberWithMantissa:exponent:isNegative:', {'arguments': {4: {'type': b'Z'}}})
    r('NSDecimalNumber', b'initWithDecimal:', {'arguments': {2: {'type': b'{NSDecimal=b8b4b1b1b18[8S]}'}}})
    r('NSDecimalNumber', b'initWithMantissa:exponent:isNegative:', {'arguments': {4: {'type': b'Z'}}})
    r('NSDecimalNumber', b'objCType', {'retval': {'c_array_delimited_by_null': True, 'type': b'^t'}})
    r('NSDecimalNumberHandler', b'decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:', {'arguments': {4: {'type': b'Z'}, 5: {'type': b'Z'}, 6: {'type': b'Z'}, 7: {'type': b'Z'}}})
    r('NSDecimalNumberHandler', b'initWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:', {'arguments': {4: {'type': b'Z'}, 5: {'type': b'Z'}, 6: {'type': b'Z'}, 7: {'type': b'Z'}}})
    r('NSDictionary', b'enumerateKeysAndObjectsUsingBlock:', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSDictionary', b'enumerateKeysAndObjectsWithOptions:usingBlock:', {'arguments': {3: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSDictionary', b'keysSortedByValueUsingComparator:', {'arguments': {2: {'callable': {'retval': {'type': b'i'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r('NSDictionary', b'keysSortedByValueWithOptions:usingComparator:', {'arguments': {3: {'callable': {'retval': {'type': sel32or64(b'i', b'q')}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r('NSDictionary', b'keysOfEntriesPassingTest:', {'arguments': {2: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSDictionary', b'keysOfEntriesWithOptions:passingTest:', {'arguments': {3: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSDictionary', b'dictionaryWithObjectsAndKeys:', {'c_array_delimited_by_null': True, 'variadic': 'true'})
    r('NSDictionary', b'dictionaryWithObjects:forKeys:count:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 4}, 3: {'type_modifier': b'n', 'c_array_length_in_arg': 4}}})
    r('NSDictionary', b'fileExtensionHidden', {'retval': {'type': b'Z'}})
    r('NSDictionary', b'fileIsAppendOnly', {'retval': {'type': b'Z'}})
    r('NSDictionary', b'fileIsImmutable', {'retval': {'type': b'Z'}})
    r('NSDictionary', b'getObjects:andKeys:', {})
    r('NSDictionary', b'initWithDictionary:copyItems:', {'arguments': {3: {'type': b'Z'}}})
    r('NSDictionary', b'initWithObjectsAndKeys:', {'c_array_delimited_by_null': True, 'variadic': 'true'})
    r('NSDictionary', b'initWithObjects:forKeys:count:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 4}, 3: {'type_modifier': b'n', 'c_array_length_in_arg': 4}}})
    r('NSDictionary', b'isEqualToDictionary:', {'retval': {'type': b'Z'}})
    r('NSDictionary', b'keysSortedByValueUsingSelector:', {'arguments': {2: {'sel_of_type': b'i@:@'}}})
    r('NSDictionary', b'writeToFile:atomically:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type': b'Z'}}})
    r('NSDictionary', b'writeToURL:atomically:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type': b'Z'}}})
    r('NSDistributedLock', b'tryLock', {'retval': {'type': b'Z'}})
    r('NSDistributedNotificationCenter', b'addObserver:selector:name:object:', {'arguments': {3: {'sel_of_type': b'v@:@'}}})
    r('NSDistributedNotificationCenter', b'addObserver:selector:name:object:suspensionBehavior:', {'arguments': {3: {'sel_of_type': b'v@:@'}}})
    r('NSDistributedNotificationCenter', b'postNotificationName:object:userInfo:deliverImmediately:', {'arguments': {5: {'type': b'Z'}}})
    r('NSDistributedNotificationCenter', b'setSuspended:', {'arguments': {2: {'type': b'Z'}}})
    r('NSDistributedNotificationCenter', b'suspended', {'retval': {'type': b'Z'}})
    r('NSException', b'raise:format:', {'arguments': {3: {'printf_format': True, 'type': b'@'}}, 'variadic': 'true'})
    r('NSException', b'raise:format:arguments:', {})
    r('NSExpression', b'expressionForBlock:arguments:', {'arguments': {2: {'callable': {'retval': {'type': b'@'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}, 3: {'type': b'@'}}}}}})
    r('NSExpression', b'expressionBlock', {'retval': {'callable': {'retval': {'type': b'@'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}, 3: {'type': b'@'}}}}})
    r('NSFileHandle', b'fileHandleForReadingFromURL:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSFileHandle', b'fileHandleForWritingToURL:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSFileHandle', b'fileHandleForUpdatingURL:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSFileHandle', b'readabilityHandler', {'retval': {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}}}}})
    r('NSFileHandle', b'writeabilityHandler', {'retval': {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}}}}})
    r('NSFileHandle', b'setReadabilityHandler', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}}}}}})
    r('NSFileHandle', b'setWriteabilityHandler', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}}}}}})
    r('NSFileHandle', b'initWithFileDescriptor:closeOnDealloc:', {'arguments': {3: {'type': b'Z'}}})
    r('NSFileManager', b'attributesOfFileSystemForPath:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSFileManager', b'attributesOfItemAtPath:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSFileManager', b'changeCurrentDirectoryPath:', {'retval': {'type': b'Z'}})
    r('NSFileManager', b'changeFileAttributes:atPath:', {'retval': {'type': b'Z'}})
    r('NSFileManager', b'contentsEqualAtPath:andPath:', {'retval': {'type': b'Z'}})
    r('NSFileManager', b'contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:', {'arguments': {5: {'type_modifier': b'o'}}})
    r('NSFileManager', b'contentsOfDirectoryAtPath:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSFileManager', b'copyItemAtPath:toPath:error:', {'retval': {'type': b'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSFileManager', b'copyPath:toPath:handler:', {'retval': {'type': b'Z'}})
    r('NSFileManager', b'createDirectoryAtPath:attributes:', {'retval': {'type': b'Z'}})
    r('NSFileManager', b'createDirectoryAtURL:withIntermediateDirectories:attributes:error:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type': b'Z'}, 5: {'type_modifier': b'o'}}})
    r('NSFileManager', b'createSymbolicLinkAtURL:withDestinationURL:error:', {'retval': {'type': b'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSFileManager', b'createDirectoryAtPath:withIntermediateDirectories:attributes:error:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type': b'Z'}, 5: {'type_modifier': b'o'}}})
    r('NSFileManager', b'createFileAtPath:contents:attributes:', {'retval': {'type': b'Z'}})
    r('NSFileManager', b'createSymbolicLinkAtPath:pathContent:', {'retval': {'type': b'Z'}})
    r('NSFileManager', b'createSymbolicLinkAtPath:withDestinationPath:error:', {'retval': {'type': b'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSFileManager', b'destinationOfSymbolicLinkAtPath:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSFileManager', b'fileAttributesAtPath:traverseLink:', {'arguments': {3: {'type': b'Z'}}})
    r('NSFileManager', b'fileExistsAtPath:', {'retval': {'type': b'Z'}})
    r('NSFileManager', b'fileExistsAtPath:isDirectory:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type': b'^Z', 'type_modifier': b'o'}}})
    r('NSFileManager', b'fileSystemRepresentationWithPath:', {'retval': {'c_array_delimited_by_null': True, 'type': b'^t'}})
    r('NSFileManager', b'isDeletableFileAtPath:', {'retval': {'type': b'Z'}})
    r('NSFileManager', b'isExecutableFileAtPath:', {'retval': {'type': b'Z'}})
    r('NSFileManager', b'isReadableFileAtPath:', {'retval': {'type': b'Z'}})
    r('NSFileManager', b'isWritableFileAtPath:', {'retval': {'type': b'Z'}})
    r('NSFileManager', b'linkItemAtPath:toPath:error:', {'retval': {'type': b'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSFileManager', b'linkPath:toPath:handler:', {'retval': {'type': b'Z'}})
    r('NSFileManager', b'moveItemAtPath:toPath:error:', {'retval': {'type': b'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSFileManager', b'movePath:toPath:handler:', {'retval': {'type': b'Z'}})
    r('NSFileManager', b'removeFileAtPath:handler:', {'retval': {'type': b'Z'}})
    r('NSFileManager', b'removeItemAtPath:error:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type_modifier': b'o'}}})
    r('NSFileManager', b'setAttributes:ofItemAtPath:error:', {'retval': {'type': b'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSFileManager', b'stringWithFileSystemRepresentation:length:', {'arguments': {2: {'type': b'^t', 'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSFileManager', b'subpathsOfDirectoryAtPath:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSFileManager', b'URLForDirectory:inDomain:appropriateForURL:create:error:', {'arguments': {5: {'type': b'Z'}, 6: {'type_modifier': b'o'}}})
    r('NSFileManager', b'copyItemAtURL:toURL:error:', {'retval': {'type': b'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSFileManager', b'moveItemAtURL:toURL:error:', {'retval': {'type': b'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSFileManager', b'linkItemAtURL:toURL:error:', {'retval': {'type': b'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSFileManager', b'removeItemAtURL:error:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type_modifier': b'o'}}})
    r('NSFileManager', b'enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:', {'arguments': {5: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r('NSFileManager', b'replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:', {'retval': {'type': b'Z'}, 'arguments': {6: {'type_modifier': b'o'}, 7: {'type_modifier': b'o'}}})
    r('NSFileManager', b'setUbiquitous:itemAtURL:destinationURL:error:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type': b'Z'}, 5: {'type_modifier': b'o'}}})
    r('NSFileManager', b'isUbiquitousItemAtURL:', {'retval': {'type': b'Z'}})
    r('NSFileManager', b'startDownloadingUbiquitousItemAtURL:error:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type_modifier': b'o'}}})
    r('NSFileManager', b'evictUbiquitousItemAtURL:error:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type_modifier': b'o'}}})
    r('NSFileManager', b'URLForPublishingUbiquitousItemAtURL:expirationDate:error:', {'arguments': {3: {'type_modifier': b'o'}, 4: {'type_modifier': b'o'}}})
    r('NSFormatter', b'getObjectValue:forString:errorDescription:', {'retval': {'type': b'Z'}, 'arguments': {2: {'null_accepted': False, 'type_modifier': b'o'}, 4: {'type_modifier': b'o'}}})
    r('NSFormatter', b'isPartialStringValid:newEditingString:errorDescription:', {'retval': {'type': b'Z'}, 'arguments': {3: {'null_accepted': False, 'type_modifier': b'N'}, 4: {'type_modifier': b'o'}}})
    r('NSFormatter', b'isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:', {'retval': {'type': b'Z'}, 'arguments': {2: {'null_accepted': False, 'type_modifier': b'N'}, 3: {'null_accepted': False, 'type_modifier': b'N'}, 5: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 6: {'type_modifier': b'o'}}})
    r('NSGarbageCollector', b'isCollecting', {'retval': {'type': b'Z'}})
    r('NSGarbageCollector', b'isEnabled', {'retval': {'type': b'Z'}})
    r('NSHTTPCookie', b'isHTTPOnly', {'retval': {'type': b'Z'}})
    r('NSHTTPCookie', b'isSecure', {'retval': {'type': b'Z'}})
    r('NSHTTPCookie', b'isSessionOnly', {'retval': {'type': b'Z'}})
    r('NSHashTable', b'containsObject:', {'retval': {'type': b'Z'}})
    r('NSHashTable', b'intersectsHashTable:', {'retval': {'type': b'Z'}})
    r('NSHashTable', b'isEqualToHashTable:', {'retval': {'type': b'Z'}})
    r('NSHashTable', b'isSubsetOfHashTable:', {'retval': {'type': b'Z'}})
    r('NSHost', b'isEqualToHost:', {'retval': {'type': b'Z'}})
    r('NSHost', b'isHostCacheEnabled', {'retval': {'type': b'Z'}})
    r('NSHost', b'setHostCacheEnabled:', {'arguments': {2: {'type': b'Z'}}})
    r('NSIndexPath', b'getIndexes:', {'arguments': {2: {'type_modifier': b'o', 'c_array_of_variable_length': True}}})
    r('NSIndexPath', b'indexPathWithIndexes:length:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSIndexPath', b'initWithIndexes:length:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSIndexSet', b'containsIndex:', {'retval': {'type': b'Z'}})
    r('NSIndexSet', b'containsIndexes:', {'retval': {'type': b'Z'}})
    r('NSIndexSet', b'containsIndexesInRange:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSIndexSet', b'countOfIndexesInRange:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSIndexSet', b'getIndexes:maxCount:inIndexRange:', {'arguments': {2: {'null_accepted': False, 'c_array_length_in_result': True, 'type_modifier': b'o', 'c_array_length_in_arg': 3}, 4: {'null_accepted': False, 'type_modifier': b'N'}}})
    r('NSIndexSet', b'indexSetWithIndexesInRange:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSIndexSet', b'initWithIndexesInRange:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSIndexSet', b'intersectsIndexesInRange:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSIndexSet', b'isEqualToIndexSet:', {'retval': {'type': b'Z'}})
    r('NSIndexSet', b'enumerateIndexesUsingBlock:', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': sel32or64(b'I', b'Q')}, 2: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSIndexSet', b'enumerateIndexesWithOptions:usingBlock:', {'arguments': {3: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': sel32or64(b'I', b'Q')}, 2: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSIndexSet', b'enumerateIndexesInRange:options:usingBlock:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 4: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': sel32or64(b'I', b'Q')}, 2: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSIndexSet', b'indexPassingTest:', {'arguments': {2: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': sel32or64(b'I', b'Q')}, 2: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSIndexSet', b'indexWithOptions:passingTest:', {'arguments': {3: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': sel32or64(b'I', b'Q')}, 2: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSIndexSet', b'indexInRange:options:passingTest:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 4: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': sel32or64(b'I', b'Q')}, 2: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSIndexSet', b'indexesPassingTest:', {'arguments': {2: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': sel32or64(b'I', b'Q')}, 2: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSIndexSet', b'indexesWithOptions:passingTest:', {'arguments': {3: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': sel32or64(b'I', b'Q')}, 2: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSIndexSet', b'indexesInRange:options:passingTest:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 4: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': sel32or64(b'I', b'Q')}, 2: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSIndexSet', b'enumerateRangesUsingBlock:', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 2: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSIndexSet', b'enumerateRangesWithOptions:usingBlock:', {'arguments': {3: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 2: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSIndexSet', b'enumerateRangesInRange:options:usingBlock:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 4: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 2: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSInputStream', b'getBuffer:length:', {})
    r('NSInputStream', b'hasBytesAvailable', {'retval': {'type': b'Z'}})
    r('NSInputStream', b'read:maxLength:', {'arguments': {2: {'c_array_length_in_result': True, 'type': b'^v', 'type_modifier': b'o', 'c_array_length_in_arg': 3}}})
    r('NSInvocation', b'argumentsRetained', {'retval': {'type': b'Z'}})
    r('NSInvocationOperation', b'initWithTarget:selector:object:', {'arguments': {3: {'sel_of_type': b'v@:@'}}})
    r('NSKeyedArchiver', b'archiveRootObject:toFile:', {'retval': {'type': b'Z'}})
    r('NSKeyedArchiver', b'encodeBool:forKey:', {'arguments': {2: {'type': b'Z'}}})
    r('NSKeyedArchiver', b'encodeBytes:length:forKey:', {'arguments': {2: {'type': b'^v', 'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSKeyedUnarchiver', b'containsValueForKey:', {'retval': {'type': b'Z'}})
    r('NSKeyedUnarchiver', b'decodeBoolForKey:', {'retval': {'type': b'Z'}})
    r('NSKeyedUnarchiver', b'decodeBytesForKey:returnedLength:', {'retval': {'type': b'^v', 'c_array_length_in_arg': 3}, 'arguments': {3: {'type_modifier': b'o'}}})
    r('NSLock', b'lockBeforeDate:', {'retval': {'type': b'Z'}})
    r('NSLock', b'tryLock', {'retval': {'type': b'Z'}})
    r('NSMachBootstrapServer', b'registerPort:name:', {'retval': {'type': b'Z'}})
    r('NSMetadataQuery', b'isGathering', {'retval': {'type': b'Z'}})
    r('NSMetadataQuery', b'isStarted', {'retval': {'type': b'Z'}})
    r('NSMetadataQuery', b'isStopped', {'retval': {'type': b'Z'}})
    r('NSMetadataQuery', b'startQuery', {'retval': {'type': b'Z'}})
    r('NSMethodSignature', b'getArgumentTypeAtIndex:', {'retval': {'c_array_delimited_by_null': True, 'type': b'^t'}})
    r('NSMethodSignature', b'isOneway', {'retval': {'type': b'Z'}})
    r('NSMethodSignature', b'methodReturnType', {'retval': {'c_array_delimited_by_null': True, 'type': b'^t'}})
    r('NSMethodSignature', b'signatureWithObjCTypes:', {'arguments': {2: {'c_array_delimited_by_null': True, 'type': b'^t', 'type_modifier': b'n'}}})
    r('NSMutableArray', b'sortUsingComparator:', {'arguments': {2: {'callable': {'retval': {'type': b'l'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r('NSMutableArray', b'sortWithOptions:usingComparator:', {'arguments': {3: {'callable': {'retval': {'type': b'l'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r('NSMutableArray', b'sortUsingFunction:context:', {'arguments': {2: {'callable': {'retval': {'type': b'l'}, 'arguments': {0: {'type': b'@'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}, 'callable_retained': False}, 3: {'type': b'@'}}})
    r('NSMutableArray', b'sortUsingFunction:context:range:', {'arguments': {2: {'callable': {'retval': {'type': b'l'}, 'arguments': {0: {'type': b'@'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}, 'callable_retained': False}, 3: {'type': b'@'}, 4: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSMutableArray', b'removeObject:inRange:', {'arguments': {3: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSMutableArray', b'removeObjectIdenticalTo:inRange:', {'arguments': {3: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSMutableArray', b'removeObjectsFromIndices:numIndices:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSMutableArray', b'removeObjectsInRange:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSMutableArray', b'replaceObjectsInRange:withObjectsFromArray:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSMutableArray', b'replaceObjectsInRange:withObjects:count:', {'arguments': {3: {'type_modifier': b'n', 'c_array_length_in_arg': 4}}})
    r('NSMutableArray', b'replaceObjectsInRange:withObjectsFromArray:range:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 4: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSMutableArray', b'sortUsingSelector:', {'arguments': {2: {'sel_of_type': b'i@:@'}}})
    r('NSMutableAttributedString', b'addAttribute:value:range:', {'arguments': {4: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSMutableAttributedString', b'addAttributes:range:', {'arguments': {3: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSMutableAttributedString', b'deleteCharactersInRange:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSMutableAttributedString', b'removeAttribute:range:', {'arguments': {3: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSMutableAttributedString', b'replaceCharactersInRange:withAttributedString:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSMutableAttributedString', b'replaceCharactersInRange:withString:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSMutableAttributedString', b'setAttributes:range:', {'arguments': {3: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSMutableCharacterSet', b'addCharactersInRange:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSMutableCharacterSet', b'removeCharactersInRange:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSMutableData', b'appendBytes:length:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSMutableData', b'replaceBytesInRange:withBytes:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 3: {'type_modifier': b'n', 'c_array_length_in_arg': 2}}})
    r('NSMutableData', b'replaceBytesInRange:withBytes:length:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 3: {'type_modifier': b'n', 'c_array_length_in_arg': 4}}})
    r('NSMutableData', b'resetBytesInRange:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSMutableIndexSet', b'addIndexesInRange:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSMutableIndexSet', b'removeIndexesInRange:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSMutableString', b'appendFormat:', {'arguments': {2: {'printf_format': True, 'type': b'@'}}, 'variadic': 'true'})
    r('NSMutableString', b'deleteCharactersInRange:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSMutableString', b'replaceCharactersInRange:withString:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSMutableString', b'replaceOccurrencesOfString:withString:options:range:', {'arguments': {5: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSMutableURLRequest', b'setHTTPShouldHandleCookies:', {'arguments': {2: {'type': b'Z'}}})
    r('NSMutableURLRequest', b'setHTTPShouldUsePipelining:', {'arguments': {2: {'type': b'Z'}}})
    r('NSNetService', b'getInputStream:outputStream:', {'retval': {'type': b'Z'}, 'arguments': {2: {'null_accepted': False, 'type_modifier': b'o'}, 3: {'null_accepted': False, 'type_modifier': b'o'}}})
    r('NSNetService', b'setTXTRecordData:', {'retval': {'type': b'Z'}})
    r('NSNotificationCenter', b'addObserverForName:object:usingBlock:', {'arguments': {4: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}}}}}})
    r('NSNotificationCenter', b'addObserverForName:object:queue:usingBlock:', {'arguments': {5: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {}}}}}})
    r('NSNotificationCenter', b'addObserver:selector:name:object:', {'arguments': {3: {'sel_of_type': b'v@:@'}}})
    r('NSNumber', b'boolValue', {'retval': {'type': b'Z'}})
    r('NSNumber', b'charValue', {'retval': {'type': b'z'}})
    r('NSNumber', b'decimalValue', {'retval': {'type': b'{NSDecimal=b8b4b1b1b18[8S]}'}})
    r('NSNumber', b'initWithBool:', {'arguments': {2: {'type': b'Z'}}})
    r('NSNumber', b'initWithChar:', {'arguments': {2: {'type': b'z'}}})
    r('NSNumber', b'isEqualToNumber:', {'retval': {'type': b'Z'}})
    r('NSNumber', b'numberWithBool:', {'arguments': {2: {'type': b'Z'}}})
    r('NSNumber', b'numberWithChar:', {'arguments': {2: {'type': b'z'}}})
    r('NSNumberFormatter', b'allowsFloats', {'retval': {'type': b'Z'}})
    r('NSNumberFormatter', b'alwaysShowsDecimalSeparator', {'retval': {'type': b'Z'}})
    r('NSNumberFormatter', b'generatesDecimalNumbers', {'retval': {'type': b'Z'}})
    r('NSNumberFormatter', b'getObjectValue:forString:range:error:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type_modifier': b'o'}, 4: {'type_modifier': b'N'}, 5: {'type_modifier': b'o'}}})
    r('NSNumberFormatter', b'hasThousandSeparators', {'retval': {'type': b'Z'}})
    r('NSNumberFormatter', b'isLenient', {'retval': {'type': b'Z'}})
    r('NSNumberFormatter', b'usesSignificantDigits', {'retval': {'type': b'Z'}})
    r('NSNumberFormatter', b'isPartialStringValidationEnabled', {'retval': {'type': b'Z'}})
    r('NSNumberFormatter', b'localizesFormat', {'retval': {'type': b'Z'}})
    r('NSNumberFormatter', b'setAllowsFloats:', {'arguments': {2: {'type': b'Z'}}})
    r('NSNumberFormatter', b'setAlwaysShowsDecimalSeparator:', {'arguments': {2: {'type': b'Z'}}})
    r('NSNumberFormatter', b'setGeneratesDecimalNumbers:', {'arguments': {2: {'type': b'Z'}}})
    r('NSNumberFormatter', b'setHasThousandSeparators:', {'arguments': {2: {'type': b'Z'}}})
    r('NSNumberFormatter', b'setLenient:', {'arguments': {2: {'type': b'Z'}}})
    r('NSNumberFormatter', b'setLocalizesFormat:', {'arguments': {2: {'type': b'Z'}}})
    r('NSNumberFormatter', b'setPartialStringValidationEnabled:', {'arguments': {2: {'type': b'Z'}}})
    r('NSNumberFormatter', b'setUsesGroupingSeparator:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'Z'}}})
    r('NSNumberFormatter', b'setUsesSignificantDigits:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'Z'}}})
    r('NSNumberFormatter', b'usesGroupingSeparator', {'retval': {'type': b'Z'}})
    r('NSObject', b'allowsWeakReference', {'retval': {'type': b'Z'}})
    r('NSObject', b'retainWeakReference', {'retval': {'type': b'Z'}})
    r('NSObject', b'relinquishPresentedItemToReader:', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}}}, 'type': b'@?'}}}, 'type': b'@?'}}})
    r('NSObject', b'relinquishPresentedItemToWriter:', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}}}, 'type': b'@?'}}}, 'type': b'@?'}}})
    r('NSObject', b'savePresentedItemChangesWithCompletionHandler:', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}}}, 'type': b'@?'}}})
    r('NSObject', b'accommodatePresentedItemDeletionWithCompletionHandler:', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}}}, 'type': b'@?'}}})
    r('NSObject', b'accommodatePresentedSubitemDeletionAtURL:completionHandler:', {'arguments': {3: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}}}, 'type': b'@?'}}})
    r('NSObject', b'beginContentAccess', {'retval': {'type': b'Z'}})
    r('NSObject', b'isContentDiscarded', {'retval': {'type': b'Z'}})
    r('NSObject', b'mutableCopyWithZone:', {'retval': {'type': b'@'}, 'arguments': {2: {'type': b'^{_NSZone=}'}}})
    r('NSObject', b'mutableCopyWithZone:', {'retval': {'type': b'@'}, 'arguments': {2: {'type': b'^{_NSZone=}'}}})
    r('NSObject', b'URL:resourceDataDidBecomeAvailable:', {'retval': {'type': b'v'}})
    r('NSObject', b'URL:resourceDidFailLoadingWithReason:', {'retval': {'type': b'v'}})
    r('NSObject', b'URLHandle:resourceDataDidBecomeAvailable:', {'retval': {'type': b'v'}})
    r('NSObject', b'URLHandle:resourceDidFailLoadingWithReason:', {'retval': {'type': b'v'}})
    r('NSObject', b'URLHandleResourceDidBeginLoading:', {'retval': {'type': b'v'}})
    r('NSObject', b'URLHandleResourceDidCancelLoading:', {'retval': {'type': b'v'}})
    r('NSObject', b'URLHandleResourceDidFinishLoading:', {'retval': {'type': b'v'}})
    r('NSObject', b'URLProtocol:cachedResponseIsValid:', {'retval': {'type': b'v'}})
    r('NSObject', b'URLProtocol:didCancelAuthenticationChallenge:', {'retval': {'type': b'v'}})
    r('NSObject', b'URLProtocol:didFailWithError:', {'retval': {'type': b'v'}})
    r('NSObject', b'URLProtocol:didLoadData:', {'retval': {'type': b'v'}})
    r('NSObject', b'URLProtocol:didReceiveAuthenticationChallenge:', {'retval': {'type': b'v'}})
    r('NSObject', b'URLProtocol:didReceiveResponse:cacheStoragePolicy:', {'retval': {'type': b'v'}, 'arguments': {4: {'type': b'I'}}})
    r('NSObject', b'URLProtocol:wasRedirectedToRequest:redirectResponse:', {'retval': {'type': b'v'}})
    r('NSObject', b'URLProtocolDidFinishLoading:', {'retval': {'type': b'v'}})
    r('NSObject', b'URLResourceDidCancelLoading:', {'retval': {'type': b'v'}})
    r('NSObject', b'URLResourceDidFinishLoading:', {'retval': {'type': b'v'}})
    r('NSObject', b'accessInstanceVariablesDirectly', {'retval': {'type': b'Z'}})
    r('NSObject', b'addObserver:forKeyPath:options:context:', {'retval': {'type': b'v'}, 'arguments': {4: {'type': b'I'}, 5: {'type': b'^v'}}})
    r('NSObject', b'archiver:didEncodeObject:', {'retval': {'type': b'v'}})
    r('NSObject', b'archiver:willReplaceObject:withObject:', {'retval': {'type': b'v'}})
    r('NSObject', b'archiverDidFinish:', {'retval': {'type': b'v'}})
    r('NSObject', b'archiverWillFinish:', {'retval': {'type': b'v'}})
    r('NSObject', b'attemptRecoveryFromError:optionIndex:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type': sel32or64(b'I', b'Q')}}})
    r('NSObject', b'attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:', {'retval': {'type': b'v'}, 'arguments': {3: {'type': sel32or64(b'I', b'Q')}, 5: {'sel_of_type': b'v@:Z^v'}, 6: {'type': b'^v'}}})
    r('NSObject', b'authenticateComponents:withData:', {'retval': {'type': b'Z'}})
    r('NSObject', b'automaticallyNotifiesObserversForKey:', {'retval': {'type': b'Z'}})
    r('NSObject', b'cancelAuthenticationChallenge:', {'retval': {'type': b'v'}})
    r('NSObject', b'cancelPreviousPerformRequestsWithTarget:', {'retval': {'type': b'v'}})
    r('NSObject', b'cancelPreviousPerformRequestsWithTarget:selector:object:', {'retval': {'type': b'v'}, 'arguments': {3: {'sel_of_type': b'v@:@'}}})
    r('NSObject', b'classCode', {'retval': {'type': sel32or64(b'L', b'Q')}})
    r('NSObject', b'classForArchiver', {'retval': {'type': b'#'}})
    r('NSObject', b'classForCoder', {'retval': {'type': b'#'}})
    r('NSObject', b'classForKeyedArchiver', {'retval': {'type': b'#'}})
    r('NSObject', b'classForKeyedUnarchiver', {'retval': {'type': b'#'}})
    r('NSObject', b'classForPortCoder', {'retval': {'type': b'#'}})
    r('NSObject', b'conformsToProtocol:', {'retval': {'type': b'Z'}})
    r('NSObject', b'conformsToProtocol:', {'retval': {'type': b'Z'}})
    r('NSObject', b'connection:didCancelAuthenticationChallenge:', {'retval': {'type': b'v'}})
    r('NSObject', b'connection:didFailWithError:', {'retval': {'type': b'v'}})
    r('NSObject', b'connection:didReceiveAuthenticationChallenge:', {'retval': {'type': b'v'}})
    r('NSObject', b'connection:didReceiveData:', {'retval': {'type': b'v'}})
    r('NSObject', b'connection:didReceiveResponse:', {'retval': {'type': b'v'}})
    r('NSObject', b'connection:handleRequest:', {'retval': {'type': b'Z'}})
    r('NSObject', b'connection:shouldMakeNewConnection:', {'retval': {'type': b'Z'}})
    r('NSObject', b'connection:willCacheResponse:', {'retval': {'type': b'@'}})
    r('NSObject', b'connection:willSendRequest:redirectResponse:', {'retval': {'type': b'@'}})
    r('NSObject', b'connectionDidFinishLoading:', {'retval': {'type': b'v'}})
    r('NSObject', b'continueWithoutCredentialForAuthenticationChallenge:', {'retval': {'type': b'v'}})
    r('NSObject', b'copyWithZone:', {'arguments': {2: {'type': b'^{_NSZone=}'}}})
    r('NSObject', b'copyWithZone:', {'arguments': {2: {'type': b'^{_NSZone=}'}}})
    r('NSObject', b'countByEnumeratingWithState:objects:count:', {})
    r('NSObject', b'didChange:valuesAtIndexes:forKey:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'I'}}})
    r('NSObject', b'didChangeValueForKey:', {'retval': {'type': b'v'}})
    r('NSObject', b'didChangeValueForKey:withSetMutation:usingObjects:', {'retval': {'type': b'v'}, 'arguments': {3: {'type': b'I'}}})
    r('NSObject', b'doesContain:', {'retval': {'type': b'Z'}})
    r('NSObject', b'doesNotRecognizeSelector:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b':'}}})
    r('NSObject', b'download:decideDestinationWithSuggestedFilename:', {'retval': {'type': b'v'}})
    r('NSObject', b'download:didCancelAuthenticationChallenge:', {'retval': {'type': b'v'}})
    r('NSObject', b'download:didCreateDestination:', {'retval': {'type': b'v'}})
    r('NSObject', b'download:didFailWithError:', {'retval': {'type': b'v'}})
    r('NSObject', b'download:didReceiveAuthenticationChallenge:', {'retval': {'type': b'v'}})
    r('NSObject', b'download:didReceiveDataOfLength:', {'retval': {'type': b'v'}, 'arguments': {3: {'type': sel32or64(b'I', b'Q')}}})
    r('NSObject', b'download:didReceiveResponse:', {'retval': {'type': b'v'}})
    r('NSObject', b'download:shouldDecodeSourceDataOfMIMEType:', {'retval': {'type': b'Z'}})
    r('NSObject', b'download:willResumeWithResponse:fromByte:', {'retval': {'type': b'v'}, 'arguments': {4: {'type': b'q'}}})
    r('NSObject', b'downloadDidBegin:', {'retval': {'type': b'v'}})
    r('NSObject', b'downloadDidFinish:', {'retval': {'type': b'v'}})
    r('NSObject', b'encodeWithCoder:', {'retval': {'type': b'v'}})
    r('NSObject', b'exceptionDuringOperation:error:leftOperand:rightOperand:', {'retval': {'type': b'@'}, 'arguments': {2: {'type': b':'}, 3: {'type': b'I'}}})
    r('NSObject', b'fileManager:shouldCopyItemAtURL:toURL:', {'retval': {'type': b'Z'}})
    r('NSObject', b'fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:', {'retval': {'type': b'Z'}})
    r('NSObject', b'fileManager:shouldMoveItemAtURL:toURL:', {'retval': {'type': b'Z'}})
    r('NSObject', b'fileManager:shouldProceedAfterError:movingItemAtURL:toURL:', {'retval': {'type': b'Z'}})
    r('NSObject', b'fileManager:shouldLinkItemAtURL:toURL:', {'retval': {'type': b'Z'}})
    r('NSObject', b'fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:', {'retval': {'type': b'Z'}})
    r('NSObject', b'fileManager:shouldRemoveItemAtURL:', {'retval': {'type': b'Z'}})
    r('NSObject', b'fileManager:shouldProceedAfterError:removingItemAtURL:', {'retval': {'type': b'Z'}})
    r('NSObject', b'fileManager:shouldCopyItemAtPath:toPath:', {'retval': {'type': b'Z'}})
    r('NSObject', b'fileManager:shouldLinkItemAtPath:toPath:', {'retval': {'type': b'Z'}})
    r('NSObject', b'fileManager:shouldMoveItemAtPath:toPath:', {'retval': {'type': b'Z'}})
    r('NSObject', b'fileManager:shouldProceedAfterError:', {'retval': {'type': b'Z'}})
    r('NSObject', b'fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:', {'retval': {'type': b'Z'}})
    r('NSObject', b'fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:', {'retval': {'type': b'Z'}})
    r('NSObject', b'fileManager:shouldProceedAfterError:movingItemAtPath:toPath:', {'retval': {'type': b'Z'}})
    r('NSObject', b'fileManager:shouldProceedAfterError:removingItemAtPath:', {'retval': {'type': b'Z'}})
    r('NSObject', b'fileManager:shouldRemoveItemAtPath:', {'retval': {'type': b'Z'}})
    r('NSObject', b'fileManager:willProcessPath:', {'retval': {'type': b'v'}})
    r('NSObject', b'forwardInvocation:', {'retval': {'type': b'v'}})
    r('NSObject', b'handleMachMessage:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'^v'}}})
    r('NSObject', b'handlePortMessage:', {'retval': {'type': b'v'}})
    r('NSObject', b'handleTakeValue:forUnboundKey:', {'retval': {'type': b'v'}})
    r('NSObject', b'hash', {'retval': {'type': sel32or64(b'I', b'Q')}})
    r('NSObject', b'initialize', {'retval': {'type': b'v'}})
    r('NSObject', b'insertValue:atIndex:inPropertyWithKey:', {'retval': {'type': b'v'}, 'arguments': {3: {'type': sel32or64(b'I', b'Q')}}})
    r('NSObject', b'insertValue:inPropertyWithKey:', {'retval': {'type': b'v'}})
    r('NSObject', b'instanceMethodSignatureForSelector:', {'arguments': {2: {'type': b':'}}})
    r('NSObject', b'instancesRespondToSelector:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type': b':'}}})
    r('NSObject', b'isCaseInsensitiveLike:', {'retval': {'type': b'Z'}})
    r('NSObject', b'isEqual:', {'retval': {'type': b'Z'}})
    r('NSObject', b'isEqualTo:', {'retval': {'type': b'Z'}})
    r('NSObject', b'isGreaterThan:', {'retval': {'type': b'Z'}})
    r('NSObject', b'isGreaterThanOrEqualTo:', {'retval': {'type': b'Z'}})
    r('NSObject', b'isKindOfClass:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type': b'#'}}})
    r('NSObject', b'isLessThan:', {'retval': {'type': b'Z'}})
    r('NSObject', b'isLessThanOrEqualTo:', {'retval': {'type': b'Z'}})
    r('NSObject', b'isLike:', {'retval': {'type': b'Z'}})
    r('NSObject', b'isMemberOfClass:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type': b'#'}}})
    r('NSObject', b'isNotEqualTo:', {'retval': {'type': b'Z'}})
    r('NSObject', b'isProxy', {'retval': {'type': b'Z'}})
    r('NSObject', b'isSubclassOfClass:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type': b'#'}}})
    r('NSObject', b'keyPathsForValuesAffectingValueForKey:', {'retval': {'type': b'@'}})
    r('NSObject', b'load', {'retval': {'type': b'v'}})
    r('NSObject', b'lock', {'retval': {'type': b'v'}})
    r('NSObject', b'makeNewConnection:sender:', {'retval': {'type': b'Z'}})
    r('NSObject', b'methodSignatureForSelector:', {'arguments': {2: {'type': b':'}}})
    r('NSObject', b'mutableCopyWithZone:', {'arguments': {2: {'type': b'^{_NSZone=}'}}})
    r('NSObject', b'mutableCopyWithZone:', {'arguments': {2: {'type': b'^{_NSZone=}'}}})
    r('NSObject', b'netService:didNotPublish:', {'retval': {'type': b'v'}})
    r('NSObject', b'netService:didNotResolve:', {'retval': {'type': b'v'}})
    r('NSObject', b'netService:didUpdateTXTRecordData:', {'retval': {'type': b'v'}})
    r('NSObject', b'netServiceBrowser:didFindDomain:moreComing:', {'retval': {'type': b'v'}, 'arguments': {4: {'type': b'Z'}}})
    r('NSObject', b'netServiceBrowser:didFindService:moreComing:', {'retval': {'type': b'v'}, 'arguments': {4: {'type': b'Z'}}})
    r('NSObject', b'netServiceBrowser:didNotSearch:', {'retval': {'type': b'v'}})
    r('NSObject', b'netServiceBrowser:didRemoveDomain:moreComing:', {'retval': {'type': b'v'}, 'arguments': {4: {'type': b'Z'}}})
    r('NSObject', b'netServiceBrowser:didRemoveService:moreComing:', {'retval': {'type': b'v'}, 'arguments': {4: {'type': b'Z'}}})
    r('NSObject', b'netServiceBrowserDidStopSearch:', {'retval': {'type': b'v'}})
    r('NSObject', b'netServiceBrowserWillSearch:', {'retval': {'type': b'v'}})
    r('NSObject', b'netServiceDidResolveAddress:', {'retval': {'type': b'v'}})
    r('NSObject', b'netServiceDidStop:', {'retval': {'type': b'v'}})
    r('NSObject', b'netServiceWillPublish:', {'retval': {'type': b'v'}})
    r('NSObject', b'netServiceWillResolve:', {'retval': {'type': b'v'}})
    r('NSObject', b'newScriptingObjectOfClass:forValueForKey:withContentsValue:properties:', {'arguments': {2: {'type': b'#'}}})
    r('NSObject', b'observeValueForKeyPath:ofObject:change:context:', {'retval': {'type': b'v'}, 'arguments': {5: {'type': b'^v'}}})
    r('NSObject', b'parser:didEndElement:namespaceURI:qualifiedName:', {'retval': {'type': b'v'}})
    r('NSObject', b'parser:didEndMappingPrefix:', {'retval': {'type': b'v'}})
    r('NSObject', b'parser:didStartElement:namespaceURI:qualifiedName:attributes:', {'retval': {'type': b'v'}})
    r('NSObject', b'parser:didStartMappingPrefix:toURI:', {'retval': {'type': b'v'}})
    r('NSObject', b'parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:', {'retval': {'type': b'v'}})
    r('NSObject', b'parser:foundCDATA:', {'retval': {'type': b'v'}})
    r('NSObject', b'parser:foundCharacters:', {'retval': {'type': b'v'}})
    r('NSObject', b'parser:foundComment:', {'retval': {'type': b'v'}})
    r('NSObject', b'parser:foundElementDeclarationWithName:model:', {'retval': {'type': b'v'}})
    r('NSObject', b'parser:foundExternalEntityDeclarationWithName:publicID:systemID:', {'retval': {'type': b'v'}})
    r('NSObject', b'parser:foundIgnorableWhitespace:', {'retval': {'type': b'v'}})
    r('NSObject', b'parser:foundInternalEntityDeclarationWithName:value:', {'retval': {'type': b'v'}})
    r('NSObject', b'parser:foundNotationDeclarationWithName:publicID:systemID:', {'retval': {'type': b'v'}})
    r('NSObject', b'parser:foundProcessingInstructionWithTarget:data:', {'retval': {'type': b'v'}})
    r('NSObject', b'parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:', {'retval': {'type': b'v'}})
    r('NSObject', b'parser:parseErrorOccurred:', {'retval': {'type': b'v'}})
    r('NSObject', b'parser:validationErrorOccurred:', {'retval': {'type': b'v'}})
    r('NSObject', b'parserDidEndDocument:', {'retval': {'type': b'v'}})
    r('NSObject', b'parserDidStartDocument:', {'retval': {'type': b'v'}})
    r('NSObject', b'performSelector:', {'arguments': {2: {'type': b':'}}})
    r('NSObject', b'performSelector:onThread:withObject:waitUntilDone:', {'retval': {'type': b'v'}, 'arguments': {2: {'sel_of_type': b'v@:@'}, 5: {'type': b'Z'}}})
    r('NSObject', b'performSelector:onThread:withObject:waitUntilDone:modes:', {'retval': {'type': b'v'}, 'arguments': {2: {'sel_of_type': b'v@:@'}, 5: {'type': b'Z'}}})
    r('NSObject', b'performSelector:withObject:', {'arguments': {2: {'type': b':'}}})
    r('NSObject', b'performSelector:withObject:afterDelay:', {'retval': {'type': b'v'}, 'arguments': {2: {'sel_of_type': b'v@:@'}, 4: {'type': b'd'}}})
    r('NSObject', b'performSelector:withObject:afterDelay:inModes:', {'retval': {'type': b'v'}, 'arguments': {2: {'sel_of_type': b'v@:@'}, 4: {'type': b'd'}}})
    r('NSObject', b'performSelector:withObject:withObject:', {'arguments': {2: {'type': b':'}}})
    r('NSObject', b'performSelectorInBackground:withObject:', {'retval': {'type': b'v'}, 'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSObject', b'performSelectorOnMainThread:withObject:waitUntilDone:', {'retval': {'type': b'v'}, 'arguments': {2: {'sel_of_type': b'v@:@'}, 4: {'type': b'Z'}}})
    r('NSObject', b'performSelectorOnMainThread:withObject:waitUntilDone:modes:', {'retval': {'type': b'v'}, 'arguments': {2: {'sel_of_type': b'v@:@'}, 4: {'type': b'Z'}}})
    r('NSObject', b'poseAsClass:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'#'}}})
    r('NSObject', b'release', {'retval': {'type': b'Vv'}})
    r('NSObject', b'removeObserver:forKeyPath:', {'retval': {'type': b'v'}})
    r('NSObject', b'removeValueAtIndex:fromPropertyWithKey:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': sel32or64(b'I', b'Q')}}})
    r('NSObject', b'replaceValueAtIndex:inPropertyWithKey:withValue:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': sel32or64(b'I', b'Q')}}})
    r('NSObject', b'resolveClassMethod:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type': b':'}}})
    r('NSObject', b'resolveInstanceMethod:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type': b':'}}})
    r('NSObject', b'respondsToSelector:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type': b':'}}})
    r('NSObject', b'retainCount', {'retval': {'type': sel32or64(b'I', b'Q')}})
    r('NSObject', b'roundingMode', {'retval': {'type': b'I'}})
    r('NSObject', b'scale', {'retval': {'type': b's'}})
    r('NSObject', b'scriptingBeginsWith:', {'retval': {'type': b'Z'}})
    r('NSObject', b'scriptingContains:', {'retval': {'type': b'Z'}})
    r('NSObject', b'scriptingEndsWith:', {'retval': {'type': b'Z'}})
    r('NSObject', b'scriptingIsEqualTo:', {'retval': {'type': b'Z'}})
    r('NSObject', b'scriptingIsGreaterThan:', {'retval': {'type': b'Z'}})
    r('NSObject', b'scriptingIsGreaterThanOrEqualTo:', {'retval': {'type': b'Z'}})
    r('NSObject', b'scriptingIsLessThan:', {'retval': {'type': b'Z'}})
    r('NSObject', b'scriptingIsLessThanOrEqualTo:', {'retval': {'type': b'Z'}})
    r('NSObject', b'setKeys:triggerChangeNotificationsForDependentKey:', {'retval': {'type': b'v'}})
    r('NSObject', b'setNilValueForKey:', {'retval': {'type': b'v'}})
    r('NSObject', b'setObservationInfo:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'^v'}}})
    r('NSObject', b'setScriptingProperties:', {'retval': {'type': b'v'}})
    r('NSObject', b'setValue:forKey:', {'retval': {'type': b'v'}})
    r('NSObject', b'setValue:forKeyPath:', {'retval': {'type': b'v'}})
    r('NSObject', b'setValue:forUndefinedKey:', {'retval': {'type': b'v'}})
    r('NSObject', b'setValuesForKeysWithDictionary:', {'retval': {'type': b'v'}})
    r('NSObject', b'setVersion:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': sel32or64(b'i', b'q')}}})
    r('NSObject', b'spellServer:checkString:offset:types:options:orthography:wordCount:', {'arguments': {8: {'type': sel32or64(b'^i', b'^q'), 'type_modifier': b'o'}, 4: {'type': sel32or64(b'I', b'Q')}, 5: {'type': sel32or64(b'i', b'q')}}})
    r('NSObject', b'spellServer:checkGrammarInString:language:details:', {'retval': {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 'arguments': {5: {'type': b'^@', 'type_modifier': b'o'}}})
    r('NSObject', b'spellServer:didForgetWord:inLanguage:', {'retval': {'type': b'v'}})
    r('NSObject', b'spellServer:didLearnWord:inLanguage:', {'retval': {'type': b'v'}})
    r('NSObject', b'spellServer:findMisspelledWordInString:language:wordCount:countOnly:', {'retval': {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 'arguments': {5: {'type': sel32or64(b'^i', b'^q'), 'type_modifier': b'o'}, 6: {'type': b'Z'}}})
    r('NSObject', b'spellServer:suggestCompletionsForPartialWordRange:inString:language:', {'arguments': {3: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSObject', b'stream:handleEvent:', {'retval': {'type': b'v'}, 'arguments': {3: {'type': sel32or64(b'I', b'Q')}}})
    r('NSObject', b'superclass', {'retval': {'type': b'#'}})
    r('NSObject', b'superclass', {'retval': {'type': b'#'}})
    r('NSObject', b'takeStoredValue:forKey:', {'retval': {'type': b'v'}})
    r('NSObject', b'takeValue:forKey:', {'retval': {'type': b'v'}})
    r('NSObject', b'takeValue:forKeyPath:', {'retval': {'type': b'v'}})
    r('NSObject', b'takeValuesFromDictionary:', {'retval': {'type': b'v'}})
    r('NSObject', b'unableToSetNilForKey:', {'retval': {'type': b'v'}})
    r('NSObject', b'unarchiver:cannotDecodeObjectOfClassName:originalClasses:', {'retval': {'type': b'#'}})
    r('NSObject', b'unarchiver:willReplaceObject:withObject:', {'retval': {'type': b'v'}})
    r('NSObject', b'unarchiverDidFinish:', {'retval': {'type': b'v'}})
    r('NSObject', b'unarchiverWillFinish:', {'retval': {'type': b'v'}})
    r('NSObject', b'unlock', {'retval': {'type': b'v'}})
    r('NSObject', b'useCredential:forAuthenticationChallenge:', {'retval': {'type': b'v'}})
    r('NSObject', b'useStoredAccessor', {'retval': {'type': b'Z'}})
    r('NSObject', b'validateValue:forKey:error:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type': b'^@', 'type_modifier': b'N'}, 4: {'type': b'^@', 'type_modifier': b'o'}}})
    r('NSObject', b'validateValue:forKeyPath:error:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type': b'^@', 'type_modifier': b'N'}, 3: {'type': b'@'}, 4: {'type': b'^@', 'type_modifier': b'o'}}})
    r('NSObject', b'valueAtIndex:inPropertyWithKey:', {'arguments': {2: {'type': sel32or64(b'I', b'Q')}}})
    r('NSObject', b'version', {'retval': {'type': sel32or64(b'i', b'q')}})
    r('NSObject', b'willChange:valuesAtIndexes:forKey:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'I'}}})
    r('NSObject', b'willChangeValueForKey:', {'retval': {'type': b'v'}})
    r('NSObject', b'willChangeValueForKey:withSetMutation:usingObjects:', {'retval': {'type': b'v'}, 'arguments': {3: {'type': b'I'}}})
    r('NSBlockOperation', b'blockOperationWithBlock:', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}}}}}})
    r('NSBlockOperation', b'addExecutionBlock:', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}}}}}})
    r('NSOperation', b'completionBlock', {'retval': {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}}}}})
    r('NSOperation', b'setCompletionBlock:', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}}}}}})
    r('NSOperation', b'isCancelled', {'retval': {'type': b'Z'}})
    r('NSOperation', b'isConcurrent', {'retval': {'type': b'Z'}})
    r('NSOperation', b'isExecuting', {'retval': {'type': b'Z'}})
    r('NSOperation', b'isFinished', {'retval': {'type': b'Z'}})
    r('NSOperation', b'isReady', {'retval': {'type': b'Z'}})
    r('NSOperationQueue', b'addOperations:waitUntilFinished:', {'arguments': {3: {'type': b'Z'}}})
    r('NSOperationQueue', b'addOperationWithBlock:', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}}}}}})
    r('NSOperationQueue', b'isSuspended', {'retval': {'type': b'Z'}})
    r('NSOperationQueue', b'setSuspended:', {'arguments': {2: {'type': b'Z'}}})
    r('NSOutputStream', b'initWithURL:append:', {'arguments': {3: {'type': b'Z'}}})
    r('NSOutputStream', b'outputStreamWithURL:append:', {'arguments': {3: {'type': b'Z'}}})
    r('NSOutputStream', b'hasSpaceAvailable', {'retval': {'type': b'Z'}})
    r('NSOutputStream', b'initToBuffer:capacity:', {'arguments': {2: {'type': b'^v', 'type_modifier': b'o', 'c_array_length_in_arg': 3}}})
    r('NSOutputStream', b'initToFileAtPath:append:', {'arguments': {3: {'type': b'Z'}}})
    r('NSOutputStream', b'outputStreamToBuffer:capacity:', {'arguments': {2: {'type': b'^v', 'type_modifier': b'o', 'c_array_length_in_arg': 3}}})
    r('NSOutputStream', b'outputStreamToFileAtPath:append:', {'arguments': {3: {'type': b'Z'}}})
    r('NSOutputStream', b'write:maxLength:', {'arguments': {2: {'type': b'^v', 'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSPointerFunctions', b'usesStrongWriteBarrier', {'retval': {'type': b'Z'}})
    r('NSPointerFunctions', b'setUsesStrongWriteBarrier:', {'arguments': {2: {'type': b'Z'}}})
    r('NSPointerFunctions', b'usesWeakReadAndWriteBarriers', {'retval': {'type': b'Z'}})
    r('NSPointerFunctions', b'setUsesWeakReadAndWriteBarriers:', {'arguments': {2: {'type': b'Z'}}})
    r('NSPointerArray', b'addPointer:', {'arguments': {2: {'type': b'@'}}})
    r('NSPointerArray', b'insertPointer:atIndex:', {'arguments': {2: {'type': b'@'}}})
    r('NSPointerArray', b'pointerAtIndex:', {'retval': {'type': b'@'}})
    r('NSPointerArray', b'replacePointerAtIndex:withPointer:', {'arguments': {3: {'type': b'@'}}})
    r('NSPort', b'isValid', {'retval': {'type': b'Z'}})
    r('NSPort', b'sendBeforeDate:components:from:reserved:', {'retval': {'type': b'Z'}})
    r('NSPort', b'sendBeforeDate:msgid:components:from:reserved:', {'retval': {'type': b'Z'}})
    r('NSPortCoder', b'isBycopy', {'retval': {'type': b'Z'}})
    r('NSPortCoder', b'isByref', {'retval': {'type': b'Z'}})
    r('NSPortMessage', b'sendBeforeDate:', {'retval': {'type': b'Z'}})
    r('NSPortNameServer', b'registerPort:name:', {'retval': {'type': b'Z'}})
    r('NSPortNameServer', b'removePortForName:', {'retval': {'type': b'Z'}})
    r('NSPositionalSpecifier', b'insertionReplaces', {'retval': {'type': b'Z'}})
    r('NSPredicate', b'predicateWithBlock:', {'arguments': {2: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r('NSPredicate', b'evaluateWithObject:', {'retval': {'type': b'Z'}})
    r('NSPredicate', b'evaluateWithObject:substitutionVariables:', {'retval': {'type': b'Z'}})
    r('NSPredicate', b'predicateWithFormat:', {'arguments': {2: {'printf_format': True, 'type': b'@'}}, 'variadic': 'true'})
    r('NSPredicate', b'predicateWithFormat:arguments:', {})
    r('NSPredicate', b'predicateWithValue:', {'arguments': {2: {'type': b'Z'}}})
    r('NSPropertyListSerialization', b'dataWithPropertyList:format:options:error:', {'arguments': {5: {'type_modifier': b'o'}}})
    r('NSPropertyListSerialization', b'writePropertyList:toStream:format:options:error:', {'arguments': {6: {'type_modifier': b'o'}}})
    r('NSPropertyListSerialization', b'propertyListWithData:options:format:error:', {'arguments': {5: {'type_modifier': b'o'}}})
    r('NSPropertyListSerialization', b'propertyListWithStream:options:format:error:', {'arguments': {5: {'type_modifier': b'o'}}})
    r('NSPropertyListSerialization', b'dataFromPropertyList:format:errorDescription:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSPropertyListSerialization', b'propertyList:isValidForFormat:', {'retval': {'type': b'Z'}})
    r('NSPropertyListSerialization', b'propertyListFromData:mutabilityOption:format:errorDescription:', {'arguments': {4: {'type_modifier': b'o'}, 5: {'type_modifier': b'o'}}})
    r('NSProxy', b'allowsWeakReference', {'retval': {'type': b'Z'}})
    r('NSProxy', b'retainWeakReference', {'retval': {'type': b'Z'}})
    r('NSProxy', b'respondsToSelector:', {'retval': {'type': b'Z'}})
    r('NSRecursiveLock', b'lockBeforeDate:', {'retval': {'type': b'Z'}})
    r('NSRecursiveLock', b'tryLock', {'retval': {'type': b'Z'}})
    r('NSRunLoop', b'cancelPerformSelector:target:argument:', {'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSRunLoop', b'performSelector:target:argument:order:modes:', {'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSRunLoop', b'runMode:beforeDate:', {'retval': {'type': b'Z'}})
    r('NSScanner', b'caseSensitive', {'retval': {'type': b'Z'}})
    r('NSScanner', b'isAtEnd', {'retval': {'type': b'Z'}})
    r('NSScanner', b'scanCharactersFromSet:intoString:', {'retval': {'type': b'Z'}, 'arguments': {3: {'null_accepted': False, 'type_modifier': b'o'}}})
    r('NSScanner', b'scanDecimal:', {'retval': {'type': b'Z'}, 'arguments': {2: {'null_accepted': False}}})
    r('NSScanner', b'scanDouble:', {'retval': {'type': b'Z'}, 'arguments': {2: {'null_accepted': False, 'type_modifier': b'o'}}})
    r('NSScanner', b'scanFloat:', {'retval': {'type': b'Z'}, 'arguments': {2: {'null_accepted': False, 'type_modifier': b'o'}}})
    r('NSScanner', b'scanHexDouble:', {'retval': {'type': b'Z'}, 'arguments': {2: {'null_accepted': False, 'type_modifier': b'o'}}})
    r('NSScanner', b'scanHexFloat:', {'retval': {'type': b'Z'}, 'arguments': {2: {'null_accepted': False, 'type_modifier': b'o'}}})
    r('NSScanner', b'scanHexInt:', {'retval': {'type': b'Z'}, 'arguments': {2: {'null_accepted': False, 'type_modifier': b'o'}}})
    r('NSScanner', b'scanHexLongLong:', {'retval': {'type': b'Z'}, 'arguments': {2: {'null_accepted': False, 'type_modifier': b'o'}}})
    r('NSScanner', b'scanInt:', {'retval': {'type': b'Z'}, 'arguments': {2: {'null_accepted': False, 'type_modifier': b'o'}}})
    r('NSScanner', b'scanInteger:', {'retval': {'type': b'Z'}, 'arguments': {2: {'null_accepted': False, 'type_modifier': b'o'}}})
    r('NSScanner', b'scanLongLong:', {'retval': {'type': b'Z'}, 'arguments': {2: {'null_accepted': False, 'type_modifier': b'o'}}})
    r('NSScanner', b'scanString:intoString:', {'retval': {'type': b'Z'}, 'arguments': {3: {'null_accepted': False, 'type_modifier': b'o'}}})
    r('NSScanner', b'scanUpToCharactersFromSet:intoString:', {'retval': {'type': b'Z'}, 'arguments': {3: {'null_accepted': False, 'type_modifier': b'o'}}})
    r('NSScanner', b'scanUpToString:intoString:', {'retval': {'type': b'Z'}, 'arguments': {3: {'null_accepted': False, 'type_modifier': b'o'}}})
    r('NSScanner', b'setCaseSensitive:', {'arguments': {2: {'type': b'Z'}}})
    r('NSScriptClassDescription', b'hasOrderedToManyRelationshipForKey:', {'retval': {'type': b'Z'}})
    r('NSScriptClassDescription', b'hasPropertyForKey:', {'retval': {'type': b'Z'}})
    r('NSScriptClassDescription', b'hasReadablePropertyForKey:', {'retval': {'type': b'Z'}})
    r('NSScriptClassDescription', b'hasWritablePropertyForKey:', {'retval': {'type': b'Z'}})
    r('NSScriptClassDescription', b'isLocationRequiredToCreateForKey:', {'retval': {'type': b'Z'}})
    r('NSScriptClassDescription', b'isReadOnlyKey:', {'retval': {'type': b'Z'}})
    r('NSScriptClassDescription', b'matchesAppleEventCode:', {'retval': {'type': b'Z'}})
    r('NSScriptClassDescription', b'supportsCommand:', {'retval': {'type': b'Z'}})
    r('NSScriptCoercionHandler', b'registerCoercer:selector:toConvertFromClass:toClass:', {'arguments': {3: {'sel_of_type': b'@@:@#'}}})
    r('NSScriptCommand', b'isWellFormed', {'retval': {'type': b'Z'}})
    r('NSScriptCommandDescription', b'isOptionalArgumentWithName:', {'retval': {'type': b'Z'}})
    r('NSScriptObjectSpecifier', b'containerIsObjectBeingTested', {'retval': {'type': b'Z'}})
    r('NSScriptObjectSpecifier', b'containerIsRangeContainerObject', {'retval': {'type': b'Z'}})
    r('NSScriptObjectSpecifier', b'indicesOfObjectsByEvaluatingWithContainer:count:', {'retval': {'c_array_length_in_arg': 3}, 'arguments': {3: {'type_modifier': b'o'}}})
    r('NSScriptObjectSpecifier', b'setContainerIsObjectBeingTested:', {'arguments': {2: {'type': b'Z'}}})
    r('NSScriptObjectSpecifier', b'setContainerIsRangeContainerObject:', {'arguments': {2: {'type': b'Z'}}})
    r('NSScriptWhoseTest', b'isTrue', {'retval': {'type': b'Z'}})
    r('NSSet', b'enumerateObjectsUsingBlock:', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSSet', b'enumerateObjectsWithOptions:usingBlock:', {'arguments': {3: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSSet', b'objectsPassingTest:', {'arguments': {2: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSSet', b'objectsWithOptions:passingTest:', {'arguments': {3: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSSet', b'containsObject:', {'retval': {'type': b'Z'}})
    r('NSSet', b'initWithObjects:', {'c_array_delimited_by_null': True, 'variadic': 'true'})
    r('NSSet', b'initWithObjects:count:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSSet', b'initWithSet:copyItems:', {'arguments': {3: {'type': b'Z'}}})
    r('NSSet', b'intersectsSet:', {'retval': {'type': b'Z'}})
    r('NSSet', b'isEqualToSet:', {'retval': {'type': b'Z'}})
    r('NSSet', b'isSubsetOfSet:', {'retval': {'type': b'Z'}})
    r('NSSet', b'makeObjectsPerformSelector:', {'arguments': {2: {'sel_of_type': b'v@:'}}})
    r('NSSet', b'makeObjectsPerformSelector:withObject:', {'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSSet', b'setWithObjects:', {'c_array_delimited_by_null': True, 'variadic': 'true'})
    r('NSSet', b'setWithObjects:count:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSSocketPortNameServer', b'registerPort:name:', {'retval': {'type': b'Z'}})
    r('NSSocketPortNameServer', b'registerPort:name:nameServerPortNumber:', {'retval': {'type': b'Z'}})
    r('NSSocketPortNameServer', b'removePortForName:', {'retval': {'type': b'Z'}})
    r('NSSortDescriptor', b'sortDescriptorWithKey:ascending:', {'arguments': {3: {'type': b'Z'}}})
    r('NSSortDescriptor', b'sortDescriptorWithKey:ascending:selector:', {'arguments': {3: {'type': b'Z'}}})
    r('NSSortDescriptor', b'sortDescriptorWithKey:ascending:comparator:', {'arguments': {3: {'type': b'Z'}, 4: {'callable': {'retval': {'type': b'i'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r('NSSortDescriptor', b'initWithKey:ascending:comparator:', {'arguments': {3: {'type': b'Z'}, 4: {'callable': {'retval': {'type': b'i'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r('NSSortDescriptor', b'comparator', {'retval': {'callable': {'retval': {'type': b'i'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}})
    r('NSSortDescriptor', b'ascending', {'retval': {'type': b'Z'}})
    r('NSSortDescriptor', b'initWithKey:ascending:', {'arguments': {3: {'type': b'Z'}}})
    r('NSSortDescriptor', b'initWithKey:ascending:selector:', {'arguments': {3: {'type': b'Z'}, 4: {'sel_of_type': b'i@:@'}}})
    r('NSSpellServer', b'isWordInUserDictionaries:caseSensitive:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type': b'Z'}}})
    r('NSSpellServer', b'registerLanguage:byVendor:', {'retval': {'type': b'Z'}})
    r('NSStream', b'getStreamsToHost:port:inputStream:outputStream:', {'arguments': {4: {'null_accepted': False, 'type_modifier': b'o'}, 5: {'null_accepted': False, 'type_modifier': b'o'}}})
    r('NSStream', b'setProperty:forKey:', {'retval': {'type': b'Z'}})
    r('NSString', b'linguisticTagsInRange:scheme:options:orthography:tokenRanges:', {'arguments': {6: {'type_modifier': b'o'}}})
    r('NSString', b'enumeratorLinguisticTagsInRange:scheme:options:orthography:usingBlock:', {'arguments': {6: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 3: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 4: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSString', b'enumerateSubstringsInRange:options:usingBlock:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 4: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 3: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 4: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSString', b'enumerateLinesUsingBlock:', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSString', b'UTF8String', {'retval': {'c_array_delimited_by_null': True, 'type': b'^t'}})
    r('NSString', b'boolValue', {'retval': {'type': b'Z'}})
    r('NSString', b'cStringUsingEncoding:', {'retval': {'c_array_delimited_by_null': True, 'type': b'^v'}})
    r('NSString', b'canBeConvertedToEncoding:', {'retval': {'type': b'Z'}})
    r('NSString', b'characterAtIndex:', {'retval': {'type': b'T'}})
    r('NSString', b'compare:options:range:', {'arguments': {4: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSString', b'compare:options:range:locale:', {'arguments': {4: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSString', b'completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:', {'arguments': {2: {'type_modifier': b'o'}, 3: {'type': b'Z'}, 4: {'type_modifier': b'o'}}})
    r('NSString', b'dataUsingEncoding:allowLossyConversion:', {'arguments': {3: {'type': b'Z'}}})
    r('NSString', b'fileSystemRepresentation', {'retval': {'c_array_delimited_by_null': True, 'type': b'^t'}})
    r('NSString', b'availableStringEncodings', {'retval': {'c_array_delimited_by_null': True}})
    r('NSString', b'getBytes:maxLength:usedLength:encoding:options:range:remainingRange:', {'retval': {'type': b'Z'}, 'arguments': {8: {'type_modifier': b'o'}, 2: {'type_modifier': b'o', 'c_array_length_in_arg': (3, 4)}, 4: {'type_modifier': b'o'}, 7: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSString', b'cString', {'retval': {'c_array_delimited_by_null': True, 'type': b'^t'}})
    r('NSString', b'lossyCString', {'retval': {'c_array_delimited_by_null': True, 'type': b'^t'}})
    r('NSString', b'getCString:', {})
    r('NSString', b'getCString:maxLength:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type': b'^v', 'type_modifier': b'o', 'c_array_length_in_arg': 3}}})
    r('NSString', b'getCString:maxLength:encoding:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type': b'^v', 'type_modifier': b'o', 'c_array_length_in_arg': 3}}})
    r('NSString', b'getCString:maxLength:range:remainingRange:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type': b'^v', 'type_modifier': b'o', 'c_array_length_in_arg': 3}, 5: {'type_modifier': b'o'}}})
    r('NSString', b'getCharacters:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'^T', 'type_modifier': b'o', 'c_array_of_variable_length': True}}})
    r('NSString', b'getCharacters:range:', {'retval': {'type': b'v'}, 'arguments': {2: {'type': b'^T', 'type_modifier': b'o', 'c_array_length_in_arg': 3}, 3: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSString', b'getFileSystemRepresentation:maxLength:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type': b'^t', 'type_modifier': b'o', 'c_array_length_in_arg': 3}}})
    r('NSString', b'getLineStart:end:contentsEnd:forRange:', {'retval': {'type': b'v'}, 'arguments': {2: {'type_modifier': b'o'}, 3: {'type_modifier': b'o'}, 4: {'type_modifier': b'o'}, 5: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSString', b'getParagraphStart:end:contentsEnd:forRange:', {'retval': {'type': b'v'}, 'arguments': {2: {'type_modifier': b'o'}, 3: {'type_modifier': b'o'}, 4: {'type_modifier': b'o'}, 5: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSString', b'hasPrefix:', {'retval': {'type': b'Z'}})
    r('NSString', b'hasSuffix:', {'retval': {'type': b'Z'}})
    r('NSString', b'initWithBytes:length:encoding:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSString', b'initWithBytesNoCopy:length:encoding:freeWhenDone:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 3}, 5: {'type': b'Z'}}})
    r('NSString', b'initWithCString:', {'arguments': {2: {'c_array_delimited_by_null': True, 'type': b'^v', 'type_modifier': b'n'}}})
    r('NSString', b'initWithCString:encoding:', {'arguments': {2: {'c_array_delimited_by_null': True, 'type': b'^t', 'type_modifier': b'n'}}})
    r('NSString', b'initWithCString:length:', {'arguments': {2: {'type': b'^v', 'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSString', b'initWithCStringNoCopy:length:freeWhenDone:', {'arguments': {2: {'type': b'^v', 'type_modifier': b'n', 'c_array_length_in_arg': 3}, 4: {'type': b'Z'}}})
    r('NSString', b'initWithCharacters:length:', {'arguments': {2: {'type': b'^T', 'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSString', b'initWithCharactersNoCopy:length:freeWhenDone:', {'retval': {'type': b'@'}, 'arguments': {2: {'type': b'^T', 'type_modifier': b'n', 'c_array_length_in_arg': 3}, 4: {'type': b'Z'}}})
    r('NSString', b'initWithContentsOfFile:encoding:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSString', b'initWithContentsOfFile:usedEncoding:error:', {'arguments': {3: {'type_modifier': b'o'}, 4: {'type_modifier': b'o'}}})
    r('NSString', b'initWithContentsOfURL:', {'arguments': {2: {'type': b'@'}}})
    r('NSString', b'initWithContentsOfURL:encoding:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSString', b'initWithContentsOfURL:usedEncoding:error:', {'arguments': {3: {'type_modifier': b'o'}, 4: {'type_modifier': b'o'}}})
    r('NSString', b'initWithFormat:', {'arguments': {2: {'printf_format': True, 'type': b'@'}}, 'variadic': 'true'})
    r('NSString', b'initWithFormat:arguments:', {})
    r('NSString', b'initWithFormat:locale:', {'arguments': {2: {'printf_format': True, 'type': b'@'}}, 'variadic': 'true'})
    r('NSString', b'initWithFormat:locale:arguments:', {})
    r('NSString', b'initWithUTF8String:', {'arguments': {2: {'c_array_delimited_by_null': True, 'type': b'^t', 'type_modifier': b'n'}}})
    r('NSString', b'isAbsolutePath', {'retval': {'type': b'Z'}})
    r('NSString', b'isEqualToString:', {'retval': {'type': b'Z'}})
    r('NSString', b'lineRangeForRange:', {'retval': {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSString', b'localizedStringWithFormat:', {'arguments': {2: {'printf_format': True, 'type': b'@'}}, 'variadic': 'true'})
    r('NSString', b'paragraphRangeForRange:', {'retval': {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSString', b'rangeOfCharacterFromSet:', {'retval': {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}})
    r('NSString', b'rangeOfCharacterFromSet:options:', {'retval': {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}})
    r('NSString', b'rangeOfCharacterFromSet:options:range:', {'retval': {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 'arguments': {4: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSString', b'rangeOfComposedCharacterSequenceAtIndex:', {'retval': {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}})
    r('NSString', b'rangeOfComposedCharacterSequencesForRange:', {'retval': {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSString', b'rangeOfString:', {'retval': {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}})
    r('NSString', b'rangeOfString:options:', {'retval': {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}})
    r('NSString', b'rangeOfString:options:range:', {'retval': {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 'arguments': {4: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSString', b'rangeOfString:options:range:locale:', {'retval': {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 'arguments': {4: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSString', b'stringByAppendingFormat:', {'arguments': {2: {'printf_format': True, 'type': b'@'}}, 'variadic': 'true'})
    r('NSString', b'stringByReplacingCharactersInRange:withString:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSString', b'stringByReplacingOccurrencesOfString:withString:options:range:', {'arguments': {5: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSString', b'stringWithCString:', {'arguments': {2: {'c_array_delimited_by_null': True, 'type': b'^v', 'type_modifier': b'n'}}})
    r('NSString', b'stringWithCString:encoding:', {'arguments': {2: {'c_array_delimited_by_null': True, 'type': b'^t', 'type_modifier': b'n'}}})
    r('NSString', b'stringWithCString:length:', {'arguments': {2: {'type': b'^v', 'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSString', b'stringWithCharacters:length:', {'arguments': {2: {'type': b'r^T', 'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSString', b'stringWithContentsOfFile:encoding:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSString', b'stringWithContentsOfFile:usedEncoding:error:', {'arguments': {3: {'type_modifier': b'o'}, 4: {'type_modifier': b'o'}}})
    r('NSString', b'stringWithContentsOfURL:encoding:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSString', b'stringWithContentsOfURL:usedEncoding:error:', {'arguments': {3: {'type_modifier': b'o'}, 4: {'type_modifier': b'o'}}})
    r('NSString', b'stringWithFormat:', {'arguments': {2: {'printf_format': True, 'type': b'@'}}, 'variadic': 'true'})
    r('NSString', b'stringWithUTF8String:', {'arguments': {2: {'c_array_delimited_by_null': True, 'type': b'^t', 'type_modifier': b'n'}}})
    r('NSString', b'substringWithRange:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSString', b'writeToFile:atomically:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type': b'Z'}}})
    r('NSString', b'writeToFile:atomically:encoding:error:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type': b'Z'}, 5: {'type_modifier': b'o'}}})
    r('NSString', b'writeToURL:atomically:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type': b'Z'}}})
    r('NSString', b'writeToURL:atomically:encoding:error:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type': b'Z'}, 5: {'type_modifier': b'o'}}})
    r('NSTask', b'terminationHandler', {'retval': {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}}}}})
    r('NSTask', b'setTerminationHandler:', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}}}}}})
    r('NSTask', b'isRunning', {'retval': {'type': b'Z'}})
    r('NSTask', b'resume', {'retval': {'type': b'Z'}})
    r('NSTask', b'suspend', {'retval': {'type': b'Z'}})
    r('NSThread', b'detachNewThreadSelector:toTarget:withObject:', {'arguments': {2: {'sel_of_type': b'v@:@'}}})
    r('NSThread', b'initWithTarget:selector:object:', {'arguments': {3: {'sel_of_type': b'v@:@'}}})
    r('NSThread', b'isCancelled', {'retval': {'type': b'Z'}})
    r('NSThread', b'isExecuting', {'retval': {'type': b'Z'}})
    r('NSThread', b'isFinished', {'retval': {'type': b'Z'}})
    r('NSThread', b'isMainThread', {'retval': {'type': b'Z'}})
    r('NSThread', b'isMainThread', {'retval': {'type': b'Z'}})
    r('NSThread', b'isMultiThreaded', {'retval': {'type': b'Z'}})
    r('NSThread', b'setThreadPriority:', {'retval': {'type': b'Z'}})
    r('NSTimeZone', b'isEqualToTimeZone:', {'retval': {'type': b'Z'}})
    r('NSTimeZone', b'isDaylightSavingTimeForDate:', {'retval': {'type': b'Z'}})
    r('NSTimeZone', b'isDaylightSavingTime', {'retval': {'type': b'Z'}})
    r('NSTimer', b'initWithFireDate:interval:target:selector:userInfo:repeats:', {'arguments': {5: {'sel_of_type': b'v@:@'}, 7: {'type': b'Z'}}})
    r('NSTimer', b'isValid', {'retval': {'type': b'Z'}})
    r('NSTimer', b'scheduledTimerWithTimeInterval:invocation:repeats:', {'arguments': {4: {'type': b'Z'}}})
    r('NSTimer', b'scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:', {'arguments': {4: {'sel_of_type': b'v@:@'}, 6: {'type': b'Z'}}})
    r('NSTimer', b'timerWithTimeInterval:invocation:repeats:', {'arguments': {4: {'type': b'Z'}}})
    r('NSTimer', b'timerWithTimeInterval:target:selector:userInfo:repeats:', {'arguments': {4: {'sel_of_type': b'v@:@'}, 6: {'type': b'Z'}}})
    r('NSURL', b'URLByAppendingPathComponent:isDirectory:', {'arguments': {3: {'type': b'Z'}}})
    r('NSURL', b'resourceValuesForKeys:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSURL', b'getResourceValue:forKey:error:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type_modifier': b'o'}, 4: {'type_modifier': b'o'}}})
    r('NSURL', b'setResourceValue:forKey:error:', {'retval': {'type': b'Z'}, 'arguments': {4: {'type_modifier': b'o'}}})
    r('NSURL', b'setResourceValues:error:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type_modifier': b'o'}}})
    r('NSURL', b'checkResourceIsReachableAndReturnError:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type_modifier': b'o'}}})
    r('NSURL', b'isFileReferenceURL', {'retval': {'type': b'Z'}})
    r('NSURL', b'bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error:', {'arguments': {5: {'type_modifier': b'o'}}})
    r('NSURL', b'initByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:', {'arguments': {5: {'type': b'^Z', 'type_modifier': b'o'}, 6: {'type_modifier': b'o'}}})
    r('NSURL', b'URLByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:', {'arguments': {5: {'type': b'^Z', 'type_modifier': b'o'}, 6: {'type_modifier': b'o'}}})
    r('NSURL', b'writeBookmarkData:toURL:options:error:', {'retval': {'type': b'Z'}, 'arguments': {5: {'type_modifier': b'o'}}})
    r('NSURL', b'bookmarkDataWithContentsOfURL:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSURL', b'URLHandleUsingCache:', {'arguments': {2: {'type': b'Z'}}})
    r('NSURL', b'fileURLWithPath:isDirectory:', {'arguments': {3: {'type': b'Z'}}})
    r('NSURL', b'initFileURLWithPath:isDirectory:', {'arguments': {3: {'type': b'Z'}}})
    r('NSURL', b'isFileURL', {'retval': {'type': b'Z'}})
    r('NSURL', b'loadResourceDataNotifyingClient:usingCache:', {'arguments': {3: {'type': b'Z'}}})
    r('NSURL', b'resourceDataUsingCache:', {'arguments': {2: {'type': b'Z'}}})
    r('NSURL', b'setProperty:forKey:', {'retval': {'type': b'Z'}})
    r('NSURL', b'setResourceData:', {'retval': {'type': b'Z'}})
    r('NSURLConnection', b'canHandleRequest:', {'retval': {'type': b'Z'}})
    r('NSURLConnection', b'initWithRequest:delegate:startImmediately:', {'arguments': {4: {'type': b'Z'}}})
    r('NSURLConnection', b'sendSynchronousRequest:returningResponse:error:', {'arguments': {3: {'type_modifier': b'o'}, 4: {'type_modifier': b'o'}}})
    r('NSURLConnection', b'sendAsynchronousRequest:queue:completionHandler:', {'arguments': {4: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r('NSURLCredential', b'hasPassword', {'retval': {'type': b'Z'}})
    r('NSURLDownload', b'canResumeDownloadDecodedWithEncodingMIMEType:', {'retval': {'type': b'Z'}})
    r('NSURLDownload', b'deletesFileUponFailure', {'retval': {'type': b'Z'}})
    r('NSURLDownload', b'setDeletesFileUponFailure:', {'arguments': {2: {'type': b'Z'}}})
    r('NSURLDownload', b'setDestination:allowOverwrite:', {'arguments': {3: {'type': b'Z'}}})
    r('NSURLHandle', b'canInitWithURL:', {'retval': {'type': b'Z'}})
    r('NSURLHandle', b'didLoadBytes:loadComplete:', {'arguments': {3: {'type': b'Z'}}})
    r('NSURLHandle', b'initWithURL:cached:', {'arguments': {3: {'type': b'Z'}}})
    r('NSURLHandle', b'writeData:', {'retval': {'type': b'Z'}})
    r('NSURLHandle', b'writeProperty:forKey:', {'retval': {'type': b'Z'}})
    r('NSURLProtectionSpace', b'isProxy', {'retval': {'type': b'Z'}})
    r('NSURLProtectionSpace', b'receivesCredentialSecurely', {'retval': {'type': b'Z'}})
    r('NSURLProtocol', b'canInitWithRequest:', {'retval': {'type': b'Z'}})
    r('NSURLProtocol', b'registerClass:', {'retval': {'type': b'Z'}})
    r('NSURLProtocol', b'requestIsCacheEquivalent:toRequest:', {'retval': {'type': b'Z'}})
    r('NSURLProtocol', b'setProperty:forKey:inRequest:', {})
    r('NSURLRequest', b'HTTPShouldHandleCookies', {'retval': {'type': b'Z'}})
    r('NSURLRequest', b'HTTPShouldUsePipelining', {'retval': {'type': b'Z'}})
    r('NSUnarchiver', b'isAtEnd', {'retval': {'type': b'Z'}})
    r('NSUndoManager', b'redoActionIsDiscardable', {'retval': {'type': b'Z'}})
    r('NSUndoManager', b'undoActionIsDiscardable', {'retval': {'type': b'Z'}})
    r('NSUndoManager', b'canRedo', {'retval': {'type': b'Z'}})
    r('NSUndoManager', b'canUndo', {'retval': {'type': b'Z'}})
    r('NSUndoManager', b'groupsByEvent', {'retval': {'type': b'Z'}})
    r('NSUndoManager', b'setGroupsByEvent:', {'arguments': {2: {'type': b'Z'}}})
    r('NSUndoManager', b'setActionIsDiscardable:', {'arguments': {2: {'type': b'Z'}}})
    r('NSUndoManager', b'isRedoing', {'retval': {'type': b'Z'}})
    r('NSUndoManager', b'isUndoRegistrationEnabled', {'retval': {'type': b'Z'}})
    r('NSUndoManager', b'isUndoing', {'retval': {'type': b'Z'}})
    r('NSUndoManager', b'redoMenuTitleForUndoActionName:', {'arguments': {2: {'type': b'@'}}})
    r('NSUndoManager', b'registerUndoWithTarget:selector:object:', {'arguments': {3: {'sel_of_type': b'v@:@'}}})
    r('NSUserDefaults', b'synchronize', {'retval': {'type': b'Z'}})
    r('NSUserDefaults', b'objectIsForcedForKey:', {'retval': {'type': b'Z'}})
    r('NSUserDefaults', b'boolForKey:', {'retval': {'type': b'Z'}})
    r('NSUserDefaults', b'objectIsForcedForKey:inDomain:', {'retval': {'type': b'Z'}})
    r('NSUserDefaults', b'setBool:forKey:', {'arguments': {2: {'type': b'Z'}}})
    r('NSValue', b'getValue:', {})
    r('NSValue', b'initWithBytes:objCType:', {'arguments': {2: {'type_modifier': b'n', 'c_array_of_variable_length': True}, 3: {'c_array_delimited_by_null': True, 'type': b'^t', 'type_modifier': b'n'}}})
    r('NSValue', b'isEqualToValue:', {'retval': {'type': b'Z'}})
    r('NSValue', b'objCType', {'retval': {'c_array_delimited_by_null': True, 'type': b'^t'}})
    r('NSValue', b'pointValue', {'retval': {'type': sel32or64(b'{_NSPoint=ff}', b'{CGPoint=dd}')}})
    r('NSValue', b'rangeValue', {'retval': {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}})
    r('NSValue', b'rectValue', {'retval': {'type': sel32or64(b'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'{CGRect={CGPoint=dd}{CGSize=dd}}')}})
    r('NSValue', b'sizeValue', {'retval': {'type': sel32or64(b'{_NSSize=ff}', b'{CGSize=dd}')}})
    r('NSValue', b'value:withObjCType:', {'arguments': {2: {'type': b'^v', 'type_modifier': b'n', 'c_array_of_variable_length': True}, 3: {'c_array_delimited_by_null': True, 'type': b'^t', 'type_modifier': b'n'}}})
    r('NSValue', b'valueWithBytes:objCType:', {'arguments': {2: {'type': b'^v', 'type_modifier': b'n', 'c_array_of_variable_length': True}, 3: {'c_array_delimited_by_null': True, 'type': b'^t', 'type_modifier': b'n'}}})
    r('NSValue', b'valueWithPoint:', {'arguments': {2: {'type': sel32or64(b'{_NSPoint=ff}', b'{CGPoint=dd}')}}})
    r('NSValue', b'valueWithPointer:', {})
    r('NSValue', b'valueWithRange:', {'arguments': {2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}}})
    r('NSValue', b'valueWithRect:', {'arguments': {2: {'type': sel32or64(b'{_NSRect={_NSPoint=ff}{_NSSize=ff}}', b'{CGRect={CGPoint=dd}{CGSize=dd}}')}}})
    r('NSValue', b'valueWithSize:', {'arguments': {2: {'type': sel32or64(b'{_NSSize=ff}', b'{CGSize=dd}')}}})
    r('NSValueTransformer', b'allowsReverseTransformation', {'retval': {'type': b'Z'}})
    r('NSXMLDTD', b'initWithContentsOfURL:options:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSXMLDTD', b'initWithData:options:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSXMLDTDNode', b'isExternal', {'retval': {'type': b'Z'}})
    r('NSXMLDocument', b'initWithContentsOfURL:options:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSXMLDocument', b'initWithData:options:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSXMLDocument', b'initWithXMLString:options:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSXMLDocument', b'isStandalone', {'retval': {'type': b'Z'}})
    r('NSXMLDocument', b'objectByApplyingXSLT:arguments:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSXMLDocument', b'objectByApplyingXSLTAtURL:arguments:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSXMLDocument', b'objectByApplyingXSLTString:arguments:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSXMLDocument', b'setStandalone:', {'arguments': {2: {'type': b'Z'}}})
    r('NSXMLDocument', b'validateAndReturnError:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type_modifier': b'o'}}})
    r('NSXMLElement', b'initWithXMLString:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSXMLElement', b'normalizeAdjacentTextNodesPreservingCDATA:', {'arguments': {2: {'type': b'Z'}}})
    r('NSXMLNode', b'canonicalXMLStringPreservingComments:', {'arguments': {2: {'type': b'Z'}}})
    r('NSXMLNode', b'objectsForXQuery:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSXMLNode', b'objectsForXQuery:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSXMLNode', b'objectsForXQuery:constants:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSXMLNode', b'setStringValue:resolvingEntities:', {'arguments': {3: {'type': b'Z'}}})
    r('NSXMLNode', b'nodesForXPath:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSXMLParser', b'parse', {'retval': {'type': b'Z'}})
    r('NSXMLParser', b'setShouldProcessNamespaces:', {'arguments': {2: {'type': b'Z'}}})
    r('NSXMLParser', b'setShouldReportNamespacePrefixes:', {'arguments': {2: {'type': b'Z'}}})
    r('NSXMLParser', b'setShouldResolveExternalEntities:', {'arguments': {2: {'type': b'Z'}}})
    r('NSXMLParser', b'shouldProcessNamespaces', {'retval': {'type': b'Z'}})
    r('NSXMLParser', b'shouldReportNamespacePrefixes', {'retval': {'type': b'Z'}})
    r('NSXMLParser', b'shouldResolveExternalEntities', {'retval': {'type': b'Z'}})
    r('NSFileCoordinator', b'coordinateReadingItemAtURL:options:error:byAccessor:', {'arguments': {4: {'type_modifier': b'o'}, 5: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}}}}}})
    r('NSFileCoordinator', b'coordinateWritingItemAtURL:options:error:byAccessor:', {'arguments': {4: {'type_modifier': b'o'}, 5: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}}}}}})
    r('NSFileCoordinator', b'coordinateReadingItemAtURL:options:writingItemAtURL:options:error:byAccessor:', {'arguments': {6: {'type_modifier': b'o'}, 7: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}}}}}})
    r('NSFileCoordinator', b'coordinateWritingItemAtURL:options:writingItemAtURL:options:error:byAccessor:', {'arguments': {6: {'type_modifier': b'o'}, 7: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}}}}}})
    r('NSFileCoordinator', b'prepareForReadingItemsAtURLs:options:writingItemsAtURLs:options:error:byAccessor:', {'arguments': {6: {'type_modifier': b'o'}, 7: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}}}, 'type': b'@?'}}}}}})
    r('NSFileVersions', b'removeOtherVersionsOfItemAtURL:error:', {'retval': {'type': b'Z'}, 'arguments': {3: {'type_modifier': b'o'}}})
    r('NSFileVersions', b'removeAndReturnError:', {'retval': {'type': b'Z'}, 'arguments': {2: {'type_modifier': b'o'}}})
    r('NSFileVersions', b'replaceItemAtURL:options:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSFileVersions', b'setDiscardable:', {'arguments': {2: {'type': b'Z'}}})
    r('NSFileVersions', b'isDiscardable', {'retval': {'type': b'Z'}})
    r('NSFileVersions', b'setResolved:', {'arguments': {2: {'type': b'Z'}}})
    r('NSFileVersions', b'isResolved', {'retval': {'type': b'Z'}})
    r('NSFileVersions', b'setConflict:', {'arguments': {2: {'type': b'Z'}}})
    r('NSFileVersions', b'isConflict', {'retval': {'type': b'Z'}})
    r('NSFileVersions', b'addVersionOfItemAtURL:withContentsOfURL:options:error:', {'arguments': {5: {'type_modifier': b'o'}}})
    r('NSJSONSerialization', b'isValidJSONObject:', {'retval': {'type': b'Z'}})
    r('NSJSONSerialization', b'dataWithJSONObject:options:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSJSONSerialization', b'JSONObjectWithData:options:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSJSONSerialization', b'writeJSONObject:toStream:options:error:', {'arguments': {5: {'type_modifier': b'o'}}})
    r('NSJSONSerialization', b'JSONObjectWithStream:options:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSLinguisticTagger', b'orthographyAtIndex:effectiveRange:', {'arguments': {3: {'type': sel32or64(b'^{_NSRange=II}', b'^{_NSRange=QQ}'), 'type_modifier': b'o'}}})
    r('NSLinguisticTagger', b'enumerateTagsInRange:scheme:options:usingBlock:', {'arguments': {5: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 3: {'type': sel32or64(b'{_NSRange=II}', b'{_NSRange=QQ}')}, 4: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSLinguisticTagger', b'tagAtIndex:scheme:tokenRange:sentenceRange:', {'arguments': {4: {'type': sel32or64(b'^{_NSRange=II}', b'^{_NSRange=QQ}'), 'type_modifier': b'o'}, 5: {'type': sel32or64(b'^{_NSRange=II}', b'^{_NSRange=QQ}'), 'type_modifier': b'o'}}})
    r('NSLinguisticTagger', b'tagsInRange:scheme:options:tokenRanges:', {'arguments': {5: {'type_modifier': b'o'}}})
    r('NSLinguisticTagger', b'possibleTagsAtIndex:scheme:tokenRange:sentenceRange:scores:', {'arguments': {4: {'type': sel32or64(b'^{_NSRange=II}', b'^{_NSRange=QQ}'), 'type_modifier': b'o'}, 5: {'type': sel32or64(b'^{_NSRange=II}', b'^{_NSRange=QQ}'), 'type_modifier': b'o'}, 6: {'type_modifier': b'o'}}})
    r('NSOrderedSet', b'isEqualToOrderedSet:', {'retval': {'type': b'Z'}})
    r('NSOrderedSet', b'containsObject:', {'retval': {'type': b'Z'}})
    r('NSOrderedSet', b'intersectsOrderedSet:', {'retval': {'type': b'Z'}})
    r('NSOrderedSet', b'insersectsSet:', {'retval': {'type': b'Z'}})
    r('NSOrderedSet', b'isSubsetOfOrderedSet:', {'retval': {'type': b'Z'}})
    r('NSOrderedSet', b'isSubsetOfSet:', {'retval': {'type': b'Z'}})
    r('NSOrderedSet', b'enumerateObjectsUsingBlock:', {'arguments': {2: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'L'}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSOrderedSet', b'enumerateObjectsWithOptions:usingBlock:', {'arguments': {3: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'L'}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSOrderedSet', b'enumerateObjectsAtIndexes:options:usingBlock:', {'arguments': {4: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'L'}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSOrderedSet', b'indexOfObjectPassingTest:', {'arguments': {2: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'L'}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSOrderedSet', b'indexOfObjectWithOptions:passingTest:', {'arguments': {3: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'L'}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSOrderedSet', b'indexOfObjectAtIndexes:options:passingTest:', {'arguments': {4: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'L'}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSOrderedSet', b'indexesOfObjectsPassingTest:', {'arguments': {2: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'L'}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSOrderedSet', b'indexesOfObjecstWithOptions:passingTest:', {'arguments': {3: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'L'}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSOrderedSet', b'indexesOfObjectsAtIndexes:options:passingTest:', {'arguments': {4: {'callable': {'retval': {'type': b'Z'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'L'}, 3: {'type': b'^Z', 'type_modifier': b'o'}}}}}})
    r('NSOrderedSet', b'indexOfObject:inSortedRange:options:usingComparator:', {'arguments': {5: {'callable': {'retval': {'type': b'l'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r('NSOrderedSet', b'sortedArrayUsingComparator:', {'arguments': {2: {'callable': {'retval': {'type': b'l'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r('NSOrderedSet', b'sortedArrayWithOptions:usingComparator:', {'arguments': {3: {'callable': {'retval': {'type': b'l'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r('NSOrderedSet', b'orderedSetWithObjects:count:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSOrderedSet', b'orderedSetWithObjects:', {'c_array_delimited_by_null': True, 'variadic': 'true'})
    r('NSOrderedSet', b'initWithObjects:count:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSOrderedSet', b'initWithObjects:', {'c_array_delimited_by_null': True, 'variadic': 'true'})
    r('NSOrderedSet', b'orderedSetWithOrderedSet:range:copyItems:', {'arguments': {4: {'type': b'Z'}}})
    r('NSOrderedSet', b'orderedSetWithOrderedSet:copyItems:', {'arguments': {3: {'type': b'Z'}}})
    r('NSOrderedSet', b'orderedSetWithArray:range:copyItems:', {'arguments': {4: {'type': b'Z'}}})
    r('NSOrderedSet', b'orderedSetWithArray:copyItems:', {'arguments': {4: {'type': b'Z'}}})
    r('NSOrderedSet', b'orderedSetWithSet:copyItems:', {'arguments': {3: {'type': b'Z'}}})
    r('NSOrderedSet', b'initWithOrderedSet:range:copyItems:', {'arguments': {4: {'type': b'Z'}}})
    r('NSOrderedSet', b'initWithOrderedSet:copyItems:', {'arguments': {3: {'type': b'Z'}}})
    r('NSOrderedSet', b'initWithArray:range:copyItems:', {'arguments': {4: {'type': b'Z'}}})
    r('NSOrderedSet', b'initWithArray:copyItems:', {'arguments': {3: {'type': b'Z'}}})
    r('NSOrderedSet', b'initWithSet:copyItems:', {'arguments': {3: {'type': b'Z'}}})
    r('NSMutableOrderedSet', b'addObjects:count:', {'arguments': {2: {'type_modifier': b'n', 'c_array_length_in_arg': 3}}})
    r('NSMutableOrderedSet', b'replaceObjectsInRange:withObjects:count:', {'arguments': {3: {'type_modifier': b'n', 'c_array_length_in_arg': 4}}})
    r('NSMutableOrderedSet', b'sortUsingComparator:', {'arguments': {2: {'callable': {'retval': {'type': b'l'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r('NSMutableOrderedSet', b'sortWithOptions:usingComparator:', {'arguments': {3: {'callable': {'retval': {'type': b'l'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r('NSMutableOrderedSet', b'sortRange:options:usingComparator:', {'arguments': {4: {'callable': {'retval': {'type': b'l'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': b'@'}}}}}})
    r('NSRegularExpression', b'regularExpressionWithPattern:options:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSRegularExpression', b'initWithPattern:options:error:', {'arguments': {4: {'type_modifier': b'o'}}})
    r('NSRegularExpression', b'enumerateMatchesInString:options:range:usingBlock:', {'arguments': {5: {'callable': {'retval': {'type': b'v'}, 'arguments': {0: {'type': '^v'}, 1: {'type': b'@'}, 2: {'type': sel32or64(b'I', b'Q')}, 3: {'type': b'Z', 'type_modifier': b'o'}}}}}})
    r('NSDataDetector', b'dataDetectorWithTypes:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSDataDetector', b'initWithTypes:error:', {'arguments': {3: {'type_modifier': b'o'}}})
    r('NSUbiquitousKeyValueStore', b'boolForKey:', {'retval': {'type': b'Z'}})
    r('NSUbiquitousKeyValueStore', b'synchronize:', {'retval': {'type': b'Z'}})
    r('NSUbiquitousKeyValueStore', b'setBool:forKey:', {'arguments': {2: {'type': b'Z'}}})
finally:
    objc._updatingMetadata(False)
protocols={'NSMachPortDelegateMethods': objc.informal_protocol('NSMachPortDelegateMethods', [objc.selector(None, 'handleMachMessage:', 'v@:^v', isRequired=False)]), 'NSCoderMethods': objc.informal_protocol('NSCoderMethods', [objc.selector(None, 'awakeAfterUsingCoder:', '@@:@', isRequired=False), objc.selector(None, 'classForCoder', '#@:', isRequired=False), objc.selector(None, 'replacementObjectForCoder:', '@@:@', isRequired=False), objc.selector(None, 'setVersion:', sel32or64('v@:i', 'v@:q'), isRequired=False), objc.selector(None, 'version', sel32or64('i@:', 'q@:'), isRequired=False)]), 'NSStreamDelegateEventExtensions': objc.informal_protocol('NSStreamDelegateEventExtensions', [objc.selector(None, 'stream:handleEvent:', 'v@:@I', isRequired=False)]), 'NSCopyLinkMoveHandler': objc.informal_protocol('NSCopyLinkMoveHandler', [objc.selector(None, 'fileManager:shouldProceedAfterError:', 'Z@:@@', isRequired=False), objc.selector(None, 'fileManager:willProcessPath:', 'v@:@@', isRequired=False)]), 'NSScriptClassDescription': objc.informal_protocol('NSScriptClassDescription', [objc.selector(None, 'classCode', sel32or64('L@:', 'I@:'), isRequired=False), objc.selector(None, 'className', '@@:', isRequired=False)]), 'NSKeyValueObserverNotification': objc.informal_protocol('NSKeyValueObserverNotification', [objc.selector(None, 'didChange:valuesAtIndexes:forKey:', 'v@:I@@', isRequired=False), objc.selector(None, 'didChangeValueForKey:', 'v@:@', isRequired=False), objc.selector(None, 'didChangeValueForKey:withSetMutation:usingObjects:', 'v@:@I@', isRequired=False), objc.selector(None, 'willChange:valuesAtIndexes:forKey:', 'v@:I@@', isRequired=False), objc.selector(None, 'willChangeValueForKey:', 'v@:@', isRequired=False), objc.selector(None, 'willChangeValueForKey:withSetMutation:usingObjects:', 'v@:@I@', isRequired=False)]), 'NSKeyValueCoding': objc.informal_protocol('NSKeyValueCoding', [objc.selector(None, 'accessInstanceVariablesDirectly', 'Z@:', isRequired=False), objc.selector(None, 'dictionaryWithValuesForKeys:', '@@:@', isRequired=False), objc.selector(None, 'mutableArrayValueForKey:', '@@:@', isRequired=False), objc.selector(None, 'mutableArrayValueForKeyPath:', '@@:@', isRequired=False), objc.selector(None, 'mutableSetValueForKey:', '@@:@', isRequired=False), objc.selector(None, 'mutableSetValueForKeyPath:', '@@:@', isRequired=False), objc.selector(None, 'setNilValueForKey:', 'v@:@', isRequired=False), objc.selector(None, 'setValue:forKey:', 'v@:@@', isRequired=False), objc.selector(None, 'setValue:forKeyPath:', 'v@:@@', isRequired=False), objc.selector(None, 'setValue:forUndefinedKey:', 'v@:@@', isRequired=False), objc.selector(None, 'setValuesForKeysWithDictionary:', 'v@:@', isRequired=False), objc.selector(None, 'validateValue:forKey:error:', 'Z@:^@@^@', isRequired=False), objc.selector(None, 'validateValue:forKeyPath:error:', 'Z@:^@@^@', isRequired=False), objc.selector(None, 'valueForKey:', '@@:@', isRequired=False), objc.selector(None, 'valueForKeyPath:', '@@:@', isRequired=False), objc.selector(None, 'valueForUndefinedKey:', '@@:@', isRequired=False)]), 'NSDeprecatedMethods': objc.informal_protocol('NSDeprecatedMethods', [objc.selector(None, 'poseAsClass:', 'v@:#', isRequired=False)]), 'NSDistantObjectRequestMethods': objc.informal_protocol('NSDistantObjectRequestMethods', [objc.selector(None, 'connection:handleRequest:', 'Z@:@@', isRequired=False)]), 'NSScriptKeyValueCoding': objc.informal_protocol('NSScriptKeyValueCoding', [objc.selector(None, 'coerceValue:forKey:', '@@:@@', isRequired=False), objc.selector(None, 'insertValue:atIndex:inPropertyWithKey:', sel32or64('v@:@I@', 'v@:@Q@'), isRequired=False), objc.selector(None, 'insertValue:inPropertyWithKey:', 'v@:@@', isRequired=False), objc.selector(None, 'removeValueAtIndex:fromPropertyWithKey:', sel32or64('v@:I@', 'v@:Q@'), isRequired=False), objc.selector(None, 'replaceValueAtIndex:inPropertyWithKey:withValue:', sel32or64('v@:I@@', 'v@:Q@@'), isRequired=False), objc.selector(None, 'valueAtIndex:inPropertyWithKey:', sel32or64('@@:I@', '@@:Q@'), isRequired=False), objc.selector(None, 'valueWithName:inPropertyWithKey:', '@@:@@', isRequired=False), objc.selector(None, 'valueWithUniqueID:inPropertyWithKey:', '@@:@@', isRequired=False)]), 'NSSpellServerDelegate': objc.informal_protocol('NSSpellServerDelegate', [objc.selector(None, 'spellServer:checkString:offset:types:options:orthography:workdCount:', sel32or64('@@:@@Ll@@o^L', '@@:@@Ql@@o^Q'), isRequired=False), objc.selector(None, 'spellServer:checkGrammarInString:language:details:', sel32or64('{_NSRange=II}@:@@@^@', '{_NSRange=QQ}@:@@@^@'), isRequired=False), objc.selector(None, 'spellServer:didForgetWord:inLanguage:', 'v@:@@@', isRequired=False), objc.selector(None, 'spellServer:didLearnWord:inLanguage:', 'v@:@@@', isRequired=False), objc.selector(None, 'spellServer:findMisspelledWordInString:language:wordCount:countOnly:', sel32or64('{_NSRange=II}@:@@@^iZ', '{_NSRange=QQ}@:@@@^qZ'), isRequired=False), objc.selector(None, 'spellServer:suggestCompletionsForPartialWordRange:inString:language:', sel32or64('@@:@{_NSRange=II}@@', '@@:@{_NSRange=QQ}@@'), isRequired=False), objc.selector(None, 'spellServer:suggestGuessesForWord:inLanguage:', '@@:@@@', isRequired=False)]), 'NSDeprecatedKeyValueObservingCustomization': objc.informal_protocol('NSDeprecatedKeyValueObservingCustomization', [objc.selector(None, 'setKeys:triggerChangeNotificationsForDependentKey:', 'v@:@@', isRequired=False)]), 'NSFileManagerFileOperationAdditions': objc.informal_protocol('NSFileManagerFileOperationAdditions', [objc.selector(None, 'fileManager:shouldCopyItemAtPath:toPath:', 'Z@:@@@', isRequired=False), objc.selector(None, 'fileManager:shouldLinkItemAtPath:toPath:', 'Z@:@@@', isRequired=False), objc.selector(None, 'fileManager:shouldMoveItemAtPath:toPath:', 'Z@:@@@', isRequired=False), objc.selector(None, 'fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:', 'Z@:@@@@', isRequired=False), objc.selector(None, 'fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:', 'Z@:@@@@', isRequired=False), objc.selector(None, 'fileManager:shouldProceedAfterError:movingItemAtPath:toPath:', 'Z@:@@@@', isRequired=False), objc.selector(None, 'fileManager:shouldProceedAfterError:removingItemAtPath:', 'Z@:@@@', isRequired=False), objc.selector(None, 'fileManager:shouldRemoveItemAtPath:', 'Z@:@@', isRequired=False)]), 'NSURLDownloadDelegate': objc.informal_protocol('NSURLDownloadDelegate', [objc.selector(None, 'download:decideDestinationWithSuggestedFilename:', 'v@:@@', isRequired=False), objc.selector(None, 'download:didCancelAuthenticationChallenge:', 'v@:@@', isRequired=False), objc.selector(None, 'download:didCreateDestination:', 'v@:@@', isRequired=False), objc.selector(None, 'download:didFailWithError:', 'v@:@@', isRequired=False), objc.selector(None, 'download:didReceiveAuthenticationChallenge:', 'v@:@@', isRequired=False), objc.selector(None, 'download:didReceiveDataOfLength:', sel32or64('v@:@I', 'v@:@Q'), isRequired=False), objc.selector(None, 'download:didReceiveResponse:', 'v@:@@', isRequired=False), objc.selector(None, 'download:shouldDecodeSourceDataOfMIMEType:', 'Z@:@@', isRequired=False), objc.selector(None, 'download:willResumeWithResponse:fromByte:', 'v@:@@q', isRequired=False), objc.selector(None, 'download:willSendRequest:redirectResponse:', '@@:@@@', isRequired=False), objc.selector(None, 'downloadDidBegin:', 'v@:@', isRequired=False), objc.selector(None, 'downloadDidFinish:', 'v@:@', isRequired=False), objc.selector(None, 'download:canAuthenticateAgainstProtectionSpace:', 'Z@:@@', isRequired=False), objc.selector(None, 'downloadShouldUseCredentialStorage:', 'Z@:@', isRequired=False)]), 'NSComparisonMethods': objc.informal_protocol('NSComparisonMethods', [objc.selector(None, 'doesContain:', 'Z@:@', isRequired=False), objc.selector(None, 'isCaseInsensitiveLike:', 'Z@:@', isRequired=False), objc.selector(None, 'isEqualTo:', 'Z@:@', isRequired=False), objc.selector(None, 'isGreaterThan:', 'Z@:@', isRequired=False), objc.selector(None, 'isGreaterThanOrEqualTo:', 'Z@:@', isRequired=False), objc.selector(None, 'isLessThan:', 'Z@:@', isRequired=False), objc.selector(None, 'isLessThanOrEqualTo:', 'Z@:@', isRequired=False), objc.selector(None, 'isLike:', 'Z@:@', isRequired=False), objc.selector(None, 'isNotEqualTo:', 'Z@:@', isRequired=False)]), 'NSDeprecatedKeyValueCoding': objc.informal_protocol('NSDeprecatedKeyValueCoding', [objc.selector(None, 'handleQueryWithUnboundKey:', '@@:@', isRequired=False), objc.selector(None, 'handleTakeValue:forUnboundKey:', 'v@:@@', isRequired=False), objc.selector(None, 'storedValueForKey:', '@@:@', isRequired=False), objc.selector(None, 'takeStoredValue:forKey:', 'v@:@@', isRequired=False), objc.selector(None, 'takeValue:forKey:', 'v@:@@', isRequired=False), objc.selector(None, 'takeValue:forKeyPath:', 'v@:@@', isRequired=False), objc.selector(None, 'takeValuesFromDictionary:', 'v@:@', isRequired=False), objc.selector(None, 'unableToSetNilForKey:', 'v@:@', isRequired=False), objc.selector(None, 'useStoredAccessor', 'Z@:', isRequired=False), objc.selector(None, 'valuesForKeys:', '@@:@', isRequired=False)]), 'NSScripting': objc.informal_protocol('NSScripting', [objc.selector(None, 'copyScriptingValue:forKey:withProperties:', '@@:@@@', isRequired=False), objc.selector(None, 'newScriptingObjectOfClass:forValueForKey:withContentsValue:properties:', '@@:#@@@', isRequired=False), objc.selector(None, 'scriptingProperties', '@@:', isRequired=False), objc.selector(None, 'scriptingValueForSpecifier:', '@@:@', isRequired=False), objc.selector(None, 'setScriptingProperties:', 'v@:@', isRequired=False)]), 'NSKeyValueObserving': objc.informal_protocol('NSKeyValueObserving', [objc.selector(None, 'observeValueForKeyPath:ofObject:change:context:', 'v@:@@@^v', isRequired=False)]), 'NSPortDelegateMethods': objc.informal_protocol('NSPortDelegateMethods', [objc.selector(None, 'handlePortMessage:', 'v@:@', isRequired=False)]), 'NSArchiverCallback': objc.informal_protocol('NSArchiverCallback', [objc.selector(None, 'classForArchiver', '#@:', isRequired=False), objc.selector(None, 'replacementObjectForArchiver:', '@@:@', isRequired=False)]), 'NSThreadPerformAdditions': objc.informal_protocol('NSThreadPerformAdditions', [objc.selector(None, 'performSelector:onThread:withObject:waitUntilDone:', 'v@::@@Z', isRequired=False), objc.selector(None, 'performSelector:onThread:withObject:waitUntilDone:modes:', 'v@::@@Z@', isRequired=False), objc.selector(None, 'performSelectorInBackground:withObject:', 'v@::@', isRequired=False), objc.selector(None, 'performSelectorOnMainThread:withObject:waitUntilDone:', 'v@::@Z', isRequired=False), objc.selector(None, 'performSelectorOnMainThread:withObject:waitUntilDone:modes:', 'v@::@Z@', isRequired=False)]), 'NSKeyedUnarchiverObjectSubstitution': objc.informal_protocol('NSKeyedUnarchiverObjectSubstitution', [objc.selector(None, 'classForKeyedUnarchiver', '#@:', isRequired=False)]), 'NSScriptingComparisonMethods': objc.informal_protocol('NSScriptingComparisonMethods', [objc.selector(None, 'scriptingBeginsWith:', 'Z@:@', isRequired=False), objc.selector(None, 'scriptingContains:', 'Z@:@', isRequired=False), objc.selector(None, 'scriptingEndsWith:', 'Z@:@', isRequired=False), objc.selector(None, 'scriptingIsEqualTo:', 'Z@:@', isRequired=False), objc.selector(None, 'scriptingIsGreaterThan:', 'Z@:@', isRequired=False), objc.selector(None, 'scriptingIsGreaterThanOrEqualTo:', 'Z@:@', isRequired=False), objc.selector(None, 'scriptingIsLessThan:', 'Z@:@', isRequired=False), objc.selector(None, 'scriptingIsLessThanOrEqualTo:', 'Z@:@', isRequired=False)]), 'NSURLConnectionDelegate': objc.informal_protocol('NSURLConnectionDelegate', [objc.selector(None, 'connection:didCancelAuthenticationChallenge:', 'v@:@@', isRequired=False), objc.selector(None, 'connection:didFailWithError:', 'v@:@@', isRequired=False), objc.selector(None, 'connection:didReceiveAuthenticationChallenge:', 'v@:@@', isRequired=False), objc.selector(None, 'connection:didReceiveData:', 'v@:@@', isRequired=False), objc.selector(None, 'connection:didReceiveResponse:', 'v@:@@', isRequired=False), objc.selector(None, 'connection:willCacheResponse:', '@@:@@', isRequired=False), objc.selector(None, 'connection:willSendRequest:redirectResponse:', '@@:@@@', isRequired=False), objc.selector(None, 'connectionDidFinishLoading:', 'v@:@', isRequired=False)]), 'NSNetServiceDelegateMethods': objc.informal_protocol('NSNetServiceDelegateMethods', [objc.selector(None, 'netService:didNotPublish:', 'v@:@@', isRequired=False), objc.selector(None, 'netService:didNotResolve:', 'v@:@@', isRequired=False), objc.selector(None, 'netService:didUpdateTXTRecordData:', 'v@:@@', isRequired=False), objc.selector(None, 'netServiceDidPublish:', 'v@:@', isRequired=False), objc.selector(None, 'netServiceDidResolveAddress:', 'v@:@', isRequired=False), objc.selector(None, 'netServiceDidStop:', 'v@:@', isRequired=False), objc.selector(None, 'netServiceWillPublish:', 'v@:@', isRequired=False), objc.selector(None, 'netServiceWillResolve:', 'v@:@', isRequired=False)]), 'NSKeyedArchiverDelegate': objc.informal_protocol('NSKeyedArchiverDelegate', [objc.selector(None, 'archiver:didEncodeObject:', 'v@:@@', isRequired=False), objc.selector(None, 'archiver:willEncodeObject:', '@@:@@', isRequired=False), objc.selector(None, 'archiver:willReplaceObject:withObject:', 'v@:@@@', isRequired=False), objc.selector(None, 'archiverDidFinish:', 'v@:@', isRequired=False), objc.selector(None, 'archiverWillFinish:', 'v@:@', isRequired=False)]), 'NSDistributedObjects': objc.informal_protocol('NSDistributedObjects', [objc.selector(None, 'classForPortCoder', '#@:', isRequired=False), objc.selector(None, 'replacementObjectForPortCoder:', '@@:@', isRequired=False)]), 'NSKeyValueObserverRegistration': objc.informal_protocol('NSKeyValueObserverRegistration', [objc.selector(None, 'addObserver:forKeyPath:options:context:', 'v@:@@I^v', isRequired=False), objc.selector(None, 'removeObserver:forKeyPath:', 'v@:@@', isRequired=False)]), 'NSScriptObjectSpecifiers': objc.informal_protocol('NSScriptObjectSpecifiers', [objc.selector(None, 'indicesOfObjectsByEvaluatingObjectSpecifier:', '@@:@', isRequired=False), objc.selector(None, 'objectSpecifier', '@@:', isRequired=False)]), 'NSErrorRecoveryAttempting': objc.informal_protocol('NSErrorRecoveryAttempting', [objc.selector(None, 'attemptRecoveryFromError:optionIndex:', sel32or64('Z@:@I', 'Z@:@Q'), isRequired=False), objc.selector(None, 'attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:', sel32or64('v@:@I@:^v', 'v@:@Q@:^v'), isRequired=False)]), 'NSXMLParserDelegateEventAdditions': objc.informal_protocol('NSXMLParserDelegateEventAdditions', [objc.selector(None, 'parser:didEndElement:namespaceURI:qualifiedName:', 'v@:@@@@', isRequired=False), objc.selector(None, 'parser:didEndMappingPrefix:', 'v@:@@', isRequired=False), objc.selector(None, 'parser:didStartElement:namespaceURI:qualifiedName:attributes:', 'v@:@@@@@', isRequired=False), objc.selector(None, 'parser:didStartMappingPrefix:toURI:', 'v@:@@@', isRequired=False), objc.selector(None, 'parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:', 'v@:@@@@@', isRequired=False), objc.selector(None, 'parser:foundCDATA:', 'v@:@@', isRequired=False), objc.selector(None, 'parser:foundCharacters:', 'v@:@@', isRequired=False), objc.selector(None, 'parser:foundComment:', 'v@:@@', isRequired=False), objc.selector(None, 'parser:foundElementDeclarationWithName:model:', 'v@:@@@', isRequired=False), objc.selector(None, 'parser:foundExternalEntityDeclarationWithName:publicID:systemID:', 'v@:@@@@', isRequired=False), objc.selector(None, 'parser:foundIgnorableWhitespace:', 'v@:@@', isRequired=False), objc.selector(None, 'parser:foundInternalEntityDeclarationWithName:value:', 'v@:@@@', isRequired=False), objc.selector(None, 'parser:foundNotationDeclarationWithName:publicID:systemID:', 'v@:@@@@', isRequired=False), objc.selector(None, 'parser:foundProcessingInstructionWithTarget:data:', 'v@:@@@', isRequired=False), objc.selector(None, 'parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:', 'v@:@@@@@', isRequired=False), objc.selector(None, 'parser:parseErrorOccurred:', 'v@:@@', isRequired=False), objc.selector(None, 'parser:resolveExternalEntityName:systemID:', '@@:@@@', isRequired=False), objc.selector(None, 'parser:validationErrorOccurred:', 'v@:@@', isRequired=False), objc.selector(None, 'parserDidEndDocument:', 'v@:@', isRequired=False), objc.selector(None, 'parserDidStartDocument:', 'v@:@', isRequired=False)]), 'NSClassDescriptionPrimitives': objc.informal_protocol('NSClassDescriptionPrimitives', [objc.selector(None, 'attributeKeys', '@@:', isRequired=False), objc.selector(None, 'classDescription', '@@:', isRequired=False), objc.selector(None, 'inverseForRelationshipKey:', '@@:@', isRequired=False), objc.selector(None, 'toManyRelationshipKeys', '@@:', isRequired=False), objc.selector(None, 'toOneRelationshipKeys', '@@:', isRequired=False)]), 'NSNetServiceBrowserDelegateMethods': objc.informal_protocol('NSNetServiceBrowserDelegateMethods', [objc.selector(None, 'netServiceBrowser:didFindDomain:moreComing:', 'v@:@@Z', isRequired=False), objc.selector(None, 'netServiceBrowser:didFindService:moreComing:', 'v@:@@Z', isRequired=False), objc.selector(None, 'netServiceBrowser:didNotSearch:', 'v@:@@', isRequired=False), objc.selector(None, 'netServiceBrowser:didRemoveDomain:moreComing:', 'v@:@@Z', isRequired=False), objc.selector(None, 'netServiceBrowser:didRemoveService:moreComing:', 'v@:@@Z', isRequired=False), objc.selector(None, 'netServiceBrowserDidStopSearch:', 'v@:@', isRequired=False), objc.selector(None, 'netServiceBrowserWillSearch:', 'v@:@', isRequired=False)]), 'NSConnectionDelegateMethods': objc.informal_protocol('NSConnectionDelegateMethods', [objc.selector(None, 'authenticateComponents:withData:', 'Z@:@@', isRequired=False), objc.selector(None, 'authenticationDataForComponents:', '@@:@', isRequired=False), objc.selector(None, 'connection:shouldMakeNewConnection:', 'Z@:@@', isRequired=False), objc.selector(None, 'createConversationForConnection:', '@@:@', isRequired=False), objc.selector(None, 'makeNewConnection:sender:', 'Z@:@@', isRequired=False), objc.selector(None, 'connection:canAuthenticateAgainstProtectionSpace:', 'Z@:@@', isRequired=False), objc.selector(None, 'connectionShouldUseCredentialStorage:', 'Z@:@', isRequired=False), objc.selector(None, 'connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:', sel32or64('Z@:@iii', 'Z@:@qqq'), isRequired=False)]), 'NSURLClient': objc.informal_protocol('NSURLClient', [objc.selector(None, 'URL:resourceDataDidBecomeAvailable:', 'v@:@@', isRequired=False), objc.selector(None, 'URL:resourceDidFailLoadingWithReason:', 'v@:@@', isRequired=False), objc.selector(None, 'URLResourceDidCancelLoading:', 'v@:@', isRequired=False), objc.selector(None, 'URLResourceDidFinishLoading:', 'v@:@', isRequired=False)]), 'NSKeyValueObservingCustomization': objc.informal_protocol('NSKeyValueObservingCustomization', [objc.selector(None, 'automaticallyNotifiesObserversForKey:', 'Z@:@', isRequired=False), objc.selector(None, 'keyPathsForValuesAffectingValueForKey:', '@@:@', isRequired=False), objc.selector(None, 'observationInfo', '^v@:', isRequired=False), objc.selector(None, 'setObservationInfo:', 'v@:^v', isRequired=False)]), 'NSDelayedPerforming': objc.informal_protocol('NSDelayedPerforming', [objc.selector(None, 'cancelPreviousPerformRequestsWithTarget:', 'v@:@', isRequired=False), objc.selector(None, 'cancelPreviousPerformRequestsWithTarget:selector:object:', 'v@:@:@', isRequired=False), objc.selector(None, 'performSelector:withObject:afterDelay:', 'v@::@d', isRequired=False), objc.selector(None, 'performSelector:withObject:afterDelay:inModes:', 'v@::@d@', isRequired=False)]), 'NSMetadataQueryDelegate': objc.informal_protocol('NSMetadataQueryDelegate', [objc.selector(None, 'metadataQuery:replacementObjectForResultObject:', '@@:@@', isRequired=False), objc.selector(None, 'metadataQuery:replacementValueForAttribute:value:', '@@:@@@', isRequired=False)]), 'NSKeyedArchiverObjectSubstitution': objc.informal_protocol('NSKeyedArchiverObjectSubstitution', [objc.selector(None, 'classFallbacksForKeyedArchiver', '@@:', isRequired=False), objc.selector(None, 'classForKeyedArchiver', '#@:', isRequired=False), objc.selector(None, 'replacementObjectForKeyedArchiver:', '@@:@', isRequired=False)]), 'NSKeyedUnarchiverDelegate': objc.informal_protocol('NSKeyedUnarchiverDelegate', [objc.selector(None, 'unarchiver:cannotDecodeObjectOfClassName:originalClasses:', '#@:@@@', isRequired=False), objc.selector(None, 'unarchiver:didDecodeObject:', '@@:@@', isRequired=False), objc.selector(None, 'unarchiver:willReplaceObject:withObject:', 'v@:@@@', isRequired=False), objc.selector(None, 'unarchiverDidFinish:', 'v@:@', isRequired=False), objc.selector(None, 'unarchiverWillFinish:', 'v@:@', isRequired=False)])}
