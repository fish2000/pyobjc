# Generated file, don't edit
# Source: BridgeSupport/SystemConfiguration.bridgesupport
# Last update: Tue Jul 19 15:10:28 2011

import objc, sys

if sys.maxint > 2 ** 32:
    def sel32or64(a, b): return b
else:
    def sel32or64(a, b): return a
if sys.byteorder == 'little':
    def littleOrBig(a, b): return a
else:
    def littleOrBig(a, b): return b

misc = {
}
constants = '''$kCFErrorDomainSystemConfiguration@^{__CFString=}$kSCBondStatusDeviceAggregationStatus@^{__CFString=}$kSCBondStatusDeviceCollecting@^{__CFString=}$kSCBondStatusDeviceDistributing@^{__CFString=}$kSCCompAnyRegex@^{__CFString=}$kSCCompGlobal@^{__CFString=}$kSCCompHostNames@^{__CFString=}$kSCCompInterface@^{__CFString=}$kSCCompNetwork@^{__CFString=}$kSCCompService@^{__CFString=}$kSCCompSystem@^{__CFString=}$kSCCompUsers@^{__CFString=}$kSCDynamicStoreDomainFile@^{__CFString=}$kSCDynamicStoreDomainPlugin@^{__CFString=}$kSCDynamicStoreDomainPrefs@^{__CFString=}$kSCDynamicStoreDomainSetup@^{__CFString=}$kSCDynamicStoreDomainState@^{__CFString=}$kSCDynamicStorePropNetInterfaces@^{__CFString=}$kSCDynamicStorePropNetPrimaryInterface@^{__CFString=}$kSCDynamicStorePropNetPrimaryService@^{__CFString=}$kSCDynamicStorePropNetServiceIDs@^{__CFString=}$kSCDynamicStorePropSetupCurrentSet@^{__CFString=}$kSCDynamicStorePropSetupLastUpdated@^{__CFString=}$kSCDynamicStoreUseSessionKeys@^{__CFString=}$kSCEntNet6to4@^{__CFString=}$kSCEntNetAirPort@^{__CFString=}$kSCEntNetAppleTalk@^{__CFString=}$kSCEntNetDHCP@^{__CFString=}$kSCEntNetDNS@^{__CFString=}$kSCEntNetEthernet@^{__CFString=}$kSCEntNetFireWire@^{__CFString=}$kSCEntNetIPSec@^{__CFString=}$kSCEntNetIPv4@^{__CFString=}$kSCEntNetIPv6@^{__CFString=}$kSCEntNetInterface@^{__CFString=}$kSCEntNetL2TP@^{__CFString=}$kSCEntNetLink@^{__CFString=}$kSCEntNetModem@^{__CFString=}$kSCEntNetNetInfo@^{__CFString=}$kSCEntNetPPP@^{__CFString=}$kSCEntNetPPPSerial@^{__CFString=}$kSCEntNetPPPoE@^{__CFString=}$kSCEntNetPPTP@^{__CFString=}$kSCEntNetProxies@^{__CFString=}$kSCEntNetSMB@^{__CFString=}$kSCEntUsersConsoleUser@^{__CFString=}$kSCNetworkInterfaceIPv4@=^{__SCNetworkInterface=}$kSCNetworkInterfaceType6to4@^{__CFString=}$kSCNetworkInterfaceTypeBluetooth@^{__CFString=}$kSCNetworkInterfaceTypeBond@^{__CFString=}$kSCNetworkInterfaceTypeEthernet@^{__CFString=}$kSCNetworkInterfaceTypeFireWire@^{__CFString=}$kSCNetworkInterfaceTypeIEEE80211@^{__CFString=}$kSCNetworkInterfaceTypeIPv4@^{__CFString=}$kSCNetworkInterfaceTypeIrDA@^{__CFString=}$kSCNetworkInterfaceTypeL2TP@^{__CFString=}$kSCNetworkInterfaceTypeModem@^{__CFString=}$kSCNetworkInterfaceTypePPP@^{__CFString=}$kSCNetworkInterfaceTypePPTP@^{__CFString=}$kSCNetworkInterfaceTypeSerial@^{__CFString=}$kSCNetworkInterfaceTypeVLAN@^{__CFString=}$kSCNetworkInterfaceTypeWWAN@^{__CFString=}$kSCNetworkProtocolTypeAppleTalk@^{__CFString=}$kSCNetworkProtocolTypeDNS@^{__CFString=}$kSCNetworkProtocolTypeIPv4@^{__CFString=}$kSCNetworkProtocolTypeIPv6@^{__CFString=}$kSCNetworkProtocolTypeProxies@^{__CFString=}$kSCNetworkProtocolTypeSMB@^{__CFString=}$kSCPrefCurrentSet@^{__CFString=}$kSCPrefNetworkServices@^{__CFString=}$kSCPrefSets@^{__CFString=}$kSCPrefSystem@^{__CFString=}$kSCPropInterfaceName@^{__CFString=}$kSCPropMACAddress@^{__CFString=}$kSCPropNet6to4Relay@^{__CFString=}$kSCPropNetAirPortAllowNetCreation@^{__CFString=}$kSCPropNetAirPortAuthPassword@^{__CFString=}$kSCPropNetAirPortAuthPasswordEncryption@^{__CFString=}$kSCPropNetAirPortJoinMode@^{__CFString=}$kSCPropNetAirPortPowerEnabled@^{__CFString=}$kSCPropNetAirPortPreferredNetwork@^{__CFString=}$kSCPropNetAirPortSavePasswords@^{__CFString=}$kSCPropNetAppleTalkComputerName@^{__CFString=}$kSCPropNetAppleTalkComputerNameEncoding@^{__CFString=}$kSCPropNetAppleTalkConfigMethod@^{__CFString=}$kSCPropNetAppleTalkDefaultZone@^{__CFString=}$kSCPropNetAppleTalkNetworkID@^{__CFString=}$kSCPropNetAppleTalkNetworkRange@^{__CFString=}$kSCPropNetAppleTalkNodeID@^{__CFString=}$kSCPropNetAppleTalkSeedNetworkRange@^{__CFString=}$kSCPropNetAppleTalkSeedZones@^{__CFString=}$kSCPropNetDNSDomainName@^{__CFString=}$kSCPropNetDNSOptions@^{__CFString=}$kSCPropNetDNSSearchDomains@^{__CFString=}$kSCPropNetDNSSearchOrder@^{__CFString=}$kSCPropNetDNSServerAddresses@^{__CFString=}$kSCPropNetDNSServerPort@^{__CFString=}$kSCPropNetDNSServerTimeout@^{__CFString=}$kSCPropNetDNSSortList@^{__CFString=}$kSCPropNetDNSSupplementalMatchDomains@^{__CFString=}$kSCPropNetDNSSupplementalMatchOrders@^{__CFString=}$kSCPropNetEthernetMTU@^{__CFString=}$kSCPropNetEthernetMediaOptions@^{__CFString=}$kSCPropNetEthernetMediaSubType@^{__CFString=}$kSCPropNetIPSecAuthenticationMethod@^{__CFString=}$kSCPropNetIPSecLocalCertificate@^{__CFString=}$kSCPropNetIPSecLocalIdentifier@^{__CFString=}$kSCPropNetIPSecLocalIdentifierType@^{__CFString=}$kSCPropNetIPSecSharedSecret@^{__CFString=}$kSCPropNetIPSecSharedSecretEncryption@^{__CFString=}$kSCPropNetIPv4Addresses@^{__CFString=}$kSCPropNetIPv4BroadcastAddresses@^{__CFString=}$kSCPropNetIPv4ConfigMethod@^{__CFString=}$kSCPropNetIPv4DHCPClientID@^{__CFString=}$kSCPropNetIPv4DestAddresses@^{__CFString=}$kSCPropNetIPv4Router@^{__CFString=}$kSCPropNetIPv4SubnetMasks@^{__CFString=}$kSCPropNetIPv6Addresses@^{__CFString=}$kSCPropNetIPv6ConfigMethod@^{__CFString=}$kSCPropNetIPv6DestAddresses@^{__CFString=}$kSCPropNetIPv6Flags@^{__CFString=}$kSCPropNetIPv6PrefixLength@^{__CFString=}$kSCPropNetIPv6Router@^{__CFString=}$kSCPropNetInterfaceDeviceName@^{__CFString=}$kSCPropNetInterfaceHardware@^{__CFString=}$kSCPropNetInterfaceSubType@^{__CFString=}$kSCPropNetInterfaceSupportsModemOnHold@^{__CFString=}$kSCPropNetInterfaceType@^{__CFString=}$kSCPropNetInterfaces@^{__CFString=}$kSCPropNetL2TPIPSecSharedSecret@^{__CFString=}$kSCPropNetL2TPIPSecSharedSecretEncryption@^{__CFString=}$kSCPropNetL2TPTransport@^{__CFString=}$kSCPropNetLinkActive@^{__CFString=}$kSCPropNetLinkDetaching@^{__CFString=}$kSCPropNetLocalHostName@^{__CFString=}$kSCPropNetModemAccessPointName@^{__CFString=}$kSCPropNetModemConnectSpeed@^{__CFString=}$kSCPropNetModemConnectionPersonality@^{__CFString=}$kSCPropNetModemConnectionScript@^{__CFString=}$kSCPropNetModemDataCompression@^{__CFString=}$kSCPropNetModemDeviceContextID@^{__CFString=}$kSCPropNetModemDeviceModel@^{__CFString=}$kSCPropNetModemDeviceVendor@^{__CFString=}$kSCPropNetModemDialMode@^{__CFString=}$kSCPropNetModemErrorCorrection@^{__CFString=}$kSCPropNetModemHoldCallWaitingAudibleAlert@^{__CFString=}$kSCPropNetModemHoldDisconnectOnAnswer@^{__CFString=}$kSCPropNetModemHoldEnabled@^{__CFString=}$kSCPropNetModemHoldReminder@^{__CFString=}$kSCPropNetModemHoldReminderTime@^{__CFString=}$kSCPropNetModemNote@^{__CFString=}$kSCPropNetModemPulseDial@^{__CFString=}$kSCPropNetModemSpeaker@^{__CFString=}$kSCPropNetModemSpeed@^{__CFString=}$kSCPropNetNetInfoBindingMethods@^{__CFString=}$kSCPropNetNetInfoBroadcastServerTag@^{__CFString=}$kSCPropNetNetInfoServerAddresses@^{__CFString=}$kSCPropNetNetInfoServerTags@^{__CFString=}$kSCPropNetOverridePrimary@^{__CFString=}$kSCPropNetPPPACSPEnabled@^{__CFString=}$kSCPropNetPPPAuthEAPPlugins@^{__CFString=}$kSCPropNetPPPAuthName@^{__CFString=}$kSCPropNetPPPAuthPassword@^{__CFString=}$kSCPropNetPPPAuthPasswordEncryption@^{__CFString=}$kSCPropNetPPPAuthPrompt@^{__CFString=}$kSCPropNetPPPAuthProtocol@^{__CFString=}$kSCPropNetPPPCCPEnabled@^{__CFString=}$kSCPropNetPPPCCPMPPE128Enabled@^{__CFString=}$kSCPropNetPPPCCPMPPE40Enabled@^{__CFString=}$kSCPropNetPPPCommAlternateRemoteAddress@^{__CFString=}$kSCPropNetPPPCommConnectDelay@^{__CFString=}$kSCPropNetPPPCommDisplayTerminalWindow@^{__CFString=}$kSCPropNetPPPCommRedialCount@^{__CFString=}$kSCPropNetPPPCommRedialEnabled@^{__CFString=}$kSCPropNetPPPCommRedialInterval@^{__CFString=}$kSCPropNetPPPCommRemoteAddress@^{__CFString=}$kSCPropNetPPPCommTerminalScript@^{__CFString=}$kSCPropNetPPPCommUseTerminalScript@^{__CFString=}$kSCPropNetPPPConnectTime@^{__CFString=}$kSCPropNetPPPDeviceLastCause@^{__CFString=}$kSCPropNetPPPDialOnDemand@^{__CFString=}$kSCPropNetPPPDisconnectOnFastUserSwitch@^{__CFString=}$kSCPropNetPPPDisconnectOnIdle@^{__CFString=}$kSCPropNetPPPDisconnectOnIdleTimer@^{__CFString=}$kSCPropNetPPPDisconnectOnLogout@^{__CFString=}$kSCPropNetPPPDisconnectOnSleep@^{__CFString=}$kSCPropNetPPPDisconnectTime@^{__CFString=}$kSCPropNetPPPIPCPCompressionVJ@^{__CFString=}$kSCPropNetPPPIPCPUsePeerDNS@^{__CFString=}$kSCPropNetPPPIdleReminder@^{__CFString=}$kSCPropNetPPPIdleReminderTimer@^{__CFString=}$kSCPropNetPPPLCPCompressionACField@^{__CFString=}$kSCPropNetPPPLCPCompressionPField@^{__CFString=}$kSCPropNetPPPLCPEchoEnabled@^{__CFString=}$kSCPropNetPPPLCPEchoFailure@^{__CFString=}$kSCPropNetPPPLCPEchoInterval@^{__CFString=}$kSCPropNetPPPLCPMRU@^{__CFString=}$kSCPropNetPPPLCPMTU@^{__CFString=}$kSCPropNetPPPLCPReceiveACCM@^{__CFString=}$kSCPropNetPPPLCPTransmitACCM@^{__CFString=}$kSCPropNetPPPLastCause@^{__CFString=}$kSCPropNetPPPLogfile@^{__CFString=}$kSCPropNetPPPOverridePrimary@^{__CFString=}$kSCPropNetPPPPlugins@^{__CFString=}$kSCPropNetPPPRetryConnectTime@^{__CFString=}$kSCPropNetPPPSessionTimer@^{__CFString=}$kSCPropNetPPPStatus@^{__CFString=}$kSCPropNetPPPUseSessionTimer@^{__CFString=}$kSCPropNetPPPVerboseLogging@^{__CFString=}$kSCPropNetProxiesExceptionsList@^{__CFString=}$kSCPropNetProxiesExcludeSimpleHostnames@^{__CFString=}$kSCPropNetProxiesFTPEnable@^{__CFString=}$kSCPropNetProxiesFTPPassive@^{__CFString=}$kSCPropNetProxiesFTPPort@^{__CFString=}$kSCPropNetProxiesFTPProxy@^{__CFString=}$kSCPropNetProxiesGopherEnable@^{__CFString=}$kSCPropNetProxiesGopherPort@^{__CFString=}$kSCPropNetProxiesGopherProxy@^{__CFString=}$kSCPropNetProxiesHTTPEnable@^{__CFString=}$kSCPropNetProxiesHTTPPort@^{__CFString=}$kSCPropNetProxiesHTTPProxy@^{__CFString=}$kSCPropNetProxiesHTTPSEnable@^{__CFString=}$kSCPropNetProxiesHTTPSPort@^{__CFString=}$kSCPropNetProxiesHTTPSProxy@^{__CFString=}$kSCPropNetProxiesProxyAutoConfigEnable@^{__CFString=}$kSCPropNetProxiesProxyAutoConfigURLString@^{__CFString=}$kSCPropNetProxiesProxyAutoDiscoveryEnable@^{__CFString=}$kSCPropNetProxiesRTSPEnable@^{__CFString=}$kSCPropNetProxiesRTSPPort@^{__CFString=}$kSCPropNetProxiesRTSPProxy@^{__CFString=}$kSCPropNetProxiesSOCKSEnable@^{__CFString=}$kSCPropNetProxiesSOCKSPort@^{__CFString=}$kSCPropNetProxiesSOCKSProxy@^{__CFString=}$kSCPropNetSMBNetBIOSName@^{__CFString=}$kSCPropNetSMBNetBIOSNodeType@^{__CFString=}$kSCPropNetSMBNetBIOSScope@^{__CFString=}$kSCPropNetSMBWINSAddresses@^{__CFString=}$kSCPropNetSMBWorkgroup@^{__CFString=}$kSCPropNetServiceOrder@^{__CFString=}$kSCPropSystemComputerName@^{__CFString=}$kSCPropSystemComputerNameEncoding@^{__CFString=}$kSCPropUserDefinedName@^{__CFString=}$kSCPropUsersConsoleUserGID@^{__CFString=}$kSCPropUsersConsoleUserName@^{__CFString=}$kSCPropUsersConsoleUserUID@^{__CFString=}$kSCPropVersion@^{__CFString=}$kSCResvInactive@^{__CFString=}$kSCResvLink@^{__CFString=}$kSCValNetAirPortAuthPasswordEncryptionKeychain@^{__CFString=}$kSCValNetAirPortJoinModeAutomatic@^{__CFString=}$kSCValNetAirPortJoinModePreferred@^{__CFString=}$kSCValNetAirPortJoinModeRanked@^{__CFString=}$kSCValNetAirPortJoinModeRecent@^{__CFString=}$kSCValNetAirPortJoinModeStrongest@^{__CFString=}$kSCValNetAppleTalkConfigMethodNode@^{__CFString=}$kSCValNetAppleTalkConfigMethodRouter@^{__CFString=}$kSCValNetAppleTalkConfigMethodSeedRouter@^{__CFString=}$kSCValNetIPSecAuthenticationMethodCertificate@^{__CFString=}$kSCValNetIPSecAuthenticationMethodSharedSecret@^{__CFString=}$kSCValNetIPSecLocalIdentifierTypeKeyID@^{__CFString=}$kSCValNetIPSecSharedSecretEncryptionKeychain@^{__CFString=}$kSCValNetIPv4ConfigMethodBOOTP@^{__CFString=}$kSCValNetIPv4ConfigMethodDHCP@^{__CFString=}$kSCValNetIPv4ConfigMethodINFORM@^{__CFString=}$kSCValNetIPv4ConfigMethodLinkLocal@^{__CFString=}$kSCValNetIPv4ConfigMethodManual@^{__CFString=}$kSCValNetIPv4ConfigMethodPPP@^{__CFString=}$kSCValNetIPv6ConfigMethod6to4@^{__CFString=}$kSCValNetIPv6ConfigMethodAutomatic@^{__CFString=}$kSCValNetIPv6ConfigMethodManual@^{__CFString=}$kSCValNetIPv6ConfigMethodRouterAdvertisement@^{__CFString=}$kSCValNetInterfaceSubTypeL2TP@^{__CFString=}$kSCValNetInterfaceSubTypePPPSerial@^{__CFString=}$kSCValNetInterfaceSubTypePPPoE@^{__CFString=}$kSCValNetInterfaceSubTypePPTP@^{__CFString=}$kSCValNetInterfaceType6to4@^{__CFString=}$kSCValNetInterfaceTypeEthernet@^{__CFString=}$kSCValNetInterfaceTypeFireWire@^{__CFString=}$kSCValNetInterfaceTypePPP@^{__CFString=}$kSCValNetL2TPIPSecSharedSecretEncryptionKeychain@^{__CFString=}$kSCValNetL2TPTransportIP@^{__CFString=}$kSCValNetL2TPTransportIPSec@^{__CFString=}$kSCValNetModemDialModeIgnoreDialTone@^{__CFString=}$kSCValNetModemDialModeManual@^{__CFString=}$kSCValNetModemDialModeWaitForDialTone@^{__CFString=}$kSCValNetNetInfoBindingMethodsBroadcast@^{__CFString=}$kSCValNetNetInfoBindingMethodsDHCP@^{__CFString=}$kSCValNetNetInfoBindingMethodsManual@^{__CFString=}$kSCValNetNetInfoDefaultServerTag@^{__CFString=}$kSCValNetPPPAuthPasswordEncryptionKeychain@^{__CFString=}$kSCValNetPPPAuthPasswordEncryptionToken@^{__CFString=}$kSCValNetPPPAuthPromptAfter@^{__CFString=}$kSCValNetPPPAuthPromptBefore@^{__CFString=}$kSCValNetPPPAuthProtocolCHAP@^{__CFString=}$kSCValNetPPPAuthProtocolEAP@^{__CFString=}$kSCValNetPPPAuthProtocolMSCHAP1@^{__CFString=}$kSCValNetPPPAuthProtocolMSCHAP2@^{__CFString=}$kSCValNetPPPAuthProtocolPAP@^{__CFString=}$kSCValNetSMBNetBIOSNodeTypeBroadcast@^{__CFString=}$kSCValNetSMBNetBIOSNodeTypeHybrid@^{__CFString=}$kSCValNetSMBNetBIOSNodeTypeMixed@^{__CFString=}$kSCValNetSMBNetBIOSNodeTypePeer@^{__CFString=}$'''
enums = '''$kSCBondStatusLinkInvalid@1$kSCBondStatusNoPartner@2$kSCBondStatusNotInActiveGroup@3$kSCBondStatusOK@0$kSCBondStatusUnknown@999$kSCNetworkConnectionConnected@2$kSCNetworkConnectionConnecting@1$kSCNetworkConnectionDisconnected@0$kSCNetworkConnectionDisconnecting@3$kSCNetworkConnectionInvalid@-1$kSCNetworkConnectionPPPAuthenticating@5$kSCNetworkConnectionPPPConnected@8$kSCNetworkConnectionPPPConnectingLink@2$kSCNetworkConnectionPPPDialOnTraffic@3$kSCNetworkConnectionPPPDisconnected@0$kSCNetworkConnectionPPPDisconnectingLink@10$kSCNetworkConnectionPPPHoldingLinkOff@11$kSCNetworkConnectionPPPInitializing@1$kSCNetworkConnectionPPPNegotiatingLink@4$kSCNetworkConnectionPPPNegotiatingNetwork@7$kSCNetworkConnectionPPPSuspended@12$kSCNetworkConnectionPPPTerminating@9$kSCNetworkConnectionPPPWaitingForCallBack@6$kSCNetworkConnectionPPPWaitingForRedial@13$kSCNetworkFlagsConnectionAutomatic@8$kSCNetworkFlagsConnectionRequired@4$kSCNetworkFlagsInterventionRequired@16$kSCNetworkFlagsIsDirect@131072$kSCNetworkFlagsIsLocalAddress@65536$kSCNetworkFlagsReachable@2$kSCNetworkFlagsTransientConnection@1$kSCPreferencesNotificationApply@2$kSCPreferencesNotificationCommit@1$kSCStatusAccessError@1003$kSCStatusFailed@1001$kSCStatusInvalidArgument@1002$kSCStatusKeyExists@1005$kSCStatusLocked@1006$kSCStatusMaxLink@3006$kSCStatusNeedLock@1007$kSCStatusNoConfigFile@3003$kSCStatusNoKey@1004$kSCStatusNoLink@3004$kSCStatusNoPrefsSession@3001$kSCStatusNoStoreServer@2002$kSCStatusNoStoreSession@2001$kSCStatusNotifierActive@2003$kSCStatusOK@0$kSCStatusPrefsBusy@3002$kSCStatusReachabilityUnknown@4001$kSCStatusStale@3005$'''
misc.update({'kSCNetworkConnectionPacketsOut': 'PacketsOut', 'kSCNetworkConnectionBytesIn': 'BytesIn', 'kSCNetworkConnectionPacketsIn': 'PacketsIn', 'kSCNetworkConnectionErrorsIn': 'ErrorsIn', 'kSCNetworkConnectionBytesOut': 'BytesOut', 'kSCNetworkConnectionErrorsOut': 'ErrorsOut'})
functions = {'SCBondInterfaceCopyAll': ('^{__CFArray=}^{__SCPreferences=}', '', {'retval': {'type': b'^{__CFArray=}', 'already_cfretained': True}}), 'SCPreferencesGetTypeID': (sel32or64('L', 'Q'),), 'SCNetworkProtocolSetEnabled': ('Z^{__SCNetworkProtocol=}Z',), 'SCNetworkServiceEstablishDefaultConfiguration': ('Z^{__SCNetworkService=}',), 'SCNetworkServiceCreate': ('^{__SCNetworkService=}^{__SCPreferences=}^{__SCNetworkInterface=}', '', {'retval': {'type': b'^{__SCNetworkService=}', 'already_cfretained': True}}), 'SCPreferencesSetValue': ('Z^{__SCPreferences=}^{__CFString=}@',), 'SCNetworkInterfaceCreateWithInterface': ('^{__SCNetworkInterface=}^{__SCNetworkInterface=}^{__CFString=}', '', {'retval': {'type': b'^{__SCNetworkInterface=}', 'already_cfretained': True}}), 'SCDynamicStoreCopyDHCPInfo': ('^{__CFDictionary=}^{__SCDynamicStore=}^{__CFString=}', '', {'retval': {'type': b'^{__CFDictionary=}', 'already_cfretained': True}}), 'SCNetworkSetCopyServices': ('^{__CFArray=}^{__SCNetworkSet=}', '', {'retval': {'type': b'^{__CFArray=}', 'already_cfretained': True}}), 'SCNetworkSetSetCurrent': ('Z^{__SCNetworkSet=}',), 'SCDynamicStoreCopyComputerName': ('^{__CFString=}^{__SCDynamicStore=}^I', '', {'retval': {'type': b'^{__CFString=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^{__SCDynamicStore=}'}, 1: {'type': b'^I', 'type_modifier': b'o'}}}), 'SCNetworkConnectionScheduleWithRunLoop': ('Z^{__SCNetworkConnection=}^{__CFRunLoop=}^{__CFString=}',), 'SCDynamicStoreNotifyValue': ('Z^{__SCDynamicStore=}^{__CFString=}',), 'SCDynamicStoreCopyLocalHostName': ('^{__CFString=}^{__SCDynamicStore=}', '', {'retval': {'type': b'^{__CFString=}', 'already_cfretained': True}}), 'SCNetworkInterfaceGetInterface': ('^{__SCNetworkInterface=}^{__SCNetworkInterface=}',), 'SCNetworkSetRemoveService': ('Z^{__SCNetworkSet=}^{__SCNetworkService=}',), 'SCVLANInterfaceCopyAll': ('^{__CFArray=}^{__SCPreferences=}', '', {'retval': {'type': b'^{__CFArray=}', 'already_cfretained': True}}), 'SCNetworkProtocolGetConfiguration': ('^{__CFDictionary=}^{__SCNetworkProtocol=}',), 'SCDynamicStoreCreateWithOptions': (sel32or64('^{__SCDynamicStore=}^{__CFAllocator=}^{__CFString=}^{__CFDictionary=}^?^{?=i^v^?^?^?}', '^{__SCDynamicStore=}^{__CFAllocator=}^{__CFString=}^{__CFDictionary=}^?^{?=q^v^?^?^?}'), '', {'retval': {'type': b'^{__SCDynamicStore=}', 'already_cfretained': True}}), 'SCVLANInterfaceCreate': ('^{__SCNetworkInterface=}^{__SCPreferences=}^{__SCNetworkInterface=}^{__CFNumber=}', '', {'retval': {'type': b'^{__SCNetworkInterface=}', 'already_cfretained': True}}), 'SCDynamicStoreKeyCreateProxies': ('^{__CFString=}^{__CFAllocator=}', '', {'retval': {'type': b'^{__CFString=}', 'already_cfretained': True}}), 'SCNetworkReachabilityScheduleWithRunLoop': ('Z^{__SCNetworkReachability=}^{__CFRunLoop=}^{__CFString=}',), 'SCDynamicStoreAddTemporaryValue': ('Z^{__SCDynamicStore=}^{__CFString=}@',), 'SCNetworkConnectionStop': ('Z^{__SCNetworkConnection=}Z',), 'SCBondInterfaceCopyAvailableMemberInterfaces': ('^{__CFArray=}^{__SCPreferences=}', '', {'retval': {'type': b'^{__CFArray=}', 'already_cfretained': True}}), 'SCNetworkServiceAddProtocolType': ('Z^{__SCNetworkService=}^{__CFString=}',), 'SCDynamicStoreCreate': (sel32or64('^{__SCDynamicStore=}^{__CFAllocator=}^{__CFString=}^?^{?=i^v^?^?^?}', '^{__SCDynamicStore=}^{__CFAllocator=}^{__CFString=}^?^{?=q^v^?^?^?}'), '', {'retval': {'type': b'^{__SCDynamicStore=}', 'already_cfretained': True}}), 'SCNetworkServiceGetServiceID': ('^{__CFString=}^{__SCNetworkService=}',), 'SCBondInterfaceCreate': ('^{__SCNetworkInterface=}^{__SCPreferences=}', '', {'retval': {'type': b'^{__SCNetworkInterface=}', 'already_cfretained': True}}), 'SCNetworkConnectionCopyUserOptions': ('^{__CFDictionary=}^{__SCNetworkConnection=}', '', {'retval': {'type': b'^{__CFDictionary=}', 'already_cfretained': True}}), 'SCPreferencesAddValue': ('Z^{__SCPreferences=}^{__CFString=}@',), 'SCDynamicStoreKeyCreateHostNames': ('^{__CFString=}^{__CFAllocator=}', '', {'retval': {'type': b'^{__CFString=}', 'already_cfretained': True}}), 'SCPreferencesPathCreateUniqueChild': ('^{__CFString=}^{__SCPreferences=}^{__CFString=}', '', {'retval': {'type': b'^{__CFString=}', 'already_cfretained': True}}), 'SCPreferencesCreate': ('^{__SCPreferences=}^{__CFAllocator=}^{__CFString=}^{__CFString=}', '', {'retval': {'type': b'^{__SCPreferences=}', 'already_cfretained': True}}), 'SCVLANInterfaceSetOptions': ('Z^{__SCNetworkInterface=}^{__CFDictionary=}',), 'SCDynamicStoreSetMultiple': ('Z^{__SCDynamicStore=}^{__CFDictionary=}^{__CFArray=}^{__CFArray=}',), 'SCNetworkConnectionCopyUserPreferences': ('Z^{__CFDictionary=}^^{__CFString}^^{__CFDictionary}', '', {'arguments': {0: {'type': b'^{__CFDictionary=}'}, 1: {'already_retained': True, 'type': b'^^{__CFString}', 'type_modifier': b'o'}, 2: {'already_retained': True, 'type': b'^^{__CFDictionary}', 'type_modifier': b'o'}}}), 'SCNetworkInterfaceGetBSDName': ('^{__CFString=}^{__SCNetworkInterface=}',), 'SCNetworkInterfaceSetExtendedConfiguration': ('Z^{__SCNetworkInterface=}^{__CFString=}^{__CFDictionary=}',), 'SCNetworkCheckReachabilityByName': ('Z*^I', '', {'arguments': {0: {'type': b'*'}, 1: {'type': b'^I', 'type_modifier': b'o'}}}), 'SCNetworkInterfaceCopyMediaSubTypes': ('^{__CFArray=}^{__CFArray=}', '', {'retval': {'type': b'^{__CFArray=}', 'already_cfretained': True}}), 'SCErrorString': ('*i',), 'SCNetworkProtocolGetProtocolType': ('^{__CFString=}^{__SCNetworkProtocol=}',), 'SCBondStatusGetTypeID': (sel32or64('L', 'Q'),), 'SCPreferencesCreateWithAuthorization': ('^{__SCPreferences=}^{__CFAllocator=}^{__CFString=}^{__CFString=}^{AuthorizationOpaqueRef=}', '', {'retval': {'type': b'^{__SCPreferences=}', 'already_cfretained': True}}), 'SCBondInterfaceSetLocalizedDisplayName': ('Z^{__SCNetworkInterface=}^{__CFString=}',), 'SCDynamicStoreKeyCreateConsoleUser': ('^{__CFString=}^{__CFAllocator=}', '', {'retval': {'type': b'^{__CFString=}', 'already_cfretained': True}}), 'SCNetworkServiceSetName': ('Z^{__SCNetworkService=}^{__CFString=}',), 'SCDynamicStoreSetNotificationKeys': ('Z^{__SCDynamicStore=}^{__CFArray=}^{__CFArray=}',), 'SCDynamicStoreKeyCreateNetworkInterface': ('^{__CFString=}^{__CFAllocator=}^{__CFString=}', '', {'retval': {'type': b'^{__CFString=}', 'already_cfretained': True}}), 'SCNetworkInterfaceSetMediaOptions': ('Z^{__SCNetworkInterface=}^{__CFString=}^{__CFArray=}',), 'SCPreferencesGetValue': ('@^{__SCPreferences=}^{__CFString=}',), 'SCNetworkInterfaceGetConfiguration': ('^{__CFDictionary=}^{__SCNetworkInterface=}',), 'DHCPInfoGetLeaseStartTime': ('^{__CFDate=}^{__CFDictionary=}',), 'SCNetworkInterfaceGetExtendedConfiguration': ('^{__CFDictionary=}^{__SCNetworkInterface=}^{__CFString=}',), 'SCVLANInterfaceGetPhysicalInterface': ('^{__SCNetworkInterface=}^{__SCNetworkInterface=}',), 'SCNetworkConnectionCopyServiceID': ('^{__CFString=}^{__SCNetworkConnection=}', '', {'retval': {'type': b'^{__CFString=}', 'already_cfretained': True}}), 'SCDynamicStoreGetTypeID': (sel32or64('L', 'Q'),), 'SCNetworkSetCopy': ('^{__SCNetworkSet=}^{__SCPreferences=}^{__CFString=}', '', {'retval': {'type': b'^{__SCNetworkSet=}', 'already_cfretained': True}}), 'SCBondStatusGetMemberInterfaces': ('^{__CFArray=}^{__SCBondStatus=}',), 'SCDynamicStoreAddValue': ('Z^{__SCDynamicStore=}^{__CFString=}@',), 'SCNetworkConnectionUnscheduleFromRunLoop': ('Z^{__SCNetworkConnection=}^{__CFRunLoop=}^{__CFString=}',), 'SCPreferencesSynchronize': ('v^{__SCPreferences=}',), 'SCPreferencesSetComputerName': ('Z^{__SCPreferences=}^{__CFString=}L',), 'SCVLANInterfaceRemove': ('Z^{__SCNetworkInterface=}',), 'SCDynamicStoreKeyCreateNetworkInterfaceEntity': ('^{__CFString=}^{__CFAllocator=}^{__CFString=}^{__CFString=}^{__CFString=}', '', {'retval': {'type': b'^{__CFString=}', 'already_cfretained': True}}), 'SCDynamicStoreCopyConsoleUser': ('^{__CFString=}^{__SCDynamicStore=}^I^I', '', {'retval': {'type': b'^{__CFString=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^{__SCDynamicStore=}'}, 1: {'type': b'^I', 'type_modifier': b'o'}, 2: {'type': b'^I', 'type_modifier': b'o'}}}), 'SCVLANInterfaceCopyAvailablePhysicalInterfaces': ('^{__CFArray=}', '', {'retval': {'type': b'^{__CFArray=}', 'already_cfretained': True}}), 'SCNetworkConnectionCreateWithServiceID': (sel32or64('^{__SCNetworkConnection=}^{__CFAllocator=}^{__CFString=}^?^{?=i^v^?^?^?}', '^{__SCNetworkConnection=}^{__CFAllocator=}^{__CFString=}^?^{?=q^v^?^?^?}'), '', {'retval': {'type': b'^{__SCNetworkConnection=}', 'already_cfretained': True}}), 'SCNetworkServiceGetTypeID': (sel32or64('L', 'Q'),), 'SCCopyLastError': ('^{__CFError=}', '', {'retval': {'type': b'^{__CFError=}', 'already_cfretained': True}}), 'SCNetworkServiceRemoveProtocolType': ('Z^{__SCNetworkService=}^{__CFString=}',), 'SCDynamicStoreKeyCreateComputerName': ('^{__CFString=}^{__CFAllocator=}', '', {'retval': {'type': b'^{__CFString=}', 'already_cfretained': True}}), 'SCPreferencesUnscheduleFromRunLoop': ('Z^{__SCPreferences=}^{__CFRunLoop=}^{__CFString=}',), 'SCNetworkReachabilityCreateWithName': ('^{__SCNetworkReachability=}^{__CFAllocator=}*', '', {'retval': {'type': b'^{__SCNetworkReachability=}', 'already_cfretained': True}}), 'SCBondInterfaceRemove': ('Z^{__SCNetworkInterface=}',), 'SCNetworkCheckReachabilityByAddress': ('Z^{sockaddr=CC[14c]}I^I', '', {'arguments': {0: {'type': b'^{sockaddr=CC[14c]}', 'type_modifier': b'n'}, 1: {'type': b'I'}, 2: {'type': b'^I', 'type_modifier': b'o'}}}), 'SCNetworkSetContainsInterface': ('Z^{__SCNetworkSet=}^{__SCNetworkInterface=}',), 'SCNetworkServiceRemove': ('Z^{__SCNetworkService=}',), 'SCPreferencesApplyChanges': ('Z^{__SCPreferences=}',), 'SCBondInterfaceGetMemberInterfaces': ('^{__CFArray=}^{__SCNetworkInterface=}',), 'SCPreferencesPathGetLink': ('^{__CFString=}^{__SCPreferences=}^{__CFString=}',), 'SCPreferencesPathSetLink': ('Z^{__SCPreferences=}^{__CFString=}^{__CFString=}',), 'SCNetworkInterfaceGetHardwareAddressString': ('^{__CFString=}^{__SCNetworkInterface=}',), 'SCNetworkSetGetTypeID': (sel32or64('L', 'Q'),), 'SCNetworkReachabilityUnscheduleFromRunLoop': ('Z^{__SCNetworkReachability=}^{__CFRunLoop=}^{__CFString=}',), 'SCNetworkServiceSetEnabled': ('Z^{__SCNetworkService=}Z',), 'SCNetworkReachabilityGetTypeID': (sel32or64('L', 'Q'),), 'DHCPClientPreferencesCopyApplicationOptions': ('^C^{__CFString=}^i', '', {'retval': {'type': b'^C', 'free_result': True, 'c_array_length_in_arg': 1}, 'arguments': {0: {'type': b'^{__CFString=}'}, 1: {'type': b'^i', 'type_modifier': b'o'}}}), 'SCNetworkServiceGetEnabled': ('Z^{__SCNetworkService=}',), 'SCNetworkSetAddService': ('Z^{__SCNetworkSet=}^{__SCNetworkService=}',), 'SCNetworkConnectionGetTypeID': (sel32or64('L', 'Q'),), 'SCDynamicStoreCopyValue': ('@^{__SCDynamicStore=}^{__CFString=}',), 'SCBondInterfaceSetMemberInterfaces': ('Z^{__SCNetworkInterface=}^{__CFArray=}',), 'DHCPInfoGetOptionData': ('^{__CFData=}^{__CFDictionary=}C',), 'SCDynamicStoreCopyMultiple': ('^{__CFDictionary=}^{__SCDynamicStore=}^{__CFArray=}^{__CFArray=}', '', {'retval': {'type': b'^{__CFDictionary=}', 'already_cfretained': True}}), 'SCBondStatusGetInterfaceStatus': ('^{__CFDictionary=}^{__SCBondStatus=}^{__SCNetworkInterface=}',), 'SCNetworkConnectionCopyExtendedStatus': ('^{__CFDictionary=}^{__SCNetworkConnection=}', '', {'retval': {'type': b'^{__CFDictionary=}', 'already_cfretained': True}}), 'SCNetworkProtocolGetTypeID': (sel32or64('L', 'Q'),), 'SCNetworkSetGetName': ('^{__CFString=}^{__SCNetworkSet=}',), 'SCPreferencesSetCallback': (sel32or64('Z^{__SCPreferences=}^?^{?=i^v^?^?^?}', 'Z^{__SCPreferences=}^?^{?=q^v^?^?^?}'), '', {'arguments': {0: {'type': b'^{__SCPreferences=}'}, 1: {'callable': {'retval': {'type': 'v'}, 'arguments': {}}, 'type': b'^?'}, 2: {'type': sel32or64(b'^{?=i^v^?^?^?}', b'^{?=q^v^?^?^?}')}}}), 'SCNetworkServiceCopyProtocol': ('^{__SCNetworkProtocol=}^{__SCNetworkService=}^{__CFString=}', '', {'retval': {'type': b'^{__SCNetworkProtocol=}', 'already_cfretained': True}}), 'SCDynamicStoreRemoveValue': ('Z^{__SCDynamicStore=}^{__CFString=}',), 'SCVLANInterfaceGetTag': ('^{__CFNumber=}^{__SCNetworkInterface=}',), 'SCNetworkServiceCopy': ('^{__SCNetworkService=}^{__SCPreferences=}^{__CFString=}', '', {'retval': {'type': b'^{__SCNetworkService=}', 'already_cfretained': True}}), 'SCDynamicStoreCopyKeyList': ('^{__CFArray=}^{__SCDynamicStore=}^{__CFString=}', '', {'retval': {'type': b'^{__CFArray=}', 'already_cfretained': True}}), 'SCNetworkInterfaceGetLocalizedDisplayName': ('^{__CFString=}^{__SCNetworkInterface=}',), 'SCDynamicStoreCopyNotifiedKeys': ('^{__CFArray=}^{__SCDynamicStore=}', '', {'retval': {'type': b'^{__CFArray=}', 'already_cfretained': True}}), 'SCNetworkInterfaceCopyMediaSubTypeOptions': ('^{__CFArray=}^{__CFArray=}^{__CFString=}', '', {'retval': {'type': b'^{__CFArray=}', 'already_cfretained': True}}), 'SCVLANInterfaceSetLocalizedDisplayName': ('Z^{__SCNetworkInterface=}^{__CFString=}',), 'SCVLANInterfaceSetPhysicalInterfaceAndTag': ('Z^{__SCNetworkInterface=}^{__SCNetworkInterface=}^{__CFNumber=}',), 'SCNetworkProtocolSetConfiguration': ('Z^{__SCNetworkProtocol=}^{__CFDictionary=}',), 'SCBondInterfaceGetOptions': ('^{__CFDictionary=}^{__SCNetworkInterface=}',), 'SCBondInterfaceCopyStatus': ('^{__SCBondStatus=}^{__SCNetworkInterface=}', '', {'retval': {'type': b'^{__SCBondStatus=}', 'already_cfretained': True}}), 'SCNetworkInterfaceGetTypeID': (sel32or64('L', 'Q'),), 'SCNetworkServiceGetInterface': ('^{__SCNetworkInterface=}^{__SCNetworkService=}',), 'SCNetworkConnectionCopyStatistics': ('^{__CFDictionary=}^{__SCNetworkConnection=}', '', {'retval': {'type': b'^{__CFDictionary=}', 'already_cfretained': True}}), 'SCDynamicStoreKeyCreate': ('^{__CFString=}^{__CFAllocator=}@', '', {'retval': {'type': b'^{__CFString=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^{__CFAllocator=}'}, 1: {'printf_format': True, 'type': b'@'}}, 'variadic': 'true'}), 'SCPreferencesCommitChanges': ('Z^{__SCPreferences=}',), 'SCNetworkSetSetServiceOrder': ('Z^{__SCNetworkSet=}^{__CFArray=}',), 'SCPreferencesLock': ('Z^{__SCPreferences=}Z',), 'SCNetworkSetCopyAll': ('^{__CFArray=}^{__SCPreferences=}', '', {'retval': {'type': b'^{__CFArray=}', 'already_cfretained': True}}), 'SCNetworkInterfaceRefreshConfiguration': ('Z^{__CFString=}',), 'SCNetworkSetSetName': ('Z^{__SCNetworkSet=}^{__CFString=}',), 'SCPreferencesPathRemoveValue': ('Z^{__SCPreferences=}^{__CFString=}',), 'SCDynamicStoreCopyProxies': ('^{__CFDictionary=}^{__SCDynamicStore=}', '', {'retval': {'type': b'^{__CFDictionary=}', 'already_cfretained': True}}), 'SCNetworkServiceGetName': ('^{__CFString=}^{__SCNetworkService=}',), 'SCNetworkServiceCopyAll': ('^{__CFArray=}^{__SCPreferences=}', '', {'retval': {'type': b'^{__CFArray=}', 'already_cfretained': True}}), 'SCNetworkInterfaceSetMTU': ('Z^{__SCNetworkInterface=}i',), 'DHCPClientPreferencesSetApplicationOptions': ('Z^{__CFString=}^Cl', '', {'arguments': {0: {'type': b'^{__CFString=}'}, 1: {'type': b'^C', 'type_modifier': b'n', 'c_array_length_in_arg': 2}, 2: {'type': b'l'}}}), 'SCDynamicStoreKeyCreateNetworkGlobalEntity': ('^{__CFString=}^{__CFAllocator=}^{__CFString=}^{__CFString=}', '', {'retval': {'type': b'^{__CFString=}', 'already_cfretained': True}}), 'SCNetworkSetCopyCurrent': ('^{__SCNetworkSet=}^{__SCPreferences=}', '', {'retval': {'type': b'^{__SCNetworkSet=}', 'already_cfretained': True}}), 'SCNetworkInterfaceCopyAll': ('^{__CFArray=}', '', {'retval': {'type': b'^{__CFArray=}', 'already_cfretained': True}}), 'SCPreferencesRemoveValue': ('Z^{__SCPreferences=}^{__CFString=}',), 'SCPreferencesPathGetValue': ('^{__CFDictionary=}^{__SCPreferences=}^{__CFString=}',), 'SCDynamicStoreSetValue': ('Z^{__SCDynamicStore=}^{__CFString=}@',), 'SCNetworkConnectionGetStatus': ('i^{__SCNetworkConnection=}',), 'SCNetworkServiceCopyProtocols': ('^{__CFArray=}^{__SCNetworkService=}', '', {'retval': {'type': b'^{__CFArray=}', 'already_cfretained': True}}), 'SCDynamicStoreCopyLocation': ('^{__CFString=}^{__SCDynamicStore=}', '', {'retval': {'type': b'^{__CFString=}', 'already_cfretained': True}}), 'SCNetworkReachabilityCreateWithAddress': ('^{__SCNetworkReachability=}^{__CFAllocator=}^{sockaddr=CC[14c]}', '', {'retval': {'type': b'^{__SCNetworkReachability=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^{__CFAllocator=}'}, 1: {'type': b'^{sockaddr=CC[14c]}', 'type_modifier': b'n'}}}), 'SCNetworkSetRemove': ('Z^{__SCNetworkSet=}',), 'SCNetworkInterfaceSetConfiguration': ('Z^{__SCNetworkInterface=}^{__CFDictionary=}',), 'SCPreferencesSetLocalHostName': ('Z^{__SCPreferences=}^{__CFString=}',), 'SCNetworkInterfaceGetInterfaceType': ('^{__CFString=}^{__SCNetworkInterface=}',), 'SCPreferencesGetSignature': ('^{__CFData=}^{__SCPreferences=}',), 'SCNetworkConnectionStart': ('Z^{__SCNetworkConnection=}^{__CFDictionary=}Z',), 'SCNetworkInterfaceCopyMTU': ('Z^{__SCNetworkInterface=}^i^i^i', '', {'arguments': {0: {'type': b'^{__SCNetworkInterface=}'}, 1: {'type': b'^i', 'type_modifier': b'o'}, 2: {'type': b'^i', 'type_modifier': b'o'}, 3: {'type': b'^i', 'type_modifier': b'o'}}}), 'SCNetworkSetGetServiceOrder': ('^{__CFArray=}^{__SCNetworkSet=}',), 'SCDynamicStoreKeyCreateLocation': ('^{__CFString=}^{__CFAllocator=}', '', {'retval': {'type': b'^{__CFString=}', 'already_cfretained': True}}), 'SCBondInterfaceSetOptions': ('Z^{__SCNetworkInterface=}^{__CFDictionary=}',), 'SCDynamicStoreCreateRunLoopSource': ('^{__CFRunLoopSource=}^{__CFAllocator=}^{__SCDynamicStore=}l', '', {'retval': {'type': b'^{__CFRunLoopSource=}', 'already_cfretained': True}}), 'SCNetworkProtocolGetEnabled': ('Z^{__SCNetworkProtocol=}',), 'SCNetworkSetCreate': ('^{__SCNetworkSet=}^{__SCPreferences=}', '', {'retval': {'type': b'^{__SCNetworkSet=}', 'already_cfretained': True}}), 'SCDynamicStoreKeyCreateNetworkServiceEntity': ('^{__CFString=}^{__CFAllocator=}^{__CFString=}^{__CFString=}^{__CFString=}', '', {'retval': {'type': b'^{__CFString=}', 'already_cfretained': True}}), 'SCNetworkInterfaceGetSupportedProtocolTypes': ('^{__CFArray=}^{__SCNetworkInterface=}',), 'SCNetworkReachabilitySetCallback': (sel32or64('Z^{__SCNetworkReachability=}^?^{?=i^v^?^?^?}', 'Z^{__SCNetworkReachability=}^?^{?=q^v^?^?^?}'),), 'SCNetworkInterfaceGetSupportedInterfaceTypes': ('^{__CFArray=}^{__SCNetworkInterface=}',), 'SCPreferencesCopyKeyList': ('^{__CFArray=}^{__SCPreferences=}', '', {'retval': {'type': b'^{__CFArray=}', 'already_cfretained': True}}), 'SCNetworkReachabilityCreateWithAddressPair': ('^{__SCNetworkReachability=}^{__CFAllocator=}^{sockaddr=CC[14c]}^{sockaddr=CC[14c]}', '', {'retval': {'type': b'^{__SCNetworkReachability=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'^{__CFAllocator=}'}, 1: {'type': b'^{sockaddr=CC[14c]}', 'type_modifier': b'n'}, 2: {'type': b'^{sockaddr=CC[14c]}', 'type_modifier': b'n'}}}), 'SCNetworkInterfaceForceConfigurationRefresh': ('Z^{__SCNetworkInterface=}',), 'SCNetworkSetGetSetID': ('^{__CFString=}^{__SCNetworkSet=}',), 'SCNetworkInterfaceCopyMediaOptions': ('Z^{__SCNetworkInterface=}^^{__CFDictionary}^^{__CFDictionary}^^{__CFArray}Z', '', {'arguments': {0: {'type': b'^{__SCNetworkInterface=}'}, 1: {'type': b'^^{__CFDictionary}', 'type_modifier': b'o'}, 2: {'type': b'^^{__CFDictionary}', 'type_modifier': b'o'}, 3: {'type': b'^^{__CFArray}', 'type_modifier': b'o'}, 4: {'type': b'Z'}}}), 'SCPreferencesScheduleWithRunLoop': ('Z^{__SCPreferences=}^{__CFRunLoop=}^{__CFString=}',), 'SCVLANInterfaceGetOptions': ('^{__CFDictionary=}^{__SCNetworkInterface=}',), 'SCNetworkReachabilityGetFlags': ('Z^{__SCNetworkReachability=}^I', '', {'arguments': {0: {'type': b'^{__SCNetworkReachability=}'}, 1: {'type': b'^I', 'type_modifier': b'o'}}}), 'SCPreferencesPathSetValue': ('Z^{__SCPreferences=}^{__CFString=}^{__CFDictionary=}',), 'SCPreferencesUnlock': ('Z^{__SCPreferences=}',), 'SCError': ('i',)}
cftypes = []
cftypes.append(('SCBondStatusRef', '^{__SCBondStatus=}', 'SCBondStatusGetTypeID', None))
cftypes.append(('SCDynamicStoreRef', '^{__SCDynamicStore=}', 'SCDynamicStoreGetTypeID', None))
cftypes.append(('SCNetworkConnectionRef', '^{__SCNetworkConnection=}', 'SCNetworkConnectionGetTypeID', None))
cftypes.append(('SCNetworkInterfaceRef', '^{__SCNetworkInterface=}', 'SCNetworkInterfaceGetTypeID', None))
cftypes.append(('SCNetworkProtocolRef', '^{__SCNetworkProtocol=}', 'SCNetworkProtocolGetTypeID', None))
cftypes.append(('SCNetworkReachabilityRef', '^{__SCNetworkReachability=}', 'SCNetworkReachabilityGetTypeID', None))
cftypes.append(('SCNetworkServiceRef', '^{__SCNetworkService=}', 'SCNetworkServiceGetTypeID', None))
cftypes.append(('SCNetworkSetRef', '^{__SCNetworkSet=}', 'SCNetworkSetGetTypeID', None))
cftypes.append(('SCPreferencesRef', '^{__SCPreferences=}', 'SCPreferencesGetTypeID', None))
r = objc.registerMetaDataForSelector
objc._updatingMetadata(True)
try:
    pass
finally:
    objc._updatingMetadata(False)
