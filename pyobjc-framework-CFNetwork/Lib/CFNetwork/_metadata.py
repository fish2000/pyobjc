# Generated file, don't edit
# Source: BridgeSupport/CFNetwork.bridgesupport
# Last update: Sun Jul 31 21:24:59 2011

import objc, sys

if sys.maxint > 2 ** 32:
    def sel32or64(a, b): return b
else:
    def sel32or64(a, b): return a
if sys.byteorder == 'little':
    def littleOrBig(a, b): return a
else:
    def littleOrBig(a, b): return b

misc = {
}
constants = '''$kCFStreamPropertySSLPeerCertificates$kCFStreamPropertySSLPeerTrust$kCFNetworkProxiesSOCKSEnable$kCFNetworkProxiesSOCKSPort$kCFNetworkProxiesSOCKSProxy$kCFNetworkProxiesHTTPSEnable$kCFNetworkProxiesHTTPSPort$kCFNetworkProxiesHTTPSProxy$kCFNetworkProxiesRTSPEnable$kCFNetworkProxiesRTSPPort$kCFNetworkProxiesRTSPProxy$kCFNetworkProxiesFTPProxy$kCFNetworkProxiesFTPPort$kCFNetworkProxiesFTPPassive$kCFNetworkProxiesFTPEnable$kCFNetworkProxiesExcludeSimpleHostnames$kCFNetworkProxiesExceptionsList$kCFNetworkProxiesGopherEnable$kCFNetworkProxiesGopherPort$kCFNetworkProxiesGopherProxy$kCFProxyAutoConfigurationHTTPResponseKey$kCFProxyAutoConfigurationJavaScriptKey$kCFURLErrorFailingURLErrorKey$kCFURLErrorFailingURLStringErrorKey$kCFStreamErrorDomainMach@i$kCFStreamErrorDomainFTP@i$kCFStreamErrorDomainSOCKS@i$kCFStreamErrorDomainSSL@i$kCFStreamErrorDomainHTTP@i$kCFStreamErrorDomainNetDB@i$kCFStreamErrorDomainSystemConfiguration@i$kCFStreamErrorDomainNetServices@i$kCFProxyTypeKey$kCFProxyHostNameKey$kCFProxyPortNumberKey$kCFProxyAutoConfigurationURLKey$kCFProxyUsernameKey$kCFProxyTypeAutoConfigurationJavaScript$kCFNetworkProxiesProxyAutoConfigJavaScript$kCFNetworkProxiesProxyAutoDiscoveryEnable$kCFProxyPasswordKey$kCFProxyTypeNone$kCFProxyTypeHTTP$kCFProxyTypeHTTPS$kCFProxyTypeSOCKS$kCFProxyTypeFTP$kCFStreamNetworkServiceType$kCFStreamNetworkServiceTypeVoIP$kCFStreamNetworkServiceTypeVideo$kCFStreamNetworkServiceTypeBackground$kCFStreamNetworkServiceTypeVoice$kCFProxyTypeAutoConfigurationURL$kCFNetworkProxiesHTTPEnable$kCFNetworkProxiesHTTPPort$kCFNetworkProxiesHTTPProxy$kCFNetworkProxiesProxyAutoConfigEnable$kCFNetworkProxiesProxyAutoConfigURLString$kCFErrorDomainCFNetwork$kCFErrorDomainWinSock$kCFGetAddrInfoFailureKey$kCFSOCKSStatusCodeKey$kCFSOCKSVersionKey$kCFSOCKSNegotiationMethodKey$kCFDNSServiceFailureKey$kCFFTPStatusCodeKey$kCFStreamPropertyHTTPResponseHeader$kCFStreamPropertyHTTPFinalURL$kCFStreamPropertyHTTPFinalRequest$kCFStreamPropertyHTTPProxy$kCFStreamPropertyHTTPProxyHost$kCFStreamPropertyHTTPProxyPort$kCFStreamPropertyHTTPSProxyHost$kCFStreamPropertyHTTPSProxyPort$kCFHTTPAuthenticationUsername$kCFHTTPAuthenticationPassword$kCFHTTPAuthenticationAccountDomain$kCFStreamPropertyHTTPShouldAutoredirect$kCFStreamPropertyHTTPAttemptPersistentConnection$kCFStreamPropertyHTTPRequestBytesWrittenCount$kCFStreamPropertyFTPUserName$kCFStreamPropertyFTPPassword$kCFStreamPropertyFTPUsePassiveMode$kCFStreamPropertyFTPResourceSize$kCFStreamPropertyFTPFetchResourceInfo$kCFStreamPropertyFTPFileTransferOffset$kCFStreamPropertyFTPAttemptPersistentConnection$kCFStreamPropertyFTPProxy$kCFStreamPropertyFTPProxyHost$kCFStreamPropertyFTPProxyPort$kCFStreamPropertyFTPProxyUser$kCFStreamPropertyFTPProxyPassword$kCFHTTPVersion1_0$kCFHTTPVersion1_1$kCFHTTPAuthenticationSchemeBasic$kCFHTTPAuthenticationSchemeDigest$kCFHTTPAuthenticationSchemeNTLM$kCFHTTPAuthenticationSchemeNegotiate$kCFHTTPAuthenticationSchemeNegotiate2$kCFHTTPAuthenticationSchemeXMobileMeAuthToken$kCFHTTPAuthenticationSchemeKerberos$kCFFTPResourceMode$kCFFTPResourceName$kCFFTPResourceOwner$kCFFTPResourceGroup$kCFFTPResourceLink$kCFFTPResourceSize$kCFFTPResourceType$kCFFTPResourceModDate$kCFStreamPropertySOCKSPassword$kCFStreamPropertySOCKSProxy$kCFStreamPropertySOCKSProxyHost$kCFStreamPropertySOCKSProxyPort$kCFStreamPropertySOCKSUser$kCFStreamPropertySOCKSVersion$kCFStreamPropertyShouldCloseNativeSocket$kCFStreamPropertySocketSecurityLevel$kCFStreamSocketSOCKSVersion4$kCFStreamSocketSOCKSVersion5$kCFStreamSocketSecurityLevelNegotiatedSSL$kCFStreamSocketSecurityLevelNone$kCFStreamSocketSecurityLevelSSLv2$kCFStreamSocketSecurityLevelSSLv3$kCFStreamSocketSecurityLevelTLSv1$kCFStreamPropertySOCKSProxyHost$kCFStreamPropertySOCKSProxyPort$kCFStreamPropertySOCKSVersion$kCFStreamSocketSOCKSVersion4$kCFStreamSocketSOCKSVersion5$kCFStreamPropertySOCKSUser$kCFStreamPropertySOCKSPassword$kCFStreamPropertySocketSecurityLevel$kCFStreamSocketSecurityLevelNone$kCFStreamSocketSecurityLevelSSLv2$kCFStreamSocketSecurityLevelSSLv3$kCFStreamSocketSecurityLevelTLSv1$kCFStreamSocketSecurityLevelNegotiatedSSL$kCFStreamPropertyShouldCloseNativeSocket$kCFStreamPropertySocketRemoteHost$kCFStreamPropertySocketRemoteNetService$kCFStreamPropertySSLPeerCertificates$kCFStreamPropertySSLSettings$kCFStreamSSLLevel$kCFStreamSSLAllowsExpiredCertificates$kCFStreamSSLAllowsExpiredRoots$kCFStreamSSLAllowsAnyRoot$kCFStreamSSLValidatesCertificateChain$kCFStreamSSLPeerName$kCFStreamSSLCertificates$kCFStreamSSLIsServer$kCFStreamErrorDomainWinSock@i$kCFStreamPropertyProxyLocalBypass$'''
enums = '''$kCFErrorHTTPAuthenticationTypeUnsupported@300$kCFErrorHTTPBadCredentials@301$kCFErrorHTTPBadProxyCredentials@307$kCFErrorHTTPBadURL@305$kCFErrorHTTPConnectionLost@302$kCFErrorHTTPParseFailure@303$kCFErrorHTTPProxyConnectionFailure@306$kCFErrorHTTPRedirectionLoopDetected@304$kCFErrorPACFileError@308$kCFErrorPACFileAuth@309$kCFErrorHTTPSProxyConnectionFailure@310$kCFURLErrorUnknown@-998$kCFURLErrorCancelled@-999$kCFURLErrorBadURL@-1000$kCFURLErrorTimedOut@-1001$kCFURLErrorUnsupportedURL@-1002$kCFURLErrorCannotFindHost@-1003$kCFURLErrorCannotConnectToHost@-1004$kCFURLErrorNetworkConnectionLost@-1005$kCFURLErrorDNSLookupFailed@-1006$kCFURLErrorHTTPTooManyRedirects@-1007$kCFURLErrorResourceUnavailable@-1008$kCFURLErrorNotConnectedToInternet@-1009$kCFURLErrorRedirectToNonExistentLocation@-1010$kCFURLErrorBadServerResponse@-1011$kCFURLErrorUserCancelledAuthentication@-1012$kCFURLErrorUserAuthenticationRequired@-1013$kCFURLErrorZeroByteResource@-1014$kCFURLErrorCannotDecodeRawData@-1015$kCFURLErrorCannotDecodeContentData@-1016$kCFURLErrorCannotParseResponse@-1017$kCFURLErrorInternationalRoamingOff@-1018$kCFURLErrorCallIsActive@-1019$kCFURLErrorDataNotAllowed@-1020$kCFURLErrorRequestBodyStreamExhausted@-1021$kCFURLErrorFileDoesNotExist@-1100$kCFURLErrorFileIsDirectory@-1101$kCFURLErrorNoPermissionsToReadFile@-1102$kCFURLErrorDataLengthExceedsMaximum@-1103$kCFURLErrorSecureConnectionFailed@-1200$kCFURLErrorServerCertificateHasBadDate@-1201$kCFURLErrorServerCertificateUntrusted@-1202$kCFURLErrorServerCertificateHasUnknownRoot@-1203$kCFURLErrorServerCertificateNotYetValid@-1204$kCFURLErrorClientCertificateRejected@-1205$kCFURLErrorClientCertificateRequired@-1206$kCFURLErrorCannotLoadFromNetwork@-2000$kCFURLErrorCannotCreateFile@-3000$kCFURLErrorCannotOpenFile@-3001$kCFURLErrorCannotCloseFile@-3002$kCFURLErrorCannotWriteToFile@-3003$kCFURLErrorCannotRemoveFile@-3004$kCFURLErrorCannotMoveFile@-3005$kCFURLErrorDownloadDecodingFailedMidStream@-3006$kCFURLErrorDownloadDecodingFailedToComplete@-3007$kCFHTTPCookieCannotParseCookieFile@-4000$kCFFTPErrorUnexpectedStatusCode@200$kCFHostAddresses@0$kCFHostErrorHostNotFound@1$kCFHostErrorUnknown@2$kCFHostNames@1$kCFHostReachability@2$kCFNetDiagnosticConnectionDown@-66557$kCFNetDiagnosticConnectionIndeterminate@-66558$kCFNetDiagnosticConnectionUp@-66559$kCFNetDiagnosticErr@-66560$kCFNetDiagnosticNoErr@0$kCFNetServiceErrorBadArgument@-72004$kCFNetServiceErrorCancel@-72005$kCFNetServiceErrorCollision@-72001$kCFNetServiceErrorDNSServiceFailure@-73000$kCFNetServiceErrorInProgress@-72003$kCFNetServiceErrorInvalid@-72006$kCFNetServiceErrorNotFound@-72002$kCFNetServiceErrorTimeout@-72007$kCFNetServiceErrorUnknown@-72000$kCFNetServiceFlagIsDefault@4$kCFNetServiceFlagIsDomain@2$kCFNetServiceFlagIsRegistrationDomain@4$kCFNetServiceFlagMoreComing@1$kCFNetServiceFlagNoAutoRename@1$kCFNetServiceFlagRemove@8$kCFNetServiceMonitorTXT@1$kCFNetServicesErrorBadArgument@-72004$kCFNetServicesErrorCancel@-72005$kCFNetServicesErrorCollision@-72001$kCFNetServicesErrorInProgress@-72003$kCFNetServicesErrorInvalid@-72006$kCFNetServicesErrorNotFound@-72002$kCFNetServicesErrorTimeout@-72007$kCFNetServicesErrorUnknown@-72000$kCFSOCKS4ErrorIdConflict@112$kCFSOCKS4ErrorIdentdFailed@111$kCFSOCKS4ErrorRequestFailed@110$kCFSOCKS4ErrorUnknownStatusCode@113$kCFSOCKS5ErrorBadCredentials@122$kCFSOCKS5ErrorBadResponseAddr@121$kCFSOCKS5ErrorBadState@120$kCFSOCKS5ErrorNoAcceptableMethod@124$kCFSOCKS5ErrorUnsupportedNegotiationMethod@123$kCFSOCKSErrorUnknownClientVersion@100$kCFSOCKSErrorUnsupportedServerVersion@101$kCFStreamErrorHTTPAuthenticationBadPassword@-1002$kCFStreamErrorHTTPAuthenticationBadUserName@-1001$kCFStreamErrorHTTPAuthenticationTypeUnsupported@-1000$kCFStreamErrorHTTPBadURL@-3$kCFStreamErrorHTTPParseFailure@-1$kCFStreamErrorHTTPRedirectionLoop@-2$kCFStreamErrorSOCKS4IdConflict@93$kCFStreamErrorSOCKS4IdentdFailed@92$kCFStreamErrorSOCKS4RequestFailed@91$kCFStreamErrorSOCKS4SubDomainResponse@2$kCFStreamErrorSOCKS5BadResponseAddr@1$kCFStreamErrorSOCKS5BadState@2$kCFStreamErrorSOCKS5SubDomainMethod@4$kCFStreamErrorSOCKS5SubDomainResponse@5$kCFStreamErrorSOCKS5SubDomainUserPass@3$kCFStreamErrorSOCKSSubDomainNone@0$kCFStreamErrorSOCKSSubDomainVersionCode@1$kCFStreamErrorSOCKSUnknownClientVersion@3$kCFStreamSocketSecurityNone@0$kCFStreamSocketSecuritySSLv2@1$kCFStreamSocketSecuritySSLv23@3$kCFStreamSocketSecuritySSLv3@2$kCFStreamSocketSecurityTLSv1@4$kSOCKS5NoAcceptableMethod@255$'''
misc.update({})
functions = {'CFHTTPAuthenticationRequiresOrderedRequests': ('Z^{_CFHTTPAuthentication=}',), 'CFHTTPAuthenticationCreateFromResponse': ('^{_CFHTTPAuthentication=}^{__CFAllocator=}^{__CFHTTPMessage=}', '', {'retval': {'type': b'^{_CFHTTPAuthentication=}', 'already_cfretained': True}}), 'CFNetServiceBrowserGetTypeID': (sel32or64('L', 'Q'),), 'CFHostCreateWithName': ('^{__CFHost=}^{__CFAllocator=}@', '', {'retval': {'type': b'^{__CFHost=}', 'already_cfretained': True}}), 'CFSocketStreamPairSetSecurityProtocol': ('Z^{__CFReadStream=}^{__CFWriteStream=}i',), 'CFHostGetAddressing': ('^{__CFArray=}^{__CFHost=}o^Z',), 'CFHTTPMessageSetBody': ('v^{__CFHTTPMessage=}^{__CFData=}',), 'CFHTTPAuthenticationGetTypeID': (sel32or64('L', 'Q'),), 'CFNetDiagnosticCreateWithStreams': ('^{__CFNetDiagnostic=}^{__CFAllocator=}^{__CFReadStream=}^{__CFWriteStream=}', '', {'retval': {'type': b'^{__CFNetDiagnostic=}', 'already_cfretained': True}}), 'CFSocketStreamSOCKSGetError': (sel32or64('l^{_CFStreamError=ii}', 'i^{_CFStreamError=qi}'), '', {'arguments': {0: {'type': sel32or64(b'^{_CFStreamError=ii}', b'^{_CFStreamError=qi}'), 'type_modifier': b'o'}}}), 'CFHostCreateWithAddress': ('^{__CFHost=}^{__CFAllocator=}^{__CFData=}', '', {'retval': {'type': b'^{__CFHost=}', 'already_cfretained': True}}), 'CFNetServiceBrowserSearchForDomains': (sel32or64('Z^{__CFNetServiceBrowser=}Z^{_CFStreamError=ii}', 'Z^{__CFNetServiceBrowser=}Z^{_CFStreamError=qi}'), '', {'arguments': {0: {'type': b'^{__CFNetServiceBrowser=}'}, 1: {'type': b'Z'}, 2: {'type': sel32or64(b'^{_CFStreamError=ii}', b'^{_CFStreamError=qi}'), 'type_modifier': b'o'}}}), 'CFNetServiceUnscheduleFromRunLoop': ('v^{__CFNetService=}^{__CFRunLoop=}@',), 'CFNetServiceMonitorStop': (sel32or64('v^{__CFNetServiceMonitor=}^{_CFStreamError=ii}', 'v^{__CFNetServiceMonitor=}^{_CFStreamError=qi}'), '', {'arguments': {0: {'type': b'^{__CFNetServiceMonitor=}'}, 1: {'type': sel32or64(b'^{_CFStreamError=ii}', b'^{_CFStreamError=qi}'), 'type_modifier': b'o'}}}), 'CFNetworkCopySystemProxySettings': ('^{__CFDictionary=}', '', {'retval': {'type': b'^{__CFDictionary=}', 'already_cfretained': True}}), 'CFHostGetReachability': ('^{__CFData=}^{__CFHost=}o^Z',), 'CFHTTPMessageIsHeaderComplete': ('Z^{__CFHTTPMessage=}',), 'CFHTTPMessageGetTypeID': (sel32or64('L', 'Q'),), 'CFNetServiceMonitorGetTypeID': (sel32or64('L', 'Q'),), 'CFNetServiceGetPortNumber': (sel32or64('l^{__CFNetService=}', 'i^{__CFNetService=}'),), 'CFHTTPMessageCreateRequest': ('^{__CFHTTPMessage=}^{__CFAllocator=}@^{__CFURL=}@', '', {'retval': {'type': b'^{__CFHTTPMessage=}', 'already_cfretained': True}}), 'CFNetServiceCreateCopy': ('^{__CFNetService=}^{__CFAllocator=}^{__CFNetService=}', '', {'retval': {'type': b'^{__CFNetService=}', 'already_cfretained': True}}), 'CFNetServiceGetName': ('@^{__CFNetService=}',), 'CFHTTPMessageCopyRequestMethod': ('@^{__CFHTTPMessage=}', '', {'retval': {'type': b'@', 'already_cfretained': True}}), 'CFHTTPAuthenticationCopyRealm': ('@^{_CFHTTPAuthentication=}', '', {'retval': {'type': b'@', 'already_cfretained': True}}), 'CFNetServiceMonitorInvalidate': ('v^{__CFNetServiceMonitor=}',), 'CFNetServiceGetProtocolSpecificInformation': ('@^{__CFNetService=}',), 'CFNetServiceCancel': ('v^{__CFNetService=}',), 'CFNetServiceMonitorCreate': ('^{__CFNetServiceMonitor=}^{__CFAllocator=}^{__CFNetService=}^?^{CFNetServiceClientContext=l^v^?^?^?}', '', {'retval': {'type': b'^{__CFNetServiceMonitor=}', 'already_cfretained': True}}), 'CFWriteStreamCreateWithFTPURL': ('^{__CFWriteStream=}^{__CFAllocator=}^{__CFURL=}', '', {'retval': {'type': b'^{__CFWriteStream=}', 'already_cfretained': True}}), 'CFNetServiceBrowserUnscheduleFromRunLoop': ('v^{__CFNetServiceBrowser=}^{__CFRunLoop=}@',), 'CFHTTPMessageCopyRequestURL': ('^{__CFURL=}^{__CFHTTPMessage=}', '', {'retval': {'type': b'^{__CFURL=}', 'already_cfretained': True}}), 'CFHTTPMessageCopyVersion': ('@^{__CFHTTPMessage=}', '', {'retval': {'type': b'@', 'already_cfretained': True}}), 'CFNetServiceCreate': ('^{__CFNetService=}^{__CFAllocator=}@@@l', '', {'retval': {'type': b'^{__CFNetService=}', 'already_cfretained': True}}), 'CFNetServiceMonitorUnscheduleFromRunLoop': ('v^{__CFNetServiceMonitor=}^{__CFRunLoop=}@',), 'CFHostScheduleWithRunLoop': ('v^{__CFHost=}^{__CFRunLoop=}@',), 'CFNetServiceMonitorStart': (sel32or64('Z^{__CFNetServiceMonitor=}i^{_CFStreamError=ii}', 'Z^{__CFNetServiceMonitor=}i^{_CFStreamError=qi}'), '', {'arguments': {0: {'type': b'^{__CFNetServiceMonitor=}'}, 1: {'type': b'i'}, 2: {'type': sel32or64(b'^{_CFStreamError=ii}', b'^{_CFStreamError=qi}'), 'type_modifier': b'o'}}}), 'CFHostGetNames': ('^{__CFArray=}^{__CFHost=}o^Z',), 'CFNetDiagnosticCopyNetworkStatusPassively': ('l^{__CFNetDiagnostic=}^^{__CFString}', '', {'arguments': {0: {'type': b'^{__CFNetDiagnostic=}'}, 1: {'type': b'^^{__CFString}', 'type_modifier': b'o'}}}), 'CFHTTPMessageCopyResponseStatusLine': ('@^{__CFHTTPMessage=}', '', {'retval': {'type': b'@', 'already_cfretained': True}}), 'CFNetDiagnosticDiagnoseProblemInteractively': ('l^{__CFNetDiagnostic=}',), 'CFHTTPMessageAddAuthentication': ('Z^{__CFHTTPMessage=}^{__CFHTTPMessage=}@@@Z',), 'CFNetDiagnosticCreateWithURL': ('^{__CFNetDiagnostic=}^{__CFAllocator=}^{__CFURL=}', '', {'retval': {'type': b'^{__CFNetDiagnostic=}', 'already_cfretained': True}}), 'CFNetServiceGetDomain': ('@^{__CFNetService=}',), 'CFFTPCreateParsedResourceListing': (sel32or64('l^{__CFAllocator=}^vl^^{__CFDictionary}', 'q^{__CFAllocator=}^vl^^{__CFDictionary}'), '', {'arguments': {0: {'type': b'^{__CFAllocator=}'}, 1: {'type': b'^v', 'type_modifier': b'n', 'c_array_length_in_arg': 2}, 2: {'type': b'l'}, 3: {'type': b'^^{__CFDictionary}', 'type_modifier': b'o'}}}), 'CFNetServiceGetTypeID': (sel32or64('L', 'Q'),), 'CFHTTPMessageCreateEmpty': ('^{__CFHTTPMessage=}^{__CFAllocator=}Z', '', {'retval': {'type': b'^{__CFHTTPMessage=}', 'already_cfretained': True}}), 'CFHTTPMessageAppendBytes': ('Z^{__CFHTTPMessage=}^vl', '', {'arguments': {0: {'type': b'^{__CFHTTPMessage=}'}, 1: {'type': b'^v', 'type_modifier': b'n', 'c_array_length_in_arg': 2}, 2: {'type': b'l'}}}), 'CFHostCancelInfoResolution': ('v^{__CFHost=}i',), 'CFNetServiceBrowserSearchForServices': (sel32or64('Z^{__CFNetServiceBrowser=}@@^{_CFStreamError=ii}', 'Z^{__CFNetServiceBrowser=}@@^{_CFStreamError=qi}'), '', {'arguments': {0: {'type': b'^{__CFNetServiceBrowser=}'}, 1: {'type': b'@'}, 2: {'type': b'@'}, 3: {'type': sel32or64(b'^{_CFStreamError=ii}', b'^{_CFStreamError=qi}'), 'type_modifier': b'o'}}}), 'CFHTTPAuthenticationIsValid': (sel32or64('Z^{_CFHTTPAuthentication=}^{_CFStreamError=ii}', 'Z^{_CFHTTPAuthentication=}^{_CFStreamError=qi}'), '', {'arguments': {0: {'type': b'^{_CFHTTPAuthentication=}'}, 1: {'type': sel32or64(b'^{_CFStreamError=ii}', b'^{_CFStreamError=qi}'), 'type_modifier': b'o'}}}), 'CFHTTPReadStreamSetProxy': ('v^{__CFReadStream=}@l',), 'CFHTTPAuthenticationAppliesToRequest': ('Z^{_CFHTTPAuthentication=}^{__CFHTTPMessage=}',), 'CFNetServiceBrowserInvalidate': ('v^{__CFNetServiceBrowser=}',), 'CFNetServiceGetAddressing': ('^{__CFArray=}^{__CFNetService=}',), 'CFHTTPMessageSetHeaderFieldValue': ('v^{__CFHTTPMessage=}@@',), 'CFNetServiceBrowserStopSearch': (sel32or64('v^{__CFNetServiceBrowser=}^{_CFStreamError=ii}', 'v^{__CFNetServiceBrowser=}^{_CFStreamError=qi}'), '', {'arguments': {0: {'type': b'^{__CFNetServiceBrowser=}'}, 1: {'type': sel32or64(b'^{_CFStreamError=ii}', b'^{_CFStreamError=qi}'), 'type_modifier': b'o'}}}), 'CFHTTPMessageApplyCredentials': (sel32or64('Z^{__CFHTTPMessage=}^{_CFHTTPAuthentication=}@@^{_CFStreamError=ii}', 'Z^{__CFHTTPMessage=}^{_CFHTTPAuthentication=}@@^{_CFStreamError=qi}'), '', {'arguments': {0: {'type': b'^{__CFHTTPMessage=}'}, 1: {'type': b'^{_CFHTTPAuthentication=}'}, 2: {'type': b'@'}, 3: {'type': b'@'}, 4: {'type': sel32or64(b'^{_CFStreamError=ii}', b'^{_CFStreamError=qi}'), 'type_modifier': b'o'}}}), 'CFHTTPReadStreamSetRedirectsAutomatically': ('v^{__CFReadStream=}Z',), 'CFNetServiceRegisterWithOptions': (sel32or64('Z^{__CFNetService=}L^{_CFStreamError=ii}', 'Z^{__CFNetService=}L^{_CFStreamError=qi}'), '', {'arguments': {0: {'type': b'^{__CFNetService=}'}, 1: {'type': b'L'}, 2: {'type': sel32or64(b'^{_CFStreamError=ii}', b'^{_CFStreamError=qi}'), 'type_modifier': b'o'}}}), 'CFHTTPAuthenticationCopyMethod': ('@^{_CFHTTPAuthentication=}', '', {'retval': {'type': b'@', 'already_cfretained': True}}), 'CFNetServiceBrowserCreate': ('^{__CFNetServiceBrowser=}^{__CFAllocator=}^?^{CFNetServiceClientContext=l^v^?^?^?}', '', {'retval': {'type': b'^{__CFNetServiceBrowser=}', 'already_cfretained': True}}), 'CFNetServiceGetTargetHost': ('@^{__CFNetService=}',), 'CFNetworkCopyProxiesForAutoConfigurationScript': ('^{__CFArray=}@^{__CFURL=}^^{__CFError}', '', {'retval': {'type': b'^{__CFArray=}', 'already_cfretained': True}, 'arguments': {0: {'type': b'@'}, 1: {'type': b'^{__CFURL=}'}, 2: {'type': b'^^{__CFError}', 'type_modifier': b'o'}}}), 'CFNetServiceCreateDictionaryWithTXTData': ('^{__CFDictionary=}^{__CFAllocator=}^{__CFData=}', '', {'retval': {'type': b'^{__CFDictionary=}', 'already_cfretained': True}}), 'CFNetServiceRegister': (sel32or64('Z^{__CFNetService=}^{_CFStreamError=ii}', 'Z^{__CFNetService=}^{_CFStreamError=qi}'), '', {'arguments': {0: {'type': b'^{__CFNetService=}'}, 1: {'type': sel32or64(b'^{_CFStreamError=ii}', b'^{_CFStreamError=qi}'), 'type_modifier': b'o'}}}), 'CFHTTPMessageCopySerializedMessage': ('^{__CFData=}^{__CFHTTPMessage=}', '', {'retval': {'type': b'^{__CFData=}', 'already_cfretained': True}}), 'CFHostCreateCopy': ('^{__CFHost=}^{__CFAllocator=}^{__CFHost=}', '', {'retval': {'type': b'^{__CFHost=}', 'already_cfretained': True}}), 'CFHTTPAuthenticationRequiresAccountDomain': ('Z^{_CFHTTPAuthentication=}',), 'CFNetServiceSetTXTData': ('Z^{__CFNetService=}^{__CFData=}',), 'CFNetworkCopyProxiesForURL': ('^{__CFArray=}^{__CFURL=}^{__CFDictionary=}', '', {'retval': {'type': b'^{__CFArray=}', 'already_cfretained': True}}), 'CFReadStreamCreateForStreamedHTTPRequest': ('^{__CFReadStream=}^{__CFAllocator=}^{__CFHTTPMessage=}^{__CFReadStream=}', '', {'retval': {'type': b'^{__CFReadStream=}', 'already_cfretained': True}}), 'CFReadStreamCreateForHTTPRequest': ('^{__CFReadStream=}^{__CFAllocator=}^{__CFHTTPMessage=}', '', {'retval': {'type': b'^{__CFReadStream=}', 'already_cfretained': True}}), 'CFHTTPMessageCreateCopy': ('^{__CFHTTPMessage=}^{__CFAllocator=}^{__CFHTTPMessage=}', '', {'retval': {'type': b'^{__CFHTTPMessage=}', 'already_cfretained': True}}), 'CFNetServiceGetType': ('@^{__CFNetService=}',), 'CFNetServiceScheduleWithRunLoop': ('v^{__CFNetService=}^{__CFRunLoop=}@',), 'CFHTTPMessageCopyHeaderFieldValue': ('@^{__CFHTTPMessage=}@', '', {'retval': {'type': b'@', 'already_cfretained': True}}), 'CFNetServiceGetTXTData': ('^{__CFData=}^{__CFNetService=}',), 'CFHostStartInfoResolution': (sel32or64('Z^{__CFHost=}i^{_CFStreamError=ii}', 'Z^{__CFHost=}i^{_CFStreamError=qi}'), '', {'arguments': {0: {'type': b'^{__CFHost=}'}, 1: {'type': b'i'}, 2: {'type': sel32or64(b'^{_CFStreamError=ii}', b'^{_CFStreamError=qi}'), 'type_modifier': b'o'}}}), 'CFHTTPAuthenticationRequiresUserNameAndPassword': ('Z^{_CFHTTPAuthentication=}',), 'CFNetDiagnosticSetName': ('v^{__CFNetDiagnostic=}@',), 'CFNetServiceCreateTXTDataWithDictionary': ('^{__CFData=}^{__CFAllocator=}^{__CFDictionary=}', '', {'retval': {'type': b'^{__CFData=}', 'already_cfretained': True}}), 'CFReadStreamCreateWithFTPURL': ('^{__CFReadStream=}^{__CFAllocator=}^{__CFURL=}', '', {'retval': {'type': b'^{__CFReadStream=}', 'already_cfretained': True}}), 'CFNetServiceSetClient': ('Z^{__CFNetService=}^?^{CFNetServiceClientContext=l^v^?^?^?}',), 'CFNetServiceMonitorScheduleWithRunLoop': ('v^{__CFNetServiceMonitor=}^{__CFRunLoop=}@',), 'CFHostUnscheduleFromRunLoop': ('v^{__CFHost=}^{__CFRunLoop=}@',), 'CFHTTPMessageApplyCredentialDictionary': (sel32or64('Z^{__CFHTTPMessage=}^{_CFHTTPAuthentication=}^{__CFDictionary=}^{_CFStreamError=ii}', 'Z^{__CFHTTPMessage=}^{_CFHTTPAuthentication=}^{__CFDictionary=}^{_CFStreamError=qi}'), '', {'arguments': {0: {'type': b'^{__CFHTTPMessage=}'}, 1: {'type': b'^{_CFHTTPAuthentication=}'}, 2: {'type': b'^{__CFDictionary=}'}, 3: {'type': sel32or64(b'^{_CFStreamError=ii}', b'^{_CFStreamError=qi}'), 'type_modifier': b'o'}}}), 'CFHTTPMessageIsRequest': ('Z^{__CFHTTPMessage=}',), 'CFNetServiceResolve': (sel32or64('Z^{__CFNetService=}^{_CFStreamError=ii}', 'Z^{__CFNetService=}^{_CFStreamError=qi}'), '', {'arguments': {0: {'type': b'^{__CFNetService=}'}, 1: {'type': sel32or64(b'^{_CFStreamError=ii}', b'^{_CFStreamError=qi}'), 'type_modifier': b'o'}}}), 'CFHTTPMessageCopyBody': ('^{__CFData=}^{__CFHTTPMessage=}', '', {'retval': {'type': b'^{__CFData=}', 'already_cfretained': True}}), 'CFNetServiceBrowserScheduleWithRunLoop': ('v^{__CFNetServiceBrowser=}^{__CFRunLoop=}@',), 'CFHTTPMessageCreateResponse': ('^{__CFHTTPMessage=}^{__CFAllocator=}l@@', '', {'retval': {'type': b'^{__CFHTTPMessage=}', 'already_cfretained': True}}), 'CFHostGetTypeID': (sel32or64('L', 'Q'),), 'CFHTTPMessageCopyAllHeaderFields': ('^{__CFDictionary=}^{__CFHTTPMessage=}', '', {'retval': {'type': b'^{__CFDictionary=}', 'already_cfretained': True}}), 'CFHTTPMessageGetResponseStatusCode': (sel32or64('l^{__CFHTTPMessage=}', 'q^{__CFHTTPMessage=}'),), 'CFHTTPAuthenticationCopyDomains': ('^{__CFArray=}^{_CFHTTPAuthentication=}', '', {'retval': {'type': b'^{__CFArray=}', 'already_cfretained': True}}), 'CFNetServiceSetProtocolSpecificInformation': ('v^{__CFNetService=}@',), 'CFSocketStreamSOCKSGetErrorSubdomain': (sel32or64('l^{_CFStreamError=ii}', 'i^{_CFStreamError=qi}'), '', {'arguments': {0: {'type': sel32or64(b'^{_CFStreamError=ii}', b'^{_CFStreamError=qi}'), 'type_modifier': b'o'}}}), 'CFStreamCreatePairWithSocketToCFHost': ('v^{__CFAllocator=}^{__CFHost=}l^^{__CFReadStream}^^{__CFWriteStream}', '', {'arguments': {0: {'type': b'^{__CFAllocator=}'}, 1: {'type': b'^{__CFHost=}'}, 2: {'type': b'l'}, 3: {'type': b'^^{__CFReadStream}', 'type_modifier': b'o', 'already_cfretained': True}, 4: {'type': b'^^{__CFWriteStream}', 'type_modifier': b'o', 'already_cfretained': True}}}), 'CFStreamCreatePairWithSocketToNetService': ('v^{__CFAllocator=}^{__CFNetService=}^^{__CFReadStream}^^{__CFWriteStream}', '', {'arguments': {0: {'type': b'^{__CFAllocator=}'}, 1: {'type': b'^{__CFNetService=}'}, 2: {'type': b'^^{__CFReadStream}', 'type_modifier': b'o', 'already_cfretained': True}, 3: {'type': b'^^{__CFWriteStream}', 'type_modifier': b'o', 'already_cfretained': True}}}), 'CFNetServiceResolveWithTimeout': (sel32or64('Z^{__CFNetService=}d^{_CFStreamError=ii}', 'Z^{__CFNetService=}d^{_CFStreamError=qi}'), '', {'arguments': {0: {'type': b'^{__CFNetService=}'}, 1: {'type': b'd'}, 2: {'type': sel32or64(b'^{_CFStreamError=ii}', b'^{_CFStreamError=qi}'), 'type_modifier': b'o'}}}), 'CFHostSetClient': ('Z^{__CFHost=}^?^{CFHostClientContext=l^v^?^?^?}',)}
cftypes = []
cftypes.append(('CFHTTPAuthenticationRef', '^{_CFHTTPAuthentication=}', 'CFHTTPAuthenticationGetTypeID', None))
cftypes.append(('CFHTTPMessageRef', '^{__CFHTTPMessage=}', 'CFHTTPMessageGetTypeID', None))
cftypes.append(('CFHostRef', '^{__CFHost=}', 'CFHostGetTypeID', None))
cftypes.append(('CFNetDiagnosticRef', '^{__CFNetDiagnostic=}', 'CFNetDiagnosticGetTypeID', None))
cftypes.append(('CFNetServiceBrowserRef', '^{__CFNetServiceBrowser=}', 'CFNetServiceBrowserGetTypeID', None))
cftypes.append(('CFNetServiceMonitorRef', '^{__CFNetServiceMonitor=}', 'CFNetServiceMonitorGetTypeID', None))
cftypes.append(('CFNetServiceRef', '^{__CFNetService=}', 'CFNetServiceGetTypeID', None))
r = objc.registerMetaDataForSelector
objc._updatingMetadata(True)
try:
    pass
finally:
    objc._updatingMetadata(False)
