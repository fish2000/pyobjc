# This file is generated by objective.metadata
#
# Last update: Thu Feb  9 17:23:14 2012

import objc, sys

if sys.maxint > 2 ** 32:
    def sel32or64(a, b): return b
else:
    def sel32or64(a, b): return a
if sys.byteorder == 'little':
    def littleOrBig(a, b): return a
else:
    def littleOrBig(a, b): return b

misc = {
}
constants = '''$kCFDNSServiceFailureKey@^{__CFString=}$kCFErrorDomainCFNetwork@^{__CFString=}$kCFErrorDomainWinSock@^{__CFString=}$kCFFTPResourceGroup@^{__CFString=}$kCFFTPResourceLink@^{__CFString=}$kCFFTPResourceModDate@^{__CFString=}$kCFFTPResourceMode@^{__CFString=}$kCFFTPResourceName@^{__CFString=}$kCFFTPResourceOwner@^{__CFString=}$kCFFTPResourceSize@^{__CFString=}$kCFFTPResourceType@^{__CFString=}$kCFFTPStatusCodeKey@^{__CFString=}$kCFGetAddrInfoFailureKey@^{__CFString=}$kCFHTTPAuthenticationAccountDomain@^{__CFString=}$kCFHTTPAuthenticationPassword@^{__CFString=}$kCFHTTPAuthenticationSchemeBasic@^{__CFString=}$kCFHTTPAuthenticationSchemeDigest@^{__CFString=}$kCFHTTPAuthenticationSchemeKerberos@^{__CFString=}$kCFHTTPAuthenticationSchemeNTLM@^{__CFString=}$kCFHTTPAuthenticationSchemeNegotiate@^{__CFString=}$kCFHTTPAuthenticationSchemeNegotiate2@^{__CFString=}$kCFHTTPAuthenticationSchemeXMobileMeAuthToken@^{__CFString=}$kCFHTTPAuthenticationUsername@^{__CFString=}$kCFHTTPVersion1_0@^{__CFString=}$kCFHTTPVersion1_1@^{__CFString=}$kCFNetworkProxiesExceptionsList@^{__CFString=}$kCFNetworkProxiesExcludeSimpleHostnames@^{__CFString=}$kCFNetworkProxiesFTPEnable@^{__CFString=}$kCFNetworkProxiesFTPPassive@^{__CFString=}$kCFNetworkProxiesFTPPort@^{__CFString=}$kCFNetworkProxiesFTPProxy@^{__CFString=}$kCFNetworkProxiesGopherEnable@^{__CFString=}$kCFNetworkProxiesGopherPort@^{__CFString=}$kCFNetworkProxiesGopherProxy@^{__CFString=}$kCFNetworkProxiesHTTPEnable@^{__CFString=}$kCFNetworkProxiesHTTPPort@^{__CFString=}$kCFNetworkProxiesHTTPProxy@^{__CFString=}$kCFNetworkProxiesHTTPSEnable@^{__CFString=}$kCFNetworkProxiesHTTPSPort@^{__CFString=}$kCFNetworkProxiesHTTPSProxy@^{__CFString=}$kCFNetworkProxiesProxyAutoConfigEnable@^{__CFString=}$kCFNetworkProxiesProxyAutoConfigJavaScript@^{__CFString=}$kCFNetworkProxiesProxyAutoConfigURLString@^{__CFString=}$kCFNetworkProxiesProxyAutoDiscoveryEnable@^{__CFString=}$kCFNetworkProxiesRTSPEnable@^{__CFString=}$kCFNetworkProxiesRTSPPort@^{__CFString=}$kCFNetworkProxiesRTSPProxy@^{__CFString=}$kCFNetworkProxiesSOCKSEnable@^{__CFString=}$kCFNetworkProxiesSOCKSPort@^{__CFString=}$kCFNetworkProxiesSOCKSProxy@^{__CFString=}$kCFProxyAutoConfigurationHTTPResponseKey@^{__CFString=}$kCFProxyAutoConfigurationJavaScriptKey@^{__CFString=}$kCFProxyAutoConfigurationURLKey@^{__CFString=}$kCFProxyHostNameKey@^{__CFString=}$kCFProxyPasswordKey@^{__CFString=}$kCFProxyPortNumberKey@^{__CFString=}$kCFProxyTypeAutoConfigurationJavaScript@^{__CFString=}$kCFProxyTypeAutoConfigurationURL@^{__CFString=}$kCFProxyTypeFTP@^{__CFString=}$kCFProxyTypeHTTP@^{__CFString=}$kCFProxyTypeHTTPS@^{__CFString=}$kCFProxyTypeKey@^{__CFString=}$kCFProxyTypeNone@^{__CFString=}$kCFProxyTypeSOCKS@^{__CFString=}$kCFProxyUsernameKey@^{__CFString=}$kCFSOCKSNegotiationMethodKey@^{__CFString=}$kCFSOCKSStatusCodeKey@^{__CFString=}$kCFSOCKSVersionKey@^{__CFString=}$kCFStreamErrorDomainFTP@sel32or64('l', 'i')$kCFStreamErrorDomainHTTP@sel32or64('l', 'i')$kCFStreamErrorDomainMach@sel32or64('l', 'i')$kCFStreamErrorDomainNetDB@sel32or64('l', 'i')$kCFStreamErrorDomainNetServices@sel32or64('l', 'i')$kCFStreamErrorDomainSOCKS@i$kCFStreamErrorDomainSSL@i$kCFStreamErrorDomainSystemConfiguration@sel32or64('l', 'i')$kCFStreamErrorDomainWinSock@l$kCFStreamNetworkServiceType@^{__CFString=}$kCFStreamNetworkServiceTypeBackground@^{__CFString=}$kCFStreamNetworkServiceTypeVideo@^{__CFString=}$kCFStreamNetworkServiceTypeVoIP@^{__CFString=}$kCFStreamNetworkServiceTypeVoice@^{__CFString=}$kCFStreamPropertyFTPAttemptPersistentConnection@^{__CFString=}$kCFStreamPropertyFTPFetchResourceInfo@^{__CFString=}$kCFStreamPropertyFTPFileTransferOffset@^{__CFString=}$kCFStreamPropertyFTPPassword@^{__CFString=}$kCFStreamPropertyFTPProxy@^{__CFString=}$kCFStreamPropertyFTPProxyHost@^{__CFString=}$kCFStreamPropertyFTPProxyPassword@^{__CFString=}$kCFStreamPropertyFTPProxyPort@^{__CFString=}$kCFStreamPropertyFTPProxyUser@^{__CFString=}$kCFStreamPropertyFTPResourceSize@^{__CFString=}$kCFStreamPropertyFTPUsePassiveMode@^{__CFString=}$kCFStreamPropertyFTPUserName@^{__CFString=}$kCFStreamPropertyHTTPAttemptPersistentConnection@^{__CFString=}$kCFStreamPropertyHTTPFinalRequest@^{__CFString=}$kCFStreamPropertyHTTPFinalURL@^{__CFString=}$kCFStreamPropertyHTTPProxy@^{__CFString=}$kCFStreamPropertyHTTPProxyHost@^{__CFString=}$kCFStreamPropertyHTTPProxyPort@^{__CFString=}$kCFStreamPropertyHTTPRequestBytesWrittenCount@^{__CFString=}$kCFStreamPropertyHTTPResponseHeader@^{__CFString=}$kCFStreamPropertyHTTPSProxyHost@^{__CFString=}$kCFStreamPropertyHTTPSProxyPort@^{__CFString=}$kCFStreamPropertyHTTPShouldAutoredirect@^{__CFString=}$kCFStreamPropertyProxyLocalBypass@^{__CFString=}$kCFStreamPropertySOCKSPassword@^{__CFString=}$kCFStreamPropertySOCKSProxy@^{__CFString=}$kCFStreamPropertySOCKSProxyHost@^{__CFString=}$kCFStreamPropertySOCKSProxyPort@^{__CFString=}$kCFStreamPropertySOCKSUser@^{__CFString=}$kCFStreamPropertySOCKSVersion@^{__CFString=}$kCFStreamPropertySSLPeerCertificates@^{__CFString=}$kCFStreamPropertySSLPeerTrust@^{__CFString=}$kCFStreamPropertySSLSettings@^{__CFString=}$kCFStreamPropertyShouldCloseNativeSocket@^{__CFString=}$kCFStreamPropertySocketRemoteHost@^{__CFString=}$kCFStreamPropertySocketRemoteNetService@^{__CFString=}$kCFStreamPropertySocketSecurityLevel@^{__CFString=}$kCFStreamSSLAllowsAnyRoot@^{__CFString=}$kCFStreamSSLAllowsExpiredCertificates@^{__CFString=}$kCFStreamSSLAllowsExpiredRoots@^{__CFString=}$kCFStreamSSLCertificates@^{__CFString=}$kCFStreamSSLIsServer@^{__CFString=}$kCFStreamSSLLevel@^{__CFString=}$kCFStreamSSLPeerName@^{__CFString=}$kCFStreamSSLValidatesCertificateChain@^{__CFString=}$kCFStreamSocketSOCKSVersion4@^{__CFString=}$kCFStreamSocketSOCKSVersion5@^{__CFString=}$kCFStreamSocketSecurityLevelNegotiatedSSL@^{__CFString=}$kCFStreamSocketSecurityLevelNone@^{__CFString=}$kCFStreamSocketSecurityLevelSSLv2@^{__CFString=}$kCFStreamSocketSecurityLevelSSLv3@^{__CFString=}$kCFStreamSocketSecurityLevelTLSv1@^{__CFString=}$kCFURLErrorFailingURLErrorKey@^{__CFString=}$kCFURLErrorFailingURLStringErrorKey@^{__CFString=}$'''
enums = '''$kCFErrorHTTPAuthenticationTypeUnsupported@300$kCFErrorHTTPBadCredentials@301$kCFErrorHTTPBadProxyCredentials@307$kCFErrorHTTPBadURL@305$kCFErrorHTTPConnectionLost@302$kCFErrorHTTPParseFailure@303$kCFErrorHTTPProxyConnectionFailure@306$kCFErrorHTTPRedirectionLoopDetected@304$kCFErrorHTTPSProxyConnectionFailure@310$kCFErrorPACFileAuth@309$kCFErrorPACFileError@308$kCFFTPErrorUnexpectedStatusCode@200$kCFHTTPCookieCannotParseCookieFile@-4000$kCFHostAddresses@0$kCFHostErrorHostNotFound@1$kCFHostErrorUnknown@2$kCFHostNames@1$kCFHostReachability@2$kCFNetDiagnosticConnectionDown@-66557$kCFNetDiagnosticConnectionIndeterminate@-66558$kCFNetDiagnosticConnectionUp@-66559$kCFNetDiagnosticErr@-66560$kCFNetDiagnosticNoErr@0$kCFNetServiceErrorBadArgument@-72004$kCFNetServiceErrorCancel@-72005$kCFNetServiceErrorCollision@-72001$kCFNetServiceErrorDNSServiceFailure@-73000$kCFNetServiceErrorInProgress@-72003$kCFNetServiceErrorInvalid@-72006$kCFNetServiceErrorNotFound@-72002$kCFNetServiceErrorTimeout@-72007$kCFNetServiceErrorUnknown@-72000$kCFNetServiceFlagIsDefault@4$kCFNetServiceFlagIsDomain@2$kCFNetServiceFlagIsRegistrationDomain@4$kCFNetServiceFlagMoreComing@1$kCFNetServiceFlagNoAutoRename@1$kCFNetServiceFlagRemove@8$kCFNetServiceMonitorTXT@1$kCFNetServicesErrorBadArgument@-72004$kCFNetServicesErrorCancel@-72005$kCFNetServicesErrorCollision@-72001$kCFNetServicesErrorInProgress@-72003$kCFNetServicesErrorInvalid@-72006$kCFNetServicesErrorNotFound@-72002$kCFNetServicesErrorTimeout@-72007$kCFNetServicesErrorUnknown@-72000$kCFSOCKS4ErrorIdConflict@112$kCFSOCKS4ErrorIdentdFailed@111$kCFSOCKS4ErrorRequestFailed@110$kCFSOCKS4ErrorUnknownStatusCode@113$kCFSOCKS5ErrorBadCredentials@122$kCFSOCKS5ErrorBadResponseAddr@121$kCFSOCKS5ErrorBadState@120$kCFSOCKS5ErrorNoAcceptableMethod@124$kCFSOCKS5ErrorUnsupportedNegotiationMethod@123$kCFSOCKSErrorUnknownClientVersion@100$kCFSOCKSErrorUnsupportedServerVersion@101$kCFStreamErrorHTTPAuthenticationBadPassword@-1002$kCFStreamErrorHTTPAuthenticationBadUserName@-1001$kCFStreamErrorHTTPAuthenticationTypeUnsupported@-1000$kCFStreamErrorHTTPBadURL@-3$kCFStreamErrorHTTPParseFailure@-1$kCFStreamErrorHTTPRedirectionLoop@-2$kCFStreamErrorSOCKS4IdConflict@93$kCFStreamErrorSOCKS4IdentdFailed@92$kCFStreamErrorSOCKS4RequestFailed@91$kCFStreamErrorSOCKS4SubDomainResponse@2$kCFStreamErrorSOCKS5BadResponseAddr@1$kCFStreamErrorSOCKS5BadState@2$kCFStreamErrorSOCKS5SubDomainMethod@4$kCFStreamErrorSOCKS5SubDomainResponse@5$kCFStreamErrorSOCKS5SubDomainUserPass@3$kCFStreamErrorSOCKSSubDomainNone@0$kCFStreamErrorSOCKSSubDomainVersionCode@1$kCFStreamErrorSOCKSUnknownClientVersion@3$kCFStreamSocketSecurityNone@0$kCFStreamSocketSecuritySSLv2@1$kCFStreamSocketSecuritySSLv23@3$kCFStreamSocketSecuritySSLv3@2$kCFStreamSocketSecurityTLSv1@4$kCFURLErrorBadServerResponse@-1011$kCFURLErrorBadURL@-1000$kCFURLErrorCallIsActive@-1019$kCFURLErrorCancelled@-999$kCFURLErrorCannotCloseFile@-3002$kCFURLErrorCannotConnectToHost@-1004$kCFURLErrorCannotCreateFile@-3000$kCFURLErrorCannotDecodeContentData@-1016$kCFURLErrorCannotDecodeRawData@-1015$kCFURLErrorCannotFindHost@-1003$kCFURLErrorCannotLoadFromNetwork@-2000$kCFURLErrorCannotMoveFile@-3005$kCFURLErrorCannotOpenFile@-3001$kCFURLErrorCannotParseResponse@-1017$kCFURLErrorCannotRemoveFile@-3004$kCFURLErrorCannotWriteToFile@-3003$kCFURLErrorClientCertificateRejected@-1205$kCFURLErrorClientCertificateRequired@-1206$kCFURLErrorDNSLookupFailed@-1006$kCFURLErrorDataLengthExceedsMaximum@-1103$kCFURLErrorDataNotAllowed@-1020$kCFURLErrorDownloadDecodingFailedMidStream@-3006$kCFURLErrorDownloadDecodingFailedToComplete@-3007$kCFURLErrorFileDoesNotExist@-1100$kCFURLErrorFileIsDirectory@-1101$kCFURLErrorHTTPTooManyRedirects@-1007$kCFURLErrorInternationalRoamingOff@-1018$kCFURLErrorNetworkConnectionLost@-1005$kCFURLErrorNoPermissionsToReadFile@-1102$kCFURLErrorNotConnectedToInternet@-1009$kCFURLErrorRedirectToNonExistentLocation@-1010$kCFURLErrorRequestBodyStreamExhausted@-1021$kCFURLErrorResourceUnavailable@-1008$kCFURLErrorSecureConnectionFailed@-1200$kCFURLErrorServerCertificateHasBadDate@-1201$kCFURLErrorServerCertificateHasUnknownRoot@-1203$kCFURLErrorServerCertificateNotYetValid@-1204$kCFURLErrorServerCertificateUntrusted@-1202$kCFURLErrorTimedOut@-1001$kCFURLErrorUnknown@-998$kCFURLErrorUnsupportedURL@-1002$kCFURLErrorUserAuthenticationRequired@-1013$kCFURLErrorUserCancelledAuthentication@-1012$kCFURLErrorZeroByteResource@-1014$kSOCKS5NoAcceptableMethod@255$'''
misc.update({})
functions={'CFNetworkExecuteProxyAutoConfigurationURL': (b'^{__CFRunLoopSource=}^{__CFURL=}^{__CFURL=}^?^{CFStreamClientContext=l^v^?^?^?}', '', {'arguments': {2: {'function': {'args': [{'typestr': [u'^v', False]}, {'typestr': [u'^{__CFArray=}', False]}, {'typestr': [u'^{__CFError=}', False]}], 'retval': {'typestr': [u'v', False]}}}}}), 'CFNetServiceCreateCopy': (b'^{__CFNetService=}^{__CFAllocator=}^{__CFNetService=}', '', {'retval': {'already_cfretained': True}}), 'CFNetServiceBrowserGetTypeID': (b'L',), 'CFHostCreateWithName': (b'^{__CFHost=}^{__CFAllocator=}@', '', {'retval': {'already_cfretained': True}}), 'CFSocketStreamPairSetSecurityProtocol': (b'Z^{__CFReadStream=}^{__CFWriteStream=}i',), 'CFHostGetAddressing': (b'^{__CFArray=}^{__CFHost=}o^Z',), 'CFHTTPMessageSetBody': (b'v^{__CFHTTPMessage=}^{__CFData=}',), 'CFHTTPAuthenticationGetTypeID': (b'L',), 'CFNetDiagnosticCreateWithStreams': (b'^{__CFNetDiagnostic=}^{__CFAllocator=}^{__CFReadStream=}^{__CFWriteStream=}', '', {'retval': {'already_cfretained': True}}), 'CFSocketStreamSOCKSGetError': (sel32or64(b'l^{_CFStreamError=ii}', b'i^{_CFStreamError=qi}'), '', {'arguments': {0: {'type_modifier': 'o'}}}), 'CFHostCreateWithAddress': (b'^{__CFHost=}^{__CFAllocator=}^{__CFData=}', '', {'retval': {'already_cfretained': True}}), 'CFNetServiceBrowserSearchForDomains': (sel32or64(b'Z^{__CFNetServiceBrowser=}Z^{_CFStreamError=ii}', b'Z^{__CFNetServiceBrowser=}Z^{_CFStreamError=qi}'), '', {'arguments': {2: {'type_modifier': 'o'}}}), 'CFNetServiceUnscheduleFromRunLoop': (b'v^{__CFNetService=}^{__CFRunLoop=}@',), 'CFNetServiceMonitorStop': (sel32or64(b'v^{__CFNetServiceMonitor=}^{_CFStreamError=ii}', b'v^{__CFNetServiceMonitor=}^{_CFStreamError=qi}'), '', {'arguments': {1: {'type_modifier': 'o'}}}), 'CFNetworkCopySystemProxySettings': (b'^{__CFDictionary}', '', {'retval': {'already_cfretained': True}}), 'CFHostGetReachability': (b'^{__CFData=}^{__CFHost=}o^Z',), 'CFHTTPMessageIsHeaderComplete': (b'Z^{__CFHTTPMessage=}',), 'CFHTTPMessageGetTypeID': (b'L',), 'CFNetServiceMonitorGetTypeID': (b'L',), 'CFNetServiceGetPortNumber': (sel32or64(b'l^{__CFNetService=}', b'i^{__CFNetService=}'),), 'CFHTTPAuthenticationRequiresOrderedRequests': (b'Z^{_CFHTTPAuthentication=}',), 'CFHTTPAuthenticationCreateFromResponse': (b'^{_CFHTTPAuthentication=}^{__CFAllocator=}^{__CFHTTPMessage=}', '', {'retval': {'already_cfretained': True}}), 'CFNetServiceGetName': (b'@^{__CFNetService=}',), 'CFHTTPMessageCopyRequestMethod': (b'@^{__CFHTTPMessage=}', '', {'retval': {'already_cfretained': True}}), 'CFHTTPAuthenticationCopyRealm': (b'@^{_CFHTTPAuthentication=}', '', {'retval': {'already_cfretained': True}}), 'CFNetServiceMonitorInvalidate': (b'v^{__CFNetServiceMonitor=}',), 'CFNetServiceGetProtocolSpecificInformation': (b'@^{__CFNetService=}',), 'CFNetServiceCancel': (b'v^{__CFNetService=}',), 'CFNetServiceMonitorCreate': (b'^{__CFNetServiceMonitor=}^{__CFAllocator=}^{__CFNetService=}^?^{CFNetServiceClientContext=l^v^?^?^?}', '', {'retval': {'already_cfretained': True}, 'arguments': {2: {'function': {'args': [{'typestr': [u'^{__CFNetServiceMonitor=}', False]}, {'typestr': [u'^{__CFNetService=}', False]}, {'typestr': [u'i', False]}, {'typestr': [u'^{__CFData=}', False]}, {'typestr': [u'^{CFStreamError=li}', True]}, {'typestr': [u'^v', False]}], 'retval': {'typestr': [u'v', False]}}}}}), 'CFWriteStreamCreateWithFTPURL': (b'^{__CFWriteStream=}^{__CFAllocator=}^{__CFURL=}', '', {'retval': {'already_cfretained': True}}), 'CFNetServiceBrowserUnscheduleFromRunLoop': (b'v^{__CFNetServiceBrowser=}^{__CFRunLoop=}@',), 'CFHTTPMessageCopyRequestURL': (b'^{__CFURL=}^{__CFHTTPMessage=}', '', {'retval': {'already_cfretained': True}}), 'CFHTTPMessageCopyVersion': (b'@^{__CFHTTPMessage=}', '', {'retval': {'already_cfretained': True}}), 'CFNetServiceCreate': (sel32or64(b'^{__CFNetService=}^{__CFAllocator=}@@@l', b'^{__CFNetService=}^{__CFAllocator=}@@@i'), '', {'retval': {'already_cfretained': True}}), 'CFNetServiceMonitorUnscheduleFromRunLoop': (b'v^{__CFNetServiceMonitor=}^{__CFRunLoop=}@',), 'CFHostScheduleWithRunLoop': (b'v^{__CFHost=}^{__CFRunLoop=}@',), 'CFNetServiceMonitorStart': (sel32or64(b'Z^{__CFNetServiceMonitor=}i^{_CFStreamError=ii}', b'Z^{__CFNetServiceMonitor=}i^{_CFStreamError=qi}'), '', {'arguments': {2: {'type_modifier': 'o'}}}), 'CFHostGetNames': (b'^{__CFArray=}^{__CFHost=}o^Z',), 'CFNetDiagnosticCopyNetworkStatusPassively': (b'l^{__CFNetDiagnostic=}^^{__CFString}', '', {'arguments': {1: {'type_modifier': 'o'}}}), 'CFHTTPMessageCopyResponseStatusLine': (b'@^{__CFHTTPMessage=}', '', {'retval': {'already_cfretained': True}}), 'CFNetDiagnosticDiagnoseProblemInteractively': (b'l^{__CFNetDiagnostic=}',), 'CFHTTPMessageAddAuthentication': (b'Z^{__CFHTTPMessage=}^{__CFHTTPMessage=}@@@Z',), 'CFNetworkExecuteProxyAutoConfigurationScript': (b'^{__CFRunLoopSource=}^{__CFString=}^{__CFURL=}^?^{CFStreamClientContext=l^v^?^?^?}', '', {'arguments': {2: {'function': {'args': [{'typestr': [u'^v', False]}, {'typestr': [u'^{__CFArray=}', False]}, {'typestr': [u'^{__CFError=}', False]}], 'retval': {'typestr': [u'v', False]}}}}}), 'CFNetDiagnosticCreateWithURL': (b'^{__CFNetDiagnostic=}^{__CFAllocator=}^{__CFURL=}', '', {'retval': {'already_cfretained': True}}), 'CFNetServiceGetDomain': (b'@^{__CFNetService=}',), 'CFFTPCreateParsedResourceListing': (b'l^{__CFAllocator=}^vl^^{__CFDictionary}', '', {'arguments': {1: {'c_array_length_in_arg': 2, 'type_modifier': 'n'}, 3: {'type_modifier': 'o'}}}), 'CFNetServiceGetTypeID': (b'L',), 'CFHTTPMessageCreateEmpty': (b'^{__CFHTTPMessage=}^{__CFAllocator=}Z', '', {'retval': {'already_cfretained': True}}), 'CFHTTPMessageAppendBytes': (b'Z^{__CFHTTPMessage=}^vl', '', {'arguments': {1: {'c_array_length_in_arg': 2, 'type_modifier': 'n'}}}), 'CFHostCancelInfoResolution': (b'v^{__CFHost=}i',), 'CFNetServiceBrowserSearchForServices': (sel32or64(b'Z^{__CFNetServiceBrowser=}@@^{_CFStreamError=ii}', b'Z^{__CFNetServiceBrowser=}@@^{_CFStreamError=qi}'), '', {'arguments': {3: {'type_modifier': 'o'}}}), 'CFHTTPAuthenticationIsValid': (sel32or64(b'Z^{_CFHTTPAuthentication=}^{_CFStreamError=ii}', b'Z^{_CFHTTPAuthentication=}^{_CFStreamError=qi}'), '', {'arguments': {1: {'type_modifier': 'o'}}}), 'CFHTTPReadStreamSetProxy': (b'v^{__CFReadStream=}@l',), 'CFHTTPAuthenticationAppliesToRequest': (b'Z^{_CFHTTPAuthentication=}^{__CFHTTPMessage=}',), 'CFNetServiceBrowserInvalidate': (b'v^{__CFNetServiceBrowser=}',), 'CFNetServiceGetAddressing': (b'^{__CFArray=}^{__CFNetService=}',), 'CFHTTPMessageSetHeaderFieldValue': (b'v^{__CFHTTPMessage=}@@',), 'CFNetServiceBrowserStopSearch': (sel32or64(b'v^{__CFNetServiceBrowser=}^{_CFStreamError=ii}', b'v^{__CFNetServiceBrowser=}^{_CFStreamError=qi}'), '', {'arguments': {1: {'type_modifier': 'o'}}}), 'CFHTTPMessageApplyCredentials': (sel32or64(b'Z^{__CFHTTPMessage=}^{_CFHTTPAuthentication=}@@^{_CFStreamError=ii}', b'Z^{__CFHTTPMessage=}^{_CFHTTPAuthentication=}@@^{_CFStreamError=qi}'), '', {'arguments': {4: {'type_modifier': 'o'}}}), 'CFHTTPReadStreamSetRedirectsAutomatically': (b'v^{__CFReadStream=}Z',), 'CFNetServiceRegisterWithOptions': (sel32or64(b'Z^{__CFNetService=}L^{_CFStreamError=ii}', b'Z^{__CFNetService=}L^{_CFStreamError=qi}'), '', {'arguments': {2: {'type_modifier': 'o'}}}), 'CFHTTPAuthenticationCopyMethod': (b'@^{_CFHTTPAuthentication=}', '', {'retval': {'already_cfretained': True}}), 'CFNetServiceBrowserCreate': (b'^{__CFNetServiceBrowser=}^{__CFAllocator=}^?^{CFNetServiceClientContext=l^v^?^?^?}', '', {'retval': {'already_cfretained': True}, 'arguments': {1: {'function': {'args': [{'typestr': [u'^{__CFNetServiceBrowser=}', False]}, {'typestr': [u'L', False]}, {'typestr': [u'@', True]}, {'typestr': [u'^{CFStreamError=li}', True]}, {'typestr': [u'^v', False]}], 'retval': {'typestr': [u'v', False]}}}}}), 'CFNetServiceGetTargetHost': (b'@^{__CFNetService=}',), 'CFNetworkCopyProxiesForAutoConfigurationScript': (b'^{__CFArray=}@^{__CFURL=}^^{__CFError}', '', {'retval': {'already_cfretained': True}, 'arguments': {2: {'already_cfretained': True, 'type_modifier': 'o', 'null_accepted': True}}}), 'CFNetServiceCreateDictionaryWithTXTData': (b'^{__CFDictionary=}^{__CFAllocator=}^{__CFData=}', '', {'retval': {'already_cfretained': True}}), 'CFNetServiceRegister': (sel32or64(b'Z^{__CFNetService=}^{_CFStreamError=ii}', b'Z^{__CFNetService=}^{_CFStreamError=qi}'), '', {'arguments': {1: {'type_modifier': 'o'}}}), 'CFNetServiceGetType': (b'@^{__CFNetService=}',), 'CFHostCreateCopy': (b'^{__CFHost=}^{__CFAllocator=}^{__CFHost=}', '', {'retval': {'already_cfretained': True}}), 'CFHTTPAuthenticationRequiresAccountDomain': (b'Z^{_CFHTTPAuthentication=}',), 'CFNetServiceSetTXTData': (b'Z^{__CFNetService=}^{__CFData=}',), 'CFNetworkCopyProxiesForURL': (b'^{__CFArray=}^{__CFURL=}^{__CFDictionary=}', '', {'retval': {'already_cfretained': True}}), 'CFReadStreamCreateForStreamedHTTPRequest': (b'^{__CFReadStream=}^{__CFAllocator=}^{__CFHTTPMessage=}^{__CFReadStream=}', '', {'retval': {'already_cfretained': True}}), 'CFReadStreamCreateForHTTPRequest': (b'^{__CFReadStream=}^{__CFAllocator=}^{__CFHTTPMessage=}', '', {'retval': {'already_cfretained': True}}), 'CFHTTPMessageCreateCopy': (b'^{__CFHTTPMessage=}^{__CFAllocator=}^{__CFHTTPMessage=}', '', {'retval': {'already_cfretained': True}}), 'CFHTTPMessageCopySerializedMessage': (b'^{__CFData=}^{__CFHTTPMessage=}', '', {'retval': {'already_cfretained': True}}), 'CFNetServiceScheduleWithRunLoop': (b'v^{__CFNetService=}^{__CFRunLoop=}@',), 'CFHTTPMessageCopyHeaderFieldValue': (b'@^{__CFHTTPMessage=}@', '', {'retval': {'already_cfretained': True}}), 'CFNetServiceGetTXTData': (b'^{__CFData=}^{__CFNetService=}',), 'CFHostStartInfoResolution': (sel32or64(b'Z^{__CFHost=}i^{_CFStreamError=ii}', b'Z^{__CFHost=}i^{_CFStreamError=qi}'), '', {'arguments': {2: {'type_modifier': 'o'}}}), 'CFHTTPAuthenticationRequiresUserNameAndPassword': (b'Z^{_CFHTTPAuthentication=}',), 'CFNetDiagnosticSetName': (b'v^{__CFNetDiagnostic=}@',), 'CFNetServiceCreateTXTDataWithDictionary': (b'^{__CFData=}^{__CFAllocator=}^{__CFDictionary=}', '', {'retval': {'already_cfretained': True}}), 'CFReadStreamCreateWithFTPURL': (b'^{__CFReadStream=}^{__CFAllocator=}^{__CFURL=}', '', {'retval': {'already_cfretained': True}}), 'CFNetServiceSetClient': (b'Z^{__CFNetService=}^?^{CFNetServiceClientContext=l^v^?^?^?}', '', {'arguments': {1: {'function': {'args': [{'typestr': [u'^{__CFNetService=}', False]}, {'typestr': [u'^{CFStreamError=li}', True]}, {'typestr': [u'^v', False]}], 'retval': {'typestr': [u'v', False]}}}}}), 'CFNetServiceMonitorScheduleWithRunLoop': (b'v^{__CFNetServiceMonitor=}^{__CFRunLoop=}@',), 'CFHostUnscheduleFromRunLoop': (b'v^{__CFHost=}^{__CFRunLoop=}@',), 'CFHTTPMessageApplyCredentialDictionary': (sel32or64(b'Z^{__CFHTTPMessage=}^{_CFHTTPAuthentication=}^{__CFDictionary=}^{_CFStreamError=ii}', b'Z^{__CFHTTPMessage=}^{_CFHTTPAuthentication=}^{__CFDictionary=}^{_CFStreamError=qi}'), '', {'arguments': {3: {'type_modifier': 'o'}}}), 'CFHTTPMessageIsRequest': (b'Z^{__CFHTTPMessage=}',), 'CFNetServiceResolve': (sel32or64(b'Z^{__CFNetService=}^{_CFStreamError=ii}', b'Z^{__CFNetService=}^{_CFStreamError=qi}'), '', {'arguments': {1: {'type_modifier': 'o'}}}), 'CFHTTPMessageCopyBody': (b'^{__CFData=}^{__CFHTTPMessage=}', '', {'retval': {'already_cfretained': True}}), 'CFNetServiceBrowserScheduleWithRunLoop': (b'v^{__CFNetServiceBrowser=}^{__CFRunLoop=}@',), 'CFHTTPMessageCreateResponse': (b'^{__CFHTTPMessage=}^{__CFAllocator=}l@@', '', {'retval': {'already_cfretained': True}}), 'CFHostGetTypeID': (b'L',), 'CFHTTPMessageCopyAllHeaderFields': (b'^{__CFDictionary=}^{__CFHTTPMessage=}', '', {'retval': {'already_cfretained': True}}), 'CFHTTPMessageGetResponseStatusCode': (b'l^{__CFHTTPMessage=}',), 'CFHTTPAuthenticationCopyDomains': (b'^{__CFArray=}^{_CFHTTPAuthentication=}', '', {'retval': {'already_cfretained': True}}), 'CFHTTPMessageCreateRequest': (b'^{__CFHTTPMessage=}^{__CFAllocator=}@^{__CFURL=}@', '', {'retval': {'already_cfretained': True}}), 'CFNetServiceSetProtocolSpecificInformation': (b'v^{__CFNetService=}@',), 'CFSocketStreamSOCKSGetErrorSubdomain': (sel32or64(b'l^{_CFStreamError=ii}', b'i^{_CFStreamError=qi}'), '', {'arguments': {0: {'type_modifier': 'o'}}}), 'CFStreamCreatePairWithSocketToCFHost': (sel32or64(b'v^{__CFAllocator=}^{__CFHost=}l^^{__CFReadStream}^^{__CFWriteStream}', b'v^{__CFAllocator=}^{__CFHost=}i^^{__CFReadStream}^^{__CFWriteStream}'), '', {'arguments': {3: {'already_cfretained': True, 'type_modifier': 'o'}, 4: {'already_cfretained': True, 'type_modifier': 'o'}}}), 'CFStreamCreatePairWithSocketToNetService': (b'v^{__CFAllocator=}^{__CFNetService=}^^{__CFReadStream}^^{__CFWriteStream}', '', {'arguments': {2: {'already_cfretained': True, 'type_modifier': 'o'}, 3: {'already_cfretained': True, 'type_modifier': 'o'}}}), 'CFNetServiceResolveWithTimeout': (sel32or64(b'Z^{__CFNetService=}d^{_CFStreamError=ii}', b'Z^{__CFNetService=}d^{_CFStreamError=qi}'), '', {'arguments': {2: {'type_modifier': 'o'}}}), 'CFHostSetClient': (b'Z^{__CFHost=}^?^{CFHostClientContext=l^v^?^?^?}', '', {'arguments': {1: {'function': {'args': [{'typestr': [u'^{__CFHost=}', False]}, {'typestr': [u'i', False]}, {'typestr': [u'^{CFStreamError=li}', True]}, {'typestr': [u'^v', False]}], 'retval': {'typestr': [u'v', False]}}}}})}
cftypes=[('CFHTTPMessageRef', b'^{__CFHTTPMessage=}', 'CFHTTPMessageGetTypeID', None), ('CFHostRef', b'^{__CFHost=}', 'CFHostGetTypeID', None), ('CFNetDiagnosticRef', b'^{__CFNetDiagnostic=}', 'CFNetDiagnosticGetTypeID', None), ('CFNetServiceBrowserRef', b'^{__CFNetServiceBrowser=}', 'CFNetServiceBrowserGetTypeID', None), ('CFNetServiceMonitorRef', b'^{__CFNetServiceMonitor=}', 'CFNetServiceMonitorGetTypeID', None), ('CFNetServiceRef', b'^{__CFNetService=}', 'CFNetServiceGetTypeID', None), ('CFHTTPAuthenticationRef', b'^{_CFHTTPAuthentication}', 'CFHTTPAuthenticationGetTypeID', None)]

# END OF FILE
