# This file is generated by objective.metadata
#
# Last update: Thu Feb 23 11:23:45 2012

import objc, sys

if sys.maxint > 2 ** 32:
    def sel32or64(a, b): return b
else:
    def sel32or64(a, b): return a
if sys.byteorder == 'little':
    def littleOrBig(a, b): return a
else:
    def littleOrBig(a, b): return b

misc = {
}
misc.update({'InstallerSection_Private': objc.createStructType('InstallerSection_Private', '{InstallerSection_Private=}', []), 'InstallerState_Private': objc.createStructType('InstallerState_Private', '{InstallerState_Private=}', []), 'InstallerPane_Private': objc.createStructType('InstallerPane_Private', '{InstallerPane_Private=}', [])})
constants = '''$InstallerState_Choice_CustomLocation$InstallerState_Choice_Identifier$InstallerState_Choice_Installed$'''
enums = '''$InstallerDirectionBackward@1$InstallerDirectionForward@0$InstallerDirectionUndefined@2$'''
misc.update({})
r = objc.registerMetaDataForSelector
objc._updatingMetadata(True)
try:
    r('InstallerPane', b'gotoNextPane', {'retval': {'type': 'Z'}})
    r('InstallerPane', b'gotoPreviousPane', {'retval': {'type': 'Z'}})
    r('InstallerPane', b'nextEnabled', {'retval': {'type': 'Z'}})
    r('InstallerPane', b'previousEnabled', {'retval': {'type': 'Z'}})
    r('InstallerPane', b'setNextEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('InstallerPane', b'setPreviousEnabled:', {'arguments': {2: {'type': 'Z'}}})
    r('InstallerPane', b'shouldExitPane:', {'retval': {'type': 'Z'}})
    r('InstallerSection', b'gotoPane:', {'retval': {'type': 'Z'}})
    r('InstallerSection', b'shouldLoad', {'retval': {'type': 'Z'}})
    r('InstallerState', b'installStarted', {'retval': {'type': 'Z'}})
    r('InstallerState', b'installSucceeded', {'retval': {'type': 'Z'}})
    r('InstallerState', b'licenseAgreed', {'retval': {'type': 'Z'}})
finally:
    objc._updatingMetadata(False)
expressions = {}

# END OF FILE
